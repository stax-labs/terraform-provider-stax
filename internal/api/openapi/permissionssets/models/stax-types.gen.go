// Package models provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package models

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	Sigv4Scopes = "sigv4.Scopes"
)

// Defines values for AssignmentRecordStatus.
const (
	CREATEREQUESTED      AssignmentRecordStatus = "CREATE_REQUESTED"
	DELETECOMPLETE       AssignmentRecordStatus = "DELETE_COMPLETE"
	DELETEFAILED         AssignmentRecordStatus = "DELETE_FAILED"
	DELETEINPROGRESS     AssignmentRecordStatus = "DELETE_IN_PROGRESS"
	DELETEREQUESTED      AssignmentRecordStatus = "DELETE_REQUESTED"
	DEPLOYMENTCOMPLETE   AssignmentRecordStatus = "DEPLOYMENT_COMPLETE"
	DEPLOYMENTFAILED     AssignmentRecordStatus = "DEPLOYMENT_FAILED"
	DEPLOYMENTINPROGRESS AssignmentRecordStatus = "DEPLOYMENT_IN_PROGRESS"
	UPDATEREQUESTED      AssignmentRecordStatus = "UPDATE_REQUESTED"
)

// Defines values for PermissionSetStatus.
const (
	PermissionSetStatusACTIVE  PermissionSetStatus = "ACTIVE"
	PermissionSetStatusDELETED PermissionSetStatus = "DELETED"
)

// Defines values for RoleRecordStatus.
const (
	RoleRecordStatusACTIVE           RoleRecordStatus = "ACTIVE"
	RoleRecordStatusUPDATEINPROGRESS RoleRecordStatus = "UPDATE_IN_PROGRESS"
)

// AWSManagedPolicyRecord defines model for AWSManagedPolicyRecord.
type AWSManagedPolicyRecord struct {
	Arn                           *string    `json:"Arn,omitempty"`
	AttachmentCount               *int64     `json:"AttachmentCount,omitempty"`
	CreateDate                    *time.Time `json:"CreateDate,omitempty"`
	DefaultVersionId              *string    `json:"DefaultVersionId,omitempty"`
	IsAttachable                  *bool      `json:"IsAttachable,omitempty"`
	Path                          *string    `json:"Path,omitempty"`
	PermissionsBoundaryUsageCount *int64     `json:"PermissionsBoundaryUsageCount,omitempty"`
	PolicyId                      *string    `json:"PolicyId,omitempty"`
	PolicyName                    string     `json:"PolicyName"`
	UpdateDate                    *time.Time `json:"UpdateDate,omitempty"`
}

// AssignmentRecord defines model for AssignmentRecord.
type AssignmentRecord struct {
	AccountTypeId ID        `json:"AccountTypeId"`
	CreatedBy     ID        `json:"CreatedBy"`
	CreatedTS     time.Time `json:"CreatedTS"`
	GroupId       ID        `json:"GroupId"`
	Id            ID        `json:"Id"`

	// ModifiedBy Stax User ID of the user that last modified the resource
	ModifiedBy *string `json:"ModifiedBy,omitempty"`

	// ModifiedTS The timestamp of when the last modification was made
	ModifiedTS      *time.Time             `json:"ModifiedTS,omitempty"`
	PermissionSetId ID                     `json:"PermissionSetId"`
	Status          AssignmentRecordStatus `json:"Status"`
}

// AssignmentRecordStatus defines model for AssignmentRecordStatus.
type AssignmentRecordStatus string

// AssignmentRecords defines model for AssignmentRecords.
type AssignmentRecords = []AssignmentRecord

// CreateAssignmentsRequest The assignments to create. Limited to 1 assignment
type CreateAssignmentsRequest = []struct {
	AccountTypeId ID `json:"AccountTypeId"`
	GroupId       ID `json:"GroupId"`
}

// CreatePermissionSetRecord defines model for CreatePermissionSetRecord.
type CreatePermissionSetRecord struct {
	AWSManagedPolicies *[]PermissionSetAWSManagedPolicy `json:"AWSManagedPolicies,omitempty"`
	Description        *string                          `json:"Description,omitempty"`
	InlinePolicies     *[]PermissionSetInlinePolicy     `json:"InlinePolicies,omitempty"`
	MaxSessionDuration *int                             `json:"MaxSessionDuration,omitempty"`

	// Name Name of the permission set. This will become the name of the role in an account, case sensitive. Prefixes 'stax' and 'idam' are not allowed.
	Name string `json:"Name"`

	// Tags Tags dictionary. Key must be <= 100 characters. Value <= 256. Pattern: ^[\w\s.:/=+-@]+$
	Tags *Tags `json:"Tags,omitempty"`
}

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code int32 `json:"Code"`

	// Message Error message
	Message string `json:"Message"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Error Error `json:"Error"`
}

// ID defines model for ID.
type ID = openapi_types.UUID

// ListAWSManagedPolicies defines model for ListAWSManagedPolicies.
type ListAWSManagedPolicies struct {
	AWSManagedPolicies []AWSManagedPolicyRecord `json:"AWSManagedPolicies"`
}

// ListAssignmentRecords defines model for ListAssignmentRecords.
type ListAssignmentRecords struct {
	Assignments AssignmentRecords `json:"Assignments"`
	Paging      *Paging           `json:"Paging,omitempty"`
}

// ListPermissionSets defines model for ListPermissionSets.
type ListPermissionSets struct {
	Paging         *Paging               `json:"Paging,omitempty"`
	PermissionSets []PermissionSetRecord `json:"PermissionSets"`
}

// ListRoles defines model for ListRoles.
type ListRoles struct {
	Paging *Paging      `json:"Paging,omitempty"`
	Roles  []RoleRecord `json:"Roles"`
}

// Paging defines model for Paging.
type Paging struct {
	// NextToken Pagination - The token value for requesting the next page to fetch.
	NextToken *string `json:"NextToken"`
}

// PermissionSetAWSManagedPolicy defines model for PermissionSetAWSManagedPolicy.
type PermissionSetAWSManagedPolicy struct {
	PolicyArn string `json:"PolicyArn"`
}

// PermissionSetInlinePolicy defines model for PermissionSetInlinePolicy.
type PermissionSetInlinePolicy struct {
	Name   string `json:"Name"`
	Policy string `json:"Policy"`
}

// PermissionSetRecord defines model for PermissionSetRecord.
type PermissionSetRecord struct {
	AWSManagedPolicies *[]PermissionSetAWSManagedPolicy `json:"AWSManagedPolicies"`

	// CreatedBy Stax User ID of the user that created the resource
	CreatedBy          string                       `json:"CreatedBy"`
	CreatedTS          time.Time                    `json:"CreatedTS"`
	Description        *string                      `json:"Description,omitempty"`
	Id                 ID                           `json:"Id"`
	InlinePolicies     *[]PermissionSetInlinePolicy `json:"InlinePolicies"`
	MaxSessionDuration *int                         `json:"MaxSessionDuration,omitempty"`

	// ModifiedBy Stax User ID of the user that last modified the resource
	ModifiedBy *string `json:"ModifiedBy,omitempty"`

	// ModifiedTS The timestamp of when the last modification was made
	ModifiedTS *time.Time          `json:"ModifiedTS,omitempty"`
	Name       string              `json:"Name"`
	Status     PermissionSetStatus `json:"Status"`

	// Tags Tags dictionary. Key must be <= 100 characters. Value <= 256. Pattern: ^[\w\s.:/=+-@]+$
	Tags *Tags `json:"Tags,omitempty"`
}

// PermissionSetStatus defines model for PermissionSetStatus.
type PermissionSetStatus string

// RoleRecord defines model for RoleRecord.
type RoleRecord struct {
	AWSAccountId    string           `json:"AWSAccountId"`
	AssignmentId    ID               `json:"AssignmentId"`
	DeploymentId    ID               `json:"DeploymentId"`
	PermissionSetId ID               `json:"PermissionSetId"`
	RoleArn         string           `json:"RoleArn"`
	RoleName        string           `json:"RoleName"`
	Status          RoleRecordStatus `json:"Status"`
}

// RoleRecordStatus defines model for RoleRecord.Status.
type RoleRecordStatus string

// Tags Tags dictionary. Key must be <= 100 characters. Value <= 256. Pattern: ^[\w\s.:/=+-@]+$
type Tags map[string]string

// UpdatePermissionSetRecord defines model for UpdatePermissionSetRecord.
type UpdatePermissionSetRecord struct {
	AWSManagedPolicies *[]PermissionSetAWSManagedPolicy `json:"AWSManagedPolicies,omitempty"`
	Description        *string                          `json:"Description,omitempty"`
	InlinePolicies     *[]PermissionSetInlinePolicy     `json:"InlinePolicies,omitempty"`
	MaxSessionDuration *int                             `json:"MaxSessionDuration,omitempty"`

	// Tags Tags dictionary. Key must be <= 100 characters. Value <= 256. Pattern: ^[\w\s.:/=+-@]+$
	Tags *Tags `json:"Tags,omitempty"`
}

// AccountID defines model for AccountID.
type AccountID = ID

// AssignmentID defines model for AssignmentID.
type AssignmentID = ID

// FilterAccountTypeID defines model for FilterAccountTypeID.
type FilterAccountTypeID = []ID

// FilterAssignmentStatus defines model for FilterAssignmentStatus.
type FilterAssignmentStatus = []AssignmentRecordStatus

// FilterCreatedBy defines model for FilterCreatedBy.
type FilterCreatedBy = []ID

// FilterGroupID defines model for FilterGroupID.
type FilterGroupID = []ID

// FilterStatus defines model for FilterStatus.
type FilterStatus = []PermissionSetStatus

// Limit defines model for Limit.
type Limit = int64

// PageToken defines model for PageToken.
type PageToken = string

// PermissionSetID defines model for PermissionSetID.
type PermissionSetID = ID

// ListPermissionSetsParams defines parameters for ListPermissionSets.
type ListPermissionSetsParams struct {
	// Limit Pagination. The maxmimum number of records to return
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// PageToken Encoded pagination token used to fetch the page of data.
	PageToken *PageToken `form:"page_token,omitempty" json:"page_token,omitempty"`

	// Status Filter the returned results by "Status"
	Status *FilterStatus `form:"status,omitempty" json:"status,omitempty"`

	// CreatedBy Filter the returned results using the "CreatedBy" attribute
	CreatedBy *FilterCreatedBy `form:"created_by,omitempty" json:"created_by,omitempty"`
}

// ListRolesParams defines parameters for ListRoles.
type ListRolesParams struct {
	// PageToken Encoded pagination token used to fetch the page of data.
	PageToken *PageToken `form:"page_token,omitempty" json:"page_token,omitempty"`

	// AccountId Stax Account ID
	AccountId *AccountID `form:"account_id,omitempty" json:"account_id,omitempty"`
}

// ListMyRolesParams defines parameters for ListMyRoles.
type ListMyRolesParams struct {
	// PageToken Encoded pagination token used to fetch the page of data.
	PageToken *PageToken `form:"page_token,omitempty" json:"page_token,omitempty"`

	// Limit Pagination. The maxmimum number of records to return
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListPermissionSetAssignmentsParams defines parameters for ListPermissionSetAssignments.
type ListPermissionSetAssignmentsParams struct {
	// Limit Pagination. The maxmimum number of records to return
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// PageToken Encoded pagination token used to fetch the page of data.
	PageToken *PageToken `form:"page_token,omitempty" json:"page_token,omitempty"`

	// Status Filter the returned results by "Status"
	Status *FilterAssignmentStatus `form:"status,omitempty" json:"status,omitempty"`

	// CreatedBy Filter the returned results using the "CreatedBy" attribute
	CreatedBy *FilterCreatedBy `form:"created_by,omitempty" json:"created_by,omitempty"`

	// Group Filter the returned results using the "GroupID" attribute
	Group *FilterGroupID `form:"group,omitempty" json:"group,omitempty"`

	// AccountType Filter the returned results using the "AccountTypeID" attribute
	AccountType *FilterAccountTypeID `form:"account_type,omitempty" json:"account_type,omitempty"`
}

// CreatePermissionSetJSONRequestBody defines body for CreatePermissionSet for application/json ContentType.
type CreatePermissionSetJSONRequestBody = CreatePermissionSetRecord

// UpdatePermissionSetJSONRequestBody defines body for UpdatePermissionSet for application/json ContentType.
type UpdatePermissionSetJSONRequestBody = UpdatePermissionSetRecord

// CreatePermissionSetAssignmentsJSONRequestBody defines body for CreatePermissionSetAssignments for application/json ContentType.
type CreatePermissionSetAssignmentsJSONRequestBody = CreateAssignmentsRequest
