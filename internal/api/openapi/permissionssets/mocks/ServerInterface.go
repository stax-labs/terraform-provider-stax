// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"

	models "github.com/stax-labs/terraform-provider-stax/internal/api/openapi/permissionssets/models"

	uuid "github.com/google/uuid"
)

// ServerInterface is an autogenerated mock type for the ServerInterface type
type ServerInterface struct {
	mock.Mock
}

// CreatePermissionSet provides a mock function with given fields: ctx
func (_m *ServerInterface) CreatePermissionSet(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for CreatePermissionSet")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreatePermissionSetAssignments provides a mock function with given fields: ctx, permissionSetId
func (_m *ServerInterface) CreatePermissionSetAssignments(ctx echo.Context, permissionSetId uuid.UUID) error {
	ret := _m.Called(ctx, permissionSetId)

	if len(ret) == 0 {
		panic("no return value specified for CreatePermissionSetAssignments")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, uuid.UUID) error); ok {
		r0 = rf(ctx, permissionSetId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeletePermissionSet provides a mock function with given fields: ctx, permissionSetId
func (_m *ServerInterface) DeletePermissionSet(ctx echo.Context, permissionSetId uuid.UUID) error {
	ret := _m.Called(ctx, permissionSetId)

	if len(ret) == 0 {
		panic("no return value specified for DeletePermissionSet")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, uuid.UUID) error); ok {
		r0 = rf(ctx, permissionSetId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeletePermissionSetAssignment provides a mock function with given fields: ctx, permissionSetId, assignmentId
func (_m *ServerInterface) DeletePermissionSetAssignment(ctx echo.Context, permissionSetId uuid.UUID, assignmentId uuid.UUID) error {
	ret := _m.Called(ctx, permissionSetId, assignmentId)

	if len(ret) == 0 {
		panic("no return value specified for DeletePermissionSetAssignment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, uuid.UUID, uuid.UUID) error); ok {
		r0 = rf(ctx, permissionSetId, assignmentId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAPIDocument provides a mock function with given fields: ctx
func (_m *ServerInterface) GetAPIDocument(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetAPIDocument")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetPermissionSet provides a mock function with given fields: ctx, permissionSetId
func (_m *ServerInterface) GetPermissionSet(ctx echo.Context, permissionSetId uuid.UUID) error {
	ret := _m.Called(ctx, permissionSetId)

	if len(ret) == 0 {
		panic("no return value specified for GetPermissionSet")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, uuid.UUID) error); ok {
		r0 = rf(ctx, permissionSetId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListAWSManagedPolicies provides a mock function with given fields: ctx
func (_m *ServerInterface) ListAWSManagedPolicies(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for ListAWSManagedPolicies")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListMyRoles provides a mock function with given fields: ctx, params
func (_m *ServerInterface) ListMyRoles(ctx echo.Context, params models.ListMyRolesParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for ListMyRoles")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.ListMyRolesParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListPermissionSetAssignments provides a mock function with given fields: ctx, permissionSetId, params
func (_m *ServerInterface) ListPermissionSetAssignments(ctx echo.Context, permissionSetId uuid.UUID, params models.ListPermissionSetAssignmentsParams) error {
	ret := _m.Called(ctx, permissionSetId, params)

	if len(ret) == 0 {
		panic("no return value specified for ListPermissionSetAssignments")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, uuid.UUID, models.ListPermissionSetAssignmentsParams) error); ok {
		r0 = rf(ctx, permissionSetId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListPermissionSets provides a mock function with given fields: ctx, params
func (_m *ServerInterface) ListPermissionSets(ctx echo.Context, params models.ListPermissionSetsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for ListPermissionSets")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.ListPermissionSetsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListRoles provides a mock function with given fields: ctx, params
func (_m *ServerInterface) ListRoles(ctx echo.Context, params models.ListRolesParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for ListRoles")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.ListRolesParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RedeployPermissionSetAssignment provides a mock function with given fields: ctx, permissionSetId, assignmentId
func (_m *ServerInterface) RedeployPermissionSetAssignment(ctx echo.Context, permissionSetId uuid.UUID, assignmentId uuid.UUID) error {
	ret := _m.Called(ctx, permissionSetId, assignmentId)

	if len(ret) == 0 {
		panic("no return value specified for RedeployPermissionSetAssignment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, uuid.UUID, uuid.UUID) error); ok {
		r0 = rf(ctx, permissionSetId, assignmentId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdatePermissionSet provides a mock function with given fields: ctx, permissionSetId
func (_m *ServerInterface) UpdatePermissionSet(ctx echo.Context, permissionSetId uuid.UUID) error {
	ret := _m.Called(ctx, permissionSetId)

	if len(ret) == 0 {
		panic("no return value specified for UpdatePermissionSet")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, uuid.UUID) error); ok {
		r0 = rf(ctx, permissionSetId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewServerInterface creates a new instance of ServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ServerInterface {
	mock := &ServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
