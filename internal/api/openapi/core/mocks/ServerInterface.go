// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"

	models "github.com/stax-labs/terraform-provider-stax/internal/api/openapi/core/models"
)

// ServerInterface is an autogenerated mock type for the ServerInterface type
type ServerInterface struct {
	mock.Mock
}

// AccountsCloseAccount provides a mock function with given fields: ctx
func (_m *ServerInterface) AccountsCloseAccount(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for AccountsCloseAccount")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsCreateAccount provides a mock function with given fields: ctx
func (_m *ServerInterface) AccountsCreateAccount(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for AccountsCreateAccount")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsCreateAccountType provides a mock function with given fields: ctx
func (_m *ServerInterface) AccountsCreateAccountType(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for AccountsCreateAccountType")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsDeleteAccountType provides a mock function with given fields: ctx, accountTypeId
func (_m *ServerInterface) AccountsDeleteAccountType(ctx echo.Context, accountTypeId string) error {
	ret := _m.Called(ctx, accountTypeId)

	if len(ret) == 0 {
		panic("no return value specified for AccountsDeleteAccountType")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, accountTypeId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsDiscoverAccount provides a mock function with given fields: ctx, awsAccountId
func (_m *ServerInterface) AccountsDiscoverAccount(ctx echo.Context, awsAccountId string) error {
	ret := _m.Called(ctx, awsAccountId)

	if len(ret) == 0 {
		panic("no return value specified for AccountsDiscoverAccount")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, awsAccountId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsDiscoverAccounts provides a mock function with given fields: ctx
func (_m *ServerInterface) AccountsDiscoverAccounts(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for AccountsDiscoverAccounts")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsOnboardAccount provides a mock function with given fields: ctx
func (_m *ServerInterface) AccountsOnboardAccount(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for AccountsOnboardAccount")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsReadAccount provides a mock function with given fields: ctx, accountId, params
func (_m *ServerInterface) AccountsReadAccount(ctx echo.Context, accountId string, params models.AccountsReadAccountParams) error {
	ret := _m.Called(ctx, accountId, params)

	if len(ret) == 0 {
		panic("no return value specified for AccountsReadAccount")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.AccountsReadAccountParams) error); ok {
		r0 = rf(ctx, accountId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsReadAccountType provides a mock function with given fields: ctx, accountTypeId, params
func (_m *ServerInterface) AccountsReadAccountType(ctx echo.Context, accountTypeId string, params models.AccountsReadAccountTypeParams) error {
	ret := _m.Called(ctx, accountTypeId, params)

	if len(ret) == 0 {
		panic("no return value specified for AccountsReadAccountType")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.AccountsReadAccountTypeParams) error); ok {
		r0 = rf(ctx, accountTypeId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsReadAccountTypes provides a mock function with given fields: ctx, params
func (_m *ServerInterface) AccountsReadAccountTypes(ctx echo.Context, params models.AccountsReadAccountTypesParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for AccountsReadAccountTypes")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.AccountsReadAccountTypesParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsReadAccounts provides a mock function with given fields: ctx, params
func (_m *ServerInterface) AccountsReadAccounts(ctx echo.Context, params models.AccountsReadAccountsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for AccountsReadAccounts")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.AccountsReadAccountsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsUpdateAccount provides a mock function with given fields: ctx, accountId
func (_m *ServerInterface) AccountsUpdateAccount(ctx echo.Context, accountId string) error {
	ret := _m.Called(ctx, accountId)

	if len(ret) == 0 {
		panic("no return value specified for AccountsUpdateAccount")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, accountId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsUpdateAccountType provides a mock function with given fields: ctx, accountTypeId
func (_m *ServerInterface) AccountsUpdateAccountType(ctx echo.Context, accountTypeId string) error {
	ret := _m.Called(ctx, accountTypeId)

	if len(ret) == 0 {
		panic("no return value specified for AccountsUpdateAccountType")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, accountTypeId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsUpdateAccountTypeAccess provides a mock function with given fields: ctx
func (_m *ServerInterface) AccountsUpdateAccountTypeAccess(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for AccountsUpdateAccountTypeAccess")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsUpdateAccountTypeMembers provides a mock function with given fields: ctx
func (_m *ServerInterface) AccountsUpdateAccountTypeMembers(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for AccountsUpdateAccountTypeMembers")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AccountsUpdateAccountTypePolicies provides a mock function with given fields: ctx
func (_m *ServerInterface) AccountsUpdateAccountTypePolicies(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for AccountsUpdateAccountTypePolicies")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateCidrExclusion provides a mock function with given fields: ctx, hubId
func (_m *ServerInterface) NetworkingCreateCidrExclusion(ctx echo.Context, hubId string) error {
	ret := _m.Called(ctx, hubId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateCidrExclusion")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, hubId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateCidrRange provides a mock function with given fields: ctx, hubId
func (_m *ServerInterface) NetworkingCreateCidrRange(ctx echo.Context, hubId string) error {
	ret := _m.Called(ctx, hubId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateCidrRange")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, hubId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateDnsResolver provides a mock function with given fields: ctx, hubId
func (_m *ServerInterface) NetworkingCreateDnsResolver(ctx echo.Context, hubId string) error {
	ret := _m.Called(ctx, hubId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateDnsResolver")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, hubId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateDnsRule provides a mock function with given fields: ctx, dnsResolverId
func (_m *ServerInterface) NetworkingCreateDnsRule(ctx echo.Context, dnsResolverId string) error {
	ret := _m.Called(ctx, dnsResolverId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateDnsRule")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dnsResolverId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateDxAssociation provides a mock function with given fields: ctx, dxGatewayId
func (_m *ServerInterface) NetworkingCreateDxAssociation(ctx echo.Context, dxGatewayId string) error {
	ret := _m.Called(ctx, dxGatewayId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateDxAssociation")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dxGatewayId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateDxResource provides a mock function with given fields: ctx
func (_m *ServerInterface) NetworkingCreateDxResource(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateDxResource")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateHub provides a mock function with given fields: ctx
func (_m *ServerInterface) NetworkingCreateHub(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateHub")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateHubPeering provides a mock function with given fields: ctx, networkingHubId
func (_m *ServerInterface) NetworkingCreateHubPeering(ctx echo.Context, networkingHubId string) error {
	ret := _m.Called(ctx, networkingHubId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateHubPeering")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, networkingHubId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateHubPrefixList provides a mock function with given fields: ctx, hubId
func (_m *ServerInterface) NetworkingCreateHubPrefixList(ctx echo.Context, hubId string) error {
	ret := _m.Called(ctx, hubId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateHubPrefixList")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, hubId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateVpc provides a mock function with given fields: ctx, hubId
func (_m *ServerInterface) NetworkingCreateVpc(ctx echo.Context, hubId string) error {
	ret := _m.Called(ctx, hubId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateVpc")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, hubId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateVpcPrefixList provides a mock function with given fields: ctx, hubId
func (_m *ServerInterface) NetworkingCreateVpcPrefixList(ctx echo.Context, hubId string) error {
	ret := _m.Called(ctx, hubId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateVpcPrefixList")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, hubId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateVpnConnection provides a mock function with given fields: ctx, vpnCustomerGatewayId
func (_m *ServerInterface) NetworkingCreateVpnConnection(ctx echo.Context, vpnCustomerGatewayId string) error {
	ret := _m.Called(ctx, vpnCustomerGatewayId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateVpnConnection")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, vpnCustomerGatewayId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingCreateVpnCustomerGateway provides a mock function with given fields: ctx
func (_m *ServerInterface) NetworkingCreateVpnCustomerGateway(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingCreateVpnCustomerGateway")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteCidrExclusion provides a mock function with given fields: ctx, exclusionId
func (_m *ServerInterface) NetworkingDeleteCidrExclusion(ctx echo.Context, exclusionId string) error {
	ret := _m.Called(ctx, exclusionId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteCidrExclusion")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, exclusionId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteCidrRange provides a mock function with given fields: ctx, rangeId
func (_m *ServerInterface) NetworkingDeleteCidrRange(ctx echo.Context, rangeId string) error {
	ret := _m.Called(ctx, rangeId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteCidrRange")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, rangeId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteDnsResolver provides a mock function with given fields: ctx, dnsResolverId
func (_m *ServerInterface) NetworkingDeleteDnsResolver(ctx echo.Context, dnsResolverId string) error {
	ret := _m.Called(ctx, dnsResolverId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteDnsResolver")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dnsResolverId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteDnsRule provides a mock function with given fields: ctx, dnsRuleId
func (_m *ServerInterface) NetworkingDeleteDnsRule(ctx echo.Context, dnsRuleId string) error {
	ret := _m.Called(ctx, dnsRuleId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteDnsRule")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dnsRuleId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteDxAssociation provides a mock function with given fields: ctx, dxAssociationId
func (_m *ServerInterface) NetworkingDeleteDxAssociation(ctx echo.Context, dxAssociationId string) error {
	ret := _m.Called(ctx, dxAssociationId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteDxAssociation")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dxAssociationId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteDxGateway provides a mock function with given fields: ctx, dxGatewayId
func (_m *ServerInterface) NetworkingDeleteDxGateway(ctx echo.Context, dxGatewayId string) error {
	ret := _m.Called(ctx, dxGatewayId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteDxGateway")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dxGatewayId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteDxVif provides a mock function with given fields: ctx, dxVifId
func (_m *ServerInterface) NetworkingDeleteDxVif(ctx echo.Context, dxVifId string) error {
	ret := _m.Called(ctx, dxVifId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteDxVif")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dxVifId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteHub provides a mock function with given fields: ctx, hubId
func (_m *ServerInterface) NetworkingDeleteHub(ctx echo.Context, hubId string) error {
	ret := _m.Called(ctx, hubId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteHub")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, hubId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteHubPeering provides a mock function with given fields: ctx, hubPeeringId
func (_m *ServerInterface) NetworkingDeleteHubPeering(ctx echo.Context, hubPeeringId string) error {
	ret := _m.Called(ctx, hubPeeringId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteHubPeering")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, hubPeeringId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeletePrefixList provides a mock function with given fields: ctx, prefixListId
func (_m *ServerInterface) NetworkingDeletePrefixList(ctx echo.Context, prefixListId string) error {
	ret := _m.Called(ctx, prefixListId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeletePrefixList")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, prefixListId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteVpc provides a mock function with given fields: ctx, vpcId
func (_m *ServerInterface) NetworkingDeleteVpc(ctx echo.Context, vpcId string) error {
	ret := _m.Called(ctx, vpcId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteVpc")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, vpcId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteVpnConnection provides a mock function with given fields: ctx, vpnConnectionId
func (_m *ServerInterface) NetworkingDeleteVpnConnection(ctx echo.Context, vpnConnectionId string) error {
	ret := _m.Called(ctx, vpnConnectionId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteVpnConnection")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, vpnConnectionId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingDeleteVpnCustomerGateway provides a mock function with given fields: ctx, vpnCustomerGatewayId
func (_m *ServerInterface) NetworkingDeleteVpnCustomerGateway(ctx echo.Context, vpnCustomerGatewayId string) error {
	ret := _m.Called(ctx, vpnCustomerGatewayId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingDeleteVpnCustomerGateway")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, vpnCustomerGatewayId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadCidrExclusion provides a mock function with given fields: ctx, exclusionId, params
func (_m *ServerInterface) NetworkingReadCidrExclusion(ctx echo.Context, exclusionId string, params models.NetworkingReadCidrExclusionParams) error {
	ret := _m.Called(ctx, exclusionId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadCidrExclusion")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadCidrExclusionParams) error); ok {
		r0 = rf(ctx, exclusionId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadCidrExclusions provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadCidrExclusions(ctx echo.Context, params models.NetworkingReadCidrExclusionsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadCidrExclusions")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadCidrExclusionsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadCidrRange provides a mock function with given fields: ctx, rangeId, params
func (_m *ServerInterface) NetworkingReadCidrRange(ctx echo.Context, rangeId string, params models.NetworkingReadCidrRangeParams) error {
	ret := _m.Called(ctx, rangeId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadCidrRange")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadCidrRangeParams) error); ok {
		r0 = rf(ctx, rangeId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadCidrRanges provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadCidrRanges(ctx echo.Context, params models.NetworkingReadCidrRangesParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadCidrRanges")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadCidrRangesParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDnsResolver provides a mock function with given fields: ctx, dnsResolverId, params
func (_m *ServerInterface) NetworkingReadDnsResolver(ctx echo.Context, dnsResolverId string, params models.NetworkingReadDnsResolverParams) error {
	ret := _m.Called(ctx, dnsResolverId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDnsResolver")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadDnsResolverParams) error); ok {
		r0 = rf(ctx, dnsResolverId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDnsResolvers provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadDnsResolvers(ctx echo.Context, params models.NetworkingReadDnsResolversParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDnsResolvers")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadDnsResolversParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDnsRule provides a mock function with given fields: ctx, dnsRuleId, params
func (_m *ServerInterface) NetworkingReadDnsRule(ctx echo.Context, dnsRuleId string, params models.NetworkingReadDnsRuleParams) error {
	ret := _m.Called(ctx, dnsRuleId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDnsRule")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadDnsRuleParams) error); ok {
		r0 = rf(ctx, dnsRuleId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDnsRules provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadDnsRules(ctx echo.Context, params models.NetworkingReadDnsRulesParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDnsRules")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadDnsRulesParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDxAssociation provides a mock function with given fields: ctx, dxAssociationId, params
func (_m *ServerInterface) NetworkingReadDxAssociation(ctx echo.Context, dxAssociationId string, params models.NetworkingReadDxAssociationParams) error {
	ret := _m.Called(ctx, dxAssociationId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDxAssociation")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadDxAssociationParams) error); ok {
		r0 = rf(ctx, dxAssociationId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDxAssociations provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadDxAssociations(ctx echo.Context, params models.NetworkingReadDxAssociationsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDxAssociations")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadDxAssociationsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDxConnections provides a mock function with given fields: ctx, accountId, params
func (_m *ServerInterface) NetworkingReadDxConnections(ctx echo.Context, accountId string, params models.NetworkingReadDxConnectionsParams) error {
	ret := _m.Called(ctx, accountId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDxConnections")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadDxConnectionsParams) error); ok {
		r0 = rf(ctx, accountId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDxGateway provides a mock function with given fields: ctx, dxGatewayId, params
func (_m *ServerInterface) NetworkingReadDxGateway(ctx echo.Context, dxGatewayId string, params models.NetworkingReadDxGatewayParams) error {
	ret := _m.Called(ctx, dxGatewayId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDxGateway")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadDxGatewayParams) error); ok {
		r0 = rf(ctx, dxGatewayId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDxGateways provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadDxGateways(ctx echo.Context, params models.NetworkingReadDxGatewaysParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDxGateways")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadDxGatewaysParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDxVif provides a mock function with given fields: ctx, dxVifId, params
func (_m *ServerInterface) NetworkingReadDxVif(ctx echo.Context, dxVifId string, params models.NetworkingReadDxVifParams) error {
	ret := _m.Called(ctx, dxVifId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDxVif")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadDxVifParams) error); ok {
		r0 = rf(ctx, dxVifId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDxVifStatus provides a mock function with given fields: ctx, dxVifId
func (_m *ServerInterface) NetworkingReadDxVifStatus(ctx echo.Context, dxVifId string) error {
	ret := _m.Called(ctx, dxVifId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDxVifStatus")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dxVifId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadDxVifs provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadDxVifs(ctx echo.Context, params models.NetworkingReadDxVifsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadDxVifs")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadDxVifsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadGatewayDxAssociations provides a mock function with given fields: ctx, dxGatewayId, params
func (_m *ServerInterface) NetworkingReadGatewayDxAssociations(ctx echo.Context, dxGatewayId string, params models.NetworkingReadGatewayDxAssociationsParams) error {
	ret := _m.Called(ctx, dxGatewayId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadGatewayDxAssociations")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadGatewayDxAssociationsParams) error); ok {
		r0 = rf(ctx, dxGatewayId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadGatewayDxVifs provides a mock function with given fields: ctx, dxGatewayId, params
func (_m *ServerInterface) NetworkingReadGatewayDxVifs(ctx echo.Context, dxGatewayId string, params models.NetworkingReadGatewayDxVifsParams) error {
	ret := _m.Called(ctx, dxGatewayId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadGatewayDxVifs")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadGatewayDxVifsParams) error); ok {
		r0 = rf(ctx, dxGatewayId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadGatewayVpnConnections provides a mock function with given fields: ctx, vpnCustomerGatewayId, params
func (_m *ServerInterface) NetworkingReadGatewayVpnConnections(ctx echo.Context, vpnCustomerGatewayId string, params models.NetworkingReadGatewayVpnConnectionsParams) error {
	ret := _m.Called(ctx, vpnCustomerGatewayId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadGatewayVpnConnections")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadGatewayVpnConnectionsParams) error); ok {
		r0 = rf(ctx, vpnCustomerGatewayId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHub provides a mock function with given fields: ctx, hubId, params
func (_m *ServerInterface) NetworkingReadHub(ctx echo.Context, hubId string, params models.NetworkingReadHubParams) error {
	ret := _m.Called(ctx, hubId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHub")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubParams) error); ok {
		r0 = rf(ctx, hubId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubCidrExclusions provides a mock function with given fields: ctx, hubId, params
func (_m *ServerInterface) NetworkingReadHubCidrExclusions(ctx echo.Context, hubId string, params models.NetworkingReadHubCidrExclusionsParams) error {
	ret := _m.Called(ctx, hubId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubCidrExclusions")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubCidrExclusionsParams) error); ok {
		r0 = rf(ctx, hubId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubCidrRanges provides a mock function with given fields: ctx, hubId, params
func (_m *ServerInterface) NetworkingReadHubCidrRanges(ctx echo.Context, hubId string, params models.NetworkingReadHubCidrRangesParams) error {
	ret := _m.Called(ctx, hubId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubCidrRanges")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubCidrRangesParams) error); ok {
		r0 = rf(ctx, hubId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubDnsResolvers provides a mock function with given fields: ctx, hubId, params
func (_m *ServerInterface) NetworkingReadHubDnsResolvers(ctx echo.Context, hubId string, params models.NetworkingReadHubDnsResolversParams) error {
	ret := _m.Called(ctx, hubId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubDnsResolvers")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubDnsResolversParams) error); ok {
		r0 = rf(ctx, hubId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubDxAssociations provides a mock function with given fields: ctx, hubId, params
func (_m *ServerInterface) NetworkingReadHubDxAssociations(ctx echo.Context, hubId string, params models.NetworkingReadHubDxAssociationsParams) error {
	ret := _m.Called(ctx, hubId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubDxAssociations")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubDxAssociationsParams) error); ok {
		r0 = rf(ctx, hubId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubDxGateways provides a mock function with given fields: ctx, hubId, params
func (_m *ServerInterface) NetworkingReadHubDxGateways(ctx echo.Context, hubId string, params models.NetworkingReadHubDxGatewaysParams) error {
	ret := _m.Called(ctx, hubId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubDxGateways")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubDxGatewaysParams) error); ok {
		r0 = rf(ctx, hubId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubHubPeerings provides a mock function with given fields: ctx, networkingHubId, params
func (_m *ServerInterface) NetworkingReadHubHubPeerings(ctx echo.Context, networkingHubId string, params models.NetworkingReadHubHubPeeringsParams) error {
	ret := _m.Called(ctx, networkingHubId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubHubPeerings")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubHubPeeringsParams) error); ok {
		r0 = rf(ctx, networkingHubId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubPeering provides a mock function with given fields: ctx, hubPeeringId, params
func (_m *ServerInterface) NetworkingReadHubPeering(ctx echo.Context, hubPeeringId string, params models.NetworkingReadHubPeeringParams) error {
	ret := _m.Called(ctx, hubPeeringId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubPeering")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubPeeringParams) error); ok {
		r0 = rf(ctx, hubPeeringId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubPeerings provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadHubPeerings(ctx echo.Context, params models.NetworkingReadHubPeeringsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubPeerings")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadHubPeeringsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubPrefixLists provides a mock function with given fields: ctx, hubId, params
func (_m *ServerInterface) NetworkingReadHubPrefixLists(ctx echo.Context, hubId string, params models.NetworkingReadHubPrefixListsParams) error {
	ret := _m.Called(ctx, hubId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubPrefixLists")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubPrefixListsParams) error); ok {
		r0 = rf(ctx, hubId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubVpcs provides a mock function with given fields: ctx, hubId, params
func (_m *ServerInterface) NetworkingReadHubVpcs(ctx echo.Context, hubId string, params models.NetworkingReadHubVpcsParams) error {
	ret := _m.Called(ctx, hubId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubVpcs")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubVpcsParams) error); ok {
		r0 = rf(ctx, hubId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubVpnConnections provides a mock function with given fields: ctx, hubId, params
func (_m *ServerInterface) NetworkingReadHubVpnConnections(ctx echo.Context, hubId string, params models.NetworkingReadHubVpnConnectionsParams) error {
	ret := _m.Called(ctx, hubId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubVpnConnections")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubVpnConnectionsParams) error); ok {
		r0 = rf(ctx, hubId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubVpnCustomerGateways provides a mock function with given fields: ctx, hubId, params
func (_m *ServerInterface) NetworkingReadHubVpnCustomerGateways(ctx echo.Context, hubId string, params models.NetworkingReadHubVpnCustomerGatewaysParams) error {
	ret := _m.Called(ctx, hubId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubVpnCustomerGateways")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadHubVpnCustomerGatewaysParams) error); ok {
		r0 = rf(ctx, hubId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadHubs provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadHubs(ctx echo.Context, params models.NetworkingReadHubsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadHubs")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadHubsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadPrefixList provides a mock function with given fields: ctx, prefixListId, params
func (_m *ServerInterface) NetworkingReadPrefixList(ctx echo.Context, prefixListId string, params models.NetworkingReadPrefixListParams) error {
	ret := _m.Called(ctx, prefixListId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadPrefixList")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadPrefixListParams) error); ok {
		r0 = rf(ctx, prefixListId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadPrefixLists provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadPrefixLists(ctx echo.Context, params models.NetworkingReadPrefixListsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadPrefixLists")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadPrefixListsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadResolverDnsRules provides a mock function with given fields: ctx, dnsResolverId, params
func (_m *ServerInterface) NetworkingReadResolverDnsRules(ctx echo.Context, dnsResolverId string, params models.NetworkingReadResolverDnsRulesParams) error {
	ret := _m.Called(ctx, dnsResolverId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadResolverDnsRules")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadResolverDnsRulesParams) error); ok {
		r0 = rf(ctx, dnsResolverId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadVpc provides a mock function with given fields: ctx, vpcId, params
func (_m *ServerInterface) NetworkingReadVpc(ctx echo.Context, vpcId string, params models.NetworkingReadVpcParams) error {
	ret := _m.Called(ctx, vpcId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadVpc")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadVpcParams) error); ok {
		r0 = rf(ctx, vpcId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadVpcs provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadVpcs(ctx echo.Context, params models.NetworkingReadVpcsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadVpcs")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadVpcsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadVpnConnection provides a mock function with given fields: ctx, vpnConnectionId, params
func (_m *ServerInterface) NetworkingReadVpnConnection(ctx echo.Context, vpnConnectionId string, params models.NetworkingReadVpnConnectionParams) error {
	ret := _m.Called(ctx, vpnConnectionId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadVpnConnection")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadVpnConnectionParams) error); ok {
		r0 = rf(ctx, vpnConnectionId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadVpnConnectionStatus provides a mock function with given fields: ctx, vpnConnectionId
func (_m *ServerInterface) NetworkingReadVpnConnectionStatus(ctx echo.Context, vpnConnectionId string) error {
	ret := _m.Called(ctx, vpnConnectionId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadVpnConnectionStatus")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, vpnConnectionId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadVpnConnections provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadVpnConnections(ctx echo.Context, params models.NetworkingReadVpnConnectionsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadVpnConnections")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadVpnConnectionsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadVpnCustomerGateway provides a mock function with given fields: ctx, vpnCustomerGatewayId, params
func (_m *ServerInterface) NetworkingReadVpnCustomerGateway(ctx echo.Context, vpnCustomerGatewayId string, params models.NetworkingReadVpnCustomerGatewayParams) error {
	ret := _m.Called(ctx, vpnCustomerGatewayId, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadVpnCustomerGateway")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.NetworkingReadVpnCustomerGatewayParams) error); ok {
		r0 = rf(ctx, vpnCustomerGatewayId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingReadVpnCustomerGateways provides a mock function with given fields: ctx, params
func (_m *ServerInterface) NetworkingReadVpnCustomerGateways(ctx echo.Context, params models.NetworkingReadVpnCustomerGatewaysParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingReadVpnCustomerGateways")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.NetworkingReadVpnCustomerGatewaysParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateCidrExclusion provides a mock function with given fields: ctx, exclusionId
func (_m *ServerInterface) NetworkingUpdateCidrExclusion(ctx echo.Context, exclusionId string) error {
	ret := _m.Called(ctx, exclusionId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateCidrExclusion")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, exclusionId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateCidrRange provides a mock function with given fields: ctx, rangeId
func (_m *ServerInterface) NetworkingUpdateCidrRange(ctx echo.Context, rangeId string) error {
	ret := _m.Called(ctx, rangeId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateCidrRange")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, rangeId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateDnsResolver provides a mock function with given fields: ctx, dnsResolverId
func (_m *ServerInterface) NetworkingUpdateDnsResolver(ctx echo.Context, dnsResolverId string) error {
	ret := _m.Called(ctx, dnsResolverId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateDnsResolver")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dnsResolverId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateDnsRule provides a mock function with given fields: ctx, dnsRuleId
func (_m *ServerInterface) NetworkingUpdateDnsRule(ctx echo.Context, dnsRuleId string) error {
	ret := _m.Called(ctx, dnsRuleId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateDnsRule")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dnsRuleId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateDxAssociation provides a mock function with given fields: ctx, dxAssociationId
func (_m *ServerInterface) NetworkingUpdateDxAssociation(ctx echo.Context, dxAssociationId string) error {
	ret := _m.Called(ctx, dxAssociationId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateDxAssociation")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dxAssociationId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateDxVif provides a mock function with given fields: ctx, dxVifId
func (_m *ServerInterface) NetworkingUpdateDxVif(ctx echo.Context, dxVifId string) error {
	ret := _m.Called(ctx, dxVifId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateDxVif")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, dxVifId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateHub provides a mock function with given fields: ctx, hubId
func (_m *ServerInterface) NetworkingUpdateHub(ctx echo.Context, hubId string) error {
	ret := _m.Called(ctx, hubId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateHub")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, hubId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateHubPeering provides a mock function with given fields: ctx, hubPeeringId
func (_m *ServerInterface) NetworkingUpdateHubPeering(ctx echo.Context, hubPeeringId string) error {
	ret := _m.Called(ctx, hubPeeringId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateHubPeering")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, hubPeeringId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateHubPrefixListAssociation provides a mock function with given fields: ctx, prefixListId
func (_m *ServerInterface) NetworkingUpdateHubPrefixListAssociation(ctx echo.Context, prefixListId string) error {
	ret := _m.Called(ctx, prefixListId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateHubPrefixListAssociation")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, prefixListId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdatePrefixList provides a mock function with given fields: ctx, prefixListId
func (_m *ServerInterface) NetworkingUpdatePrefixList(ctx echo.Context, prefixListId string) error {
	ret := _m.Called(ctx, prefixListId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdatePrefixList")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, prefixListId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateVpc provides a mock function with given fields: ctx, vpcId
func (_m *ServerInterface) NetworkingUpdateVpc(ctx echo.Context, vpcId string) error {
	ret := _m.Called(ctx, vpcId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateVpc")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, vpcId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateVpcPrefixListAssociation provides a mock function with given fields: ctx, prefixListId
func (_m *ServerInterface) NetworkingUpdateVpcPrefixListAssociation(ctx echo.Context, prefixListId string) error {
	ret := _m.Called(ctx, prefixListId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateVpcPrefixListAssociation")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, prefixListId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateVpnConnection provides a mock function with given fields: ctx, vpnConnectionId
func (_m *ServerInterface) NetworkingUpdateVpnConnection(ctx echo.Context, vpnConnectionId string) error {
	ret := _m.Called(ctx, vpnConnectionId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateVpnConnection")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, vpnConnectionId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NetworkingUpdateVpnCustomerGateway provides a mock function with given fields: ctx, vpnCustomerGatewayId
func (_m *ServerInterface) NetworkingUpdateVpnCustomerGateway(ctx echo.Context, vpnCustomerGatewayId string) error {
	ret := _m.Called(ctx, vpnCustomerGatewayId)

	if len(ret) == 0 {
		panic("no return value specified for NetworkingUpdateVpnCustomerGateway")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, vpnCustomerGatewayId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OrganisationsAttachPolicy provides a mock function with given fields: ctx, policyId
func (_m *ServerInterface) OrganisationsAttachPolicy(ctx echo.Context, policyId string) error {
	ret := _m.Called(ctx, policyId)

	if len(ret) == 0 {
		panic("no return value specified for OrganisationsAttachPolicy")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, policyId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OrganisationsCreatePolicy provides a mock function with given fields: ctx
func (_m *ServerInterface) OrganisationsCreatePolicy(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for OrganisationsCreatePolicy")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OrganisationsDeletePolicy provides a mock function with given fields: ctx, policyId
func (_m *ServerInterface) OrganisationsDeletePolicy(ctx echo.Context, policyId string) error {
	ret := _m.Called(ctx, policyId)

	if len(ret) == 0 {
		panic("no return value specified for OrganisationsDeletePolicy")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, policyId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OrganisationsDetachPolicy provides a mock function with given fields: ctx, policyId
func (_m *ServerInterface) OrganisationsDetachPolicy(ctx echo.Context, policyId string) error {
	ret := _m.Called(ctx, policyId)

	if len(ret) == 0 {
		panic("no return value specified for OrganisationsDetachPolicy")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, policyId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OrganisationsReadOrganisation provides a mock function with given fields: ctx
func (_m *ServerInterface) OrganisationsReadOrganisation(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for OrganisationsReadOrganisation")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OrganisationsReadOrganisationalUnit provides a mock function with given fields: ctx, organisationalUnitId
func (_m *ServerInterface) OrganisationsReadOrganisationalUnit(ctx echo.Context, organisationalUnitId string) error {
	ret := _m.Called(ctx, organisationalUnitId)

	if len(ret) == 0 {
		panic("no return value specified for OrganisationsReadOrganisationalUnit")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, organisationalUnitId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OrganisationsReadOrganisationalUnits provides a mock function with given fields: ctx, params
func (_m *ServerInterface) OrganisationsReadOrganisationalUnits(ctx echo.Context, params models.OrganisationsReadOrganisationalUnitsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for OrganisationsReadOrganisationalUnits")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.OrganisationsReadOrganisationalUnitsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OrganisationsReadOrganisations provides a mock function with given fields: ctx
func (_m *ServerInterface) OrganisationsReadOrganisations(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for OrganisationsReadOrganisations")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OrganisationsReadPolicies provides a mock function with given fields: ctx, params
func (_m *ServerInterface) OrganisationsReadPolicies(ctx echo.Context, params models.OrganisationsReadPoliciesParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for OrganisationsReadPolicies")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.OrganisationsReadPoliciesParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OrganisationsReadPolicy provides a mock function with given fields: ctx, policyId
func (_m *ServerInterface) OrganisationsReadPolicy(ctx echo.Context, policyId string) error {
	ret := _m.Called(ctx, policyId)

	if len(ret) == 0 {
		panic("no return value specified for OrganisationsReadPolicy")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, policyId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OrganisationsUpdatePolicy provides a mock function with given fields: ctx, policyId
func (_m *ServerInterface) OrganisationsUpdatePolicy(ctx echo.Context, policyId string) error {
	ret := _m.Called(ctx, policyId)

	if len(ret) == 0 {
		panic("no return value specified for OrganisationsUpdatePolicy")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, policyId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PublicCheckAlias provides a mock function with given fields: ctx, alias
func (_m *ServerInterface) PublicCheckAlias(ctx echo.Context, alias string) error {
	ret := _m.Called(ctx, alias)

	if len(ret) == 0 {
		panic("no return value specified for PublicCheckAlias")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, alias)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PublicReadConfig provides a mock function with given fields: ctx
func (_m *ServerInterface) PublicReadConfig(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for PublicReadConfig")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ServicesConfigureSecurityHub provides a mock function with given fields: ctx
func (_m *ServerInterface) ServicesConfigureSecurityHub(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for ServicesConfigureSecurityHub")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ServicesReadConfigurations provides a mock function with given fields: ctx
func (_m *ServerInterface) ServicesReadConfigurations(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for ServicesReadConfigurations")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ServicesReadSecurityHubConfiguration provides a mock function with given fields: ctx
func (_m *ServerInterface) ServicesReadSecurityHubConfiguration(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for ServicesReadSecurityHubConfiguration")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TasksReadTask provides a mock function with given fields: ctx, taskId
func (_m *ServerInterface) TasksReadTask(ctx echo.Context, taskId string) error {
	ret := _m.Called(ctx, taskId)

	if len(ret) == 0 {
		panic("no return value specified for TasksReadTask")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, taskId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsCreateApiToken provides a mock function with given fields: ctx
func (_m *ServerInterface) TeamsCreateApiToken(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for TeamsCreateApiToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsCreateGroup provides a mock function with given fields: ctx
func (_m *ServerInterface) TeamsCreateGroup(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for TeamsCreateGroup")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsCreateUser provides a mock function with given fields: ctx
func (_m *ServerInterface) TeamsCreateUser(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for TeamsCreateUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsDeleteApiToken provides a mock function with given fields: ctx, accessKey
func (_m *ServerInterface) TeamsDeleteApiToken(ctx echo.Context, accessKey string) error {
	ret := _m.Called(ctx, accessKey)

	if len(ret) == 0 {
		panic("no return value specified for TeamsDeleteApiToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, accessKey)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsDeleteGroup provides a mock function with given fields: ctx, groupId
func (_m *ServerInterface) TeamsDeleteGroup(ctx echo.Context, groupId string) error {
	ret := _m.Called(ctx, groupId)

	if len(ret) == 0 {
		panic("no return value specified for TeamsDeleteGroup")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, groupId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsDeleteUser provides a mock function with given fields: ctx, userId
func (_m *ServerInterface) TeamsDeleteUser(ctx echo.Context, userId string) error {
	ret := _m.Called(ctx, userId)

	if len(ret) == 0 {
		panic("no return value specified for TeamsDeleteUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsFetchCurrentUser provides a mock function with given fields: ctx
func (_m *ServerInterface) TeamsFetchCurrentUser(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for TeamsFetchCurrentUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsReadApiToken provides a mock function with given fields: ctx, accessKey, params
func (_m *ServerInterface) TeamsReadApiToken(ctx echo.Context, accessKey string, params models.TeamsReadApiTokenParams) error {
	ret := _m.Called(ctx, accessKey, params)

	if len(ret) == 0 {
		panic("no return value specified for TeamsReadApiToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.TeamsReadApiTokenParams) error); ok {
		r0 = rf(ctx, accessKey, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsReadApiTokens provides a mock function with given fields: ctx, params
func (_m *ServerInterface) TeamsReadApiTokens(ctx echo.Context, params models.TeamsReadApiTokensParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for TeamsReadApiTokens")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.TeamsReadApiTokensParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsReadGroup provides a mock function with given fields: ctx, groupId
func (_m *ServerInterface) TeamsReadGroup(ctx echo.Context, groupId string) error {
	ret := _m.Called(ctx, groupId)

	if len(ret) == 0 {
		panic("no return value specified for TeamsReadGroup")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, groupId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsReadGroups provides a mock function with given fields: ctx, params
func (_m *ServerInterface) TeamsReadGroups(ctx echo.Context, params models.TeamsReadGroupsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for TeamsReadGroups")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.TeamsReadGroupsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsReadIdamUser provides a mock function with given fields: ctx, orgId
func (_m *ServerInterface) TeamsReadIdamUser(ctx echo.Context, orgId string) error {
	ret := _m.Called(ctx, orgId)

	if len(ret) == 0 {
		panic("no return value specified for TeamsReadIdamUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, orgId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsReadIdamUsers provides a mock function with given fields: ctx
func (_m *ServerInterface) TeamsReadIdamUsers(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for TeamsReadIdamUsers")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsReadUser provides a mock function with given fields: ctx, userId
func (_m *ServerInterface) TeamsReadUser(ctx echo.Context, userId string) error {
	ret := _m.Called(ctx, userId)

	if len(ret) == 0 {
		panic("no return value specified for TeamsReadUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsReadUsers provides a mock function with given fields: ctx, params
func (_m *ServerInterface) TeamsReadUsers(ctx echo.Context, params models.TeamsReadUsersParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for TeamsReadUsers")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.TeamsReadUsersParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsUpdateApiToken provides a mock function with given fields: ctx, accessKey
func (_m *ServerInterface) TeamsUpdateApiToken(ctx echo.Context, accessKey string) error {
	ret := _m.Called(ctx, accessKey)

	if len(ret) == 0 {
		panic("no return value specified for TeamsUpdateApiToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, accessKey)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsUpdateGroup provides a mock function with given fields: ctx, groupId
func (_m *ServerInterface) TeamsUpdateGroup(ctx echo.Context, groupId string) error {
	ret := _m.Called(ctx, groupId)

	if len(ret) == 0 {
		panic("no return value specified for TeamsUpdateGroup")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, groupId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsUpdateGroupMembers provides a mock function with given fields: ctx
func (_m *ServerInterface) TeamsUpdateGroupMembers(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for TeamsUpdateGroupMembers")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsUpdateUser provides a mock function with given fields: ctx, userId
func (_m *ServerInterface) TeamsUpdateUser(ctx echo.Context, userId string) error {
	ret := _m.Called(ctx, userId)

	if len(ret) == 0 {
		panic("no return value specified for TeamsUpdateUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsUpdateUserInvite provides a mock function with given fields: ctx, userId
func (_m *ServerInterface) TeamsUpdateUserInvite(ctx echo.Context, userId string) error {
	ret := _m.Called(ctx, userId)

	if len(ret) == 0 {
		panic("no return value specified for TeamsUpdateUserInvite")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TeamsUpdateUserPassword provides a mock function with given fields: ctx, userId
func (_m *ServerInterface) TeamsUpdateUserPassword(ctx echo.Context, userId string) error {
	ret := _m.Called(ctx, userId)

	if len(ret) == 0 {
		panic("no return value specified for TeamsUpdateUserPassword")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsCreateCatalogueItem provides a mock function with given fields: ctx
func (_m *ServerInterface) WorkloadsCreateCatalogueItem(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsCreateCatalogueItem")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsCreateCatalogueVersion provides a mock function with given fields: ctx, catalogueId
func (_m *ServerInterface) WorkloadsCreateCatalogueVersion(ctx echo.Context, catalogueId string) error {
	ret := _m.Called(ctx, catalogueId)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsCreateCatalogueVersion")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, catalogueId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsCreateWorkload provides a mock function with given fields: ctx
func (_m *ServerInterface) WorkloadsCreateWorkload(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsCreateWorkload")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsDeleteCatalogueItem provides a mock function with given fields: ctx, catalogueId
func (_m *ServerInterface) WorkloadsDeleteCatalogueItem(ctx echo.Context, catalogueId string) error {
	ret := _m.Called(ctx, catalogueId)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsDeleteCatalogueItem")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, catalogueId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsDeleteCatalogueVersion provides a mock function with given fields: ctx, catalogueId, versionId
func (_m *ServerInterface) WorkloadsDeleteCatalogueVersion(ctx echo.Context, catalogueId string, versionId string) error {
	ret := _m.Called(ctx, catalogueId, versionId)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsDeleteCatalogueVersion")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, string) error); ok {
		r0 = rf(ctx, catalogueId, versionId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsDeleteWorkload provides a mock function with given fields: ctx, workloadId
func (_m *ServerInterface) WorkloadsDeleteWorkload(ctx echo.Context, workloadId string) error {
	ret := _m.Called(ctx, workloadId)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsDeleteWorkload")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, workloadId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsReadCatalogueItem provides a mock function with given fields: ctx, catalogueId, params
func (_m *ServerInterface) WorkloadsReadCatalogueItem(ctx echo.Context, catalogueId string, params models.WorkloadsReadCatalogueItemParams) error {
	ret := _m.Called(ctx, catalogueId, params)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsReadCatalogueItem")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.WorkloadsReadCatalogueItemParams) error); ok {
		r0 = rf(ctx, catalogueId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsReadCatalogueItems provides a mock function with given fields: ctx, params
func (_m *ServerInterface) WorkloadsReadCatalogueItems(ctx echo.Context, params models.WorkloadsReadCatalogueItemsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsReadCatalogueItems")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.WorkloadsReadCatalogueItemsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsReadCatalogueManifest provides a mock function with given fields: ctx, versionId
func (_m *ServerInterface) WorkloadsReadCatalogueManifest(ctx echo.Context, versionId string) error {
	ret := _m.Called(ctx, versionId)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsReadCatalogueManifest")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, versionId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsReadCatalogueTemplate provides a mock function with given fields: ctx, versionId, name
func (_m *ServerInterface) WorkloadsReadCatalogueTemplate(ctx echo.Context, versionId string, name string) error {
	ret := _m.Called(ctx, versionId, name)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsReadCatalogueTemplate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, string) error); ok {
		r0 = rf(ctx, versionId, name)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsReadCatalogueVersion provides a mock function with given fields: ctx, catalogueId, versionId, params
func (_m *ServerInterface) WorkloadsReadCatalogueVersion(ctx echo.Context, catalogueId string, versionId string, params models.WorkloadsReadCatalogueVersionParams) error {
	ret := _m.Called(ctx, catalogueId, versionId, params)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsReadCatalogueVersion")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, string, models.WorkloadsReadCatalogueVersionParams) error); ok {
		r0 = rf(ctx, catalogueId, versionId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsReadWorkload provides a mock function with given fields: ctx, workloadId, params
func (_m *ServerInterface) WorkloadsReadWorkload(ctx echo.Context, workloadId string, params models.WorkloadsReadWorkloadParams) error {
	ret := _m.Called(ctx, workloadId, params)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsReadWorkload")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, models.WorkloadsReadWorkloadParams) error); ok {
		r0 = rf(ctx, workloadId, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsReadWorkloads provides a mock function with given fields: ctx, params
func (_m *ServerInterface) WorkloadsReadWorkloads(ctx echo.Context, params models.WorkloadsReadWorkloadsParams) error {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsReadWorkloads")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, models.WorkloadsReadWorkloadsParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsUpdateAll provides a mock function with given fields: ctx
func (_m *ServerInterface) WorkloadsUpdateAll(ctx echo.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsUpdateAll")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WorkloadsUpdateWorkload provides a mock function with given fields: ctx, workloadId
func (_m *ServerInterface) WorkloadsUpdateWorkload(ctx echo.Context, workloadId string) error {
	ret := _m.Called(ctx, workloadId)

	if len(ret) == 0 {
		panic("no return value specified for WorkloadsUpdateWorkload")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string) error); ok {
		r0 = rf(ctx, workloadId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewServerInterface creates a new instance of ServerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewServerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ServerInterface {
	mock := &ServerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
