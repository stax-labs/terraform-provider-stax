{
    "components": {
        "requestBodies": {},
        "responses": {},
        "schemas": {
            "Account": {
                "properties": {
                    "AWSLoginURLs": {
                        "properties": {
                            "admin": {
                                "type": "string"
                            },
                            "developer": {
                                "type": "string"
                            },
                            "readonly": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "AccountRole": {
                        "description": "The role of the account in the org",
                        "enum": [
                            "MEMBER",
                            "MANAGEMENT",
                            "MANAGEMENT_RESELL",
                            "SECURITY",
                            "LOGGING"
                        ],
                        "example": "MEMBER",
                        "readOnly": true,
                        "type": "string"
                    },
                    "AccountType": {
                        "nullable": true,
                        "type": "string"
                    },
                    "AllocatedTS": {
                        "description": "Allocated timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "AssuranceState": {
                        "description": "Hardening state of the Account.",
                        "enum": [
                            "NONE",
                            "UPDATING",
                            "ACTIVE",
                            "ERROR"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "AssuranceStateReason": {
                        "description": "Descriptive reason for the current AssuranceState.",
                        "example": "AWS GuardDuty Hardening has failed",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "AwsAccountAlias": {
                        "description": "The IAM alias for the account",
                        "maxLength": 48,
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                    },
                    "AwsAccountCanonicalUserId": {
                        "description": "The Canonical User ID of the account",
                        "example": "79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be",
                        "maxLength": 64,
                        "minLength": 64,
                        "readOnly": true,
                        "type": "string"
                    },
                    "AwsAccountId": {
                        "description": "AWS Account Id.",
                        "example": "012345678901",
                        "maxLength": 12,
                        "minLength": 12,
                        "readOnly": true,
                        "type": "string"
                    },
                    "AwsAccountStatusId": {
                        "nullable": true,
                        "type": "string"
                    },
                    "AwsLoginURL": {
                        "type": "string"
                    },
                    "CreatedBy": {
                        "description": "UUID of the account creator.",
                        "example": "ec5eaa8f-da06-4935-b5ce-05bd957c8bdc",
                        "nullable": true,
                        "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                        "readOnly": true,
                        "type": "string"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Email": {
                        "description": "Email address of account owner.",
                        "example": "stax.user@example.com",
                        "format": "email",
                        "maxLength": 128,
                        "minLength": 6,
                        "readOnly": true,
                        "type": "string"
                    },
                    "FactoryVersion": {
                        "$ref": "#\/components\/schemas\/GitHash"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "LatestCost": {
                        "description": "Estimated cost to-date for the current billing period.",
                        "example": 72.52,
                        "readOnly": true,
                        "type": "number"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2019-03-11T01:11:40.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Account.",
                        "example": "bakery",
                        "maxLength": 64,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9+\\-=._:\/@ ]*$",
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "OrgsOuId": {
                        "nullable": true,
                        "type": "string"
                    },
                    "Origin": {
                        "description": "Origin of the Account.",
                        "enum": [
                            "STAX",
                            "EXTERNAL"
                        ],
                        "example": "STAX",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Status": {
                        "description": "Status of the Account.",
                        "enum": [
                            "ACTIVE",
                            "AWSERROR",
                            "CLOSED",
                            "DISCOVERED",
                            "ERROR",
                            "INITIALIZING",
                            "MAINTENANCE",
                            "NEW",
                            "NOAWS",
                            "SUSPENDED",
                            "OFFBOARDED",
                            "ONBOARDING",
                            "INACTIVE"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "StaxCreated": {
                        "type": "boolean"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/StaxTags"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    }
                },
                "required": [
                    "Id",
                    "OrganisationId",
                    "Name"
                ],
                "type": "object"
            },
            "AccountType": {
                "additionalProperties": false,
                "properties": {
                    "Accounts": {
                        "example": [],
                        "items": {
                            "$ref": "#\/components\/schemas\/ro-uuidv4"
                        },
                        "type": "array"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of Account Type.",
                        "example": "Development",
                        "maxLength": 64,
                        "minLength": 3,
                        "pattern": "^[a-zA-Z0-9+\\-=._:\/@ ]*$",
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Policies": {
                        "example": [],
                        "items": {
                            "$ref": "#\/components\/schemas\/ro-uuidv4"
                        },
                        "type": "array"
                    },
                    "Roles": {
                        "example": [],
                        "items": {
                            "additionalProperties": false,
                            "properties": {
                                "GroupId": {
                                    "$ref": "#\/components\/schemas\/ro-uuidv4"
                                },
                                "RoleName": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "GroupId",
                                "RoleName"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Status": {
                        "enum": [
                            "ACTIVE",
                            "DELETED"
                        ],
                        "example": "ACTIVE"
                    },
                    "StaxCreated": {
                        "nullable": true,
                        "type": "boolean"
                    }
                },
                "required": [
                    "Id",
                    "OrganisationId",
                    "Name",
                    "Status",
                    "Accounts",
                    "Policies",
                    "Roles"
                ],
                "type": "object"
            },
            "AccountTypeAccessMap": {
                "additionalProperties": false,
                "anyOf": [
                    {
                        "required": [
                            "AccountTypeId",
                            "GroupId",
                            "RoleName"
                        ]
                    },
                    {
                        "required": [
                            "AccountTypeName",
                            "GroupId",
                            "RoleName"
                        ]
                    },
                    {
                        "required": [
                            "AccountTypeId",
                            "GroupName",
                            "RoleName"
                        ]
                    },
                    {
                        "required": [
                            "AccountTypeName",
                            "GroupName",
                            "RoleName"
                        ]
                    }
                ],
                "properties": {
                    "AccountTypeId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "AccountTypeName": {
                        "type": "string"
                    },
                    "GroupId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "GroupName": {
                        "type": "string"
                    },
                    "RoleName": {
                        "description": "AWS access roles enabled for an account type.",
                        "enum": [
                            "admin",
                            "developer",
                            "readonly"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccountTypeMemberMap": {
                "additionalProperties": false,
                "anyOf": [
                    {
                        "required": [
                            "AccountTypeId",
                            "AccountId"
                        ]
                    },
                    {
                        "required": [
                            "AccountTypeName",
                            "AccountId"
                        ]
                    }
                ],
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "AccountTypeId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "AccountTypeName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AccountTypePolicyMap": {
                "additionalProperties": false,
                "anyOf": [
                    {
                        "required": [
                            "AccountTypeId",
                            "PolicyId"
                        ]
                    },
                    {
                        "required": [
                            "AccountTypeName",
                            "PolicyId"
                        ]
                    }
                ],
                "properties": {
                    "AccountTypeId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "AccountTypeName": {
                        "type": "string"
                    },
                    "PolicyId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    }
                },
                "type": "object"
            },
            "ApiRole": {
                "description": "Stax role assigned to an API Token.",
                "enum": [
                    "api_admin",
                    "api_user",
                    "api_readonly"
                ],
                "type": "string"
            },
            "AwsRegion": {
                "description": "AWS Region",
                "enum": [
                    "ap-northeast-1",
                    "ap-northeast-2",
                    "ap-south-1",
                    "ap-southeast-1",
                    "ap-southeast-2",
                    "ca-central-1",
                    "eu-central-1",
                    "eu-north-1",
                    "eu-west-1",
                    "eu-west-2",
                    "eu-west-3",
                    "sa-east-1",
                    "us-east-1",
                    "us-east-2",
                    "us-west-1",
                    "us-west-2"
                ],
                "type": "string"
            },
            "BaseEvent": {
                "properties": {
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType"
                ],
                "type": "object"
            },
            "BaseEventDetail": {
                "properties": {
                    "Message": {
                        "$ref": "#\/components\/schemas\/MessageEventDetail"
                    },
                    "Operation": {
                        "$ref": "#\/components\/schemas\/Operation"
                    },
                    "OperationStatus": {
                        "$ref": "#\/components\/schemas\/OperationStatus"
                    },
                    "Severity": {
                        "type": "string"
                    }
                },
                "required": [
                    "Operation",
                    "OperationStatus",
                    "Severity"
                ],
                "type": "object"
            },
            "BgpMapping": {
                "additionalProperties": false,
                "properties": {
                    "BgpPeerId": {
                        "description": "The BGP Peer ID of the VIF",
                        "type": "string"
                    },
                    "BgpStatus": {
                        "description": "The status of the BGP peer.",
                        "enum": [
                            "up",
                            "down",
                            "unknown"
                        ],
                        "example": "up",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CatalogueData": {
                "properties": {
                    "CatalogueId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CatalogueVersionId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Description": {
                        "description": "Description of the Workload.",
                        "example": "A Workload to build a VPC in my org",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "ManifestBody": {
                        "type": "string"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Workload Catalogue Item to create.",
                        "example": "my-directory-service",
                        "maxLength": 64,
                        "minLength": 2,
                        "type": "string"
                    },
                    "Operation": {
                        "$ref": "#\/components\/schemas\/Operation"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Parameters": {
                        "$ref": "#\/components\/schemas\/Parameter"
                    },
                    "Protection": {
                        "description": "Boolean value declaring if the Workload Catalogue Item is public or private.",
                        "example": false,
                        "type": "boolean"
                    },
                    "Public": {
                        "description": "Boolean value declaring if the Workload Catalogue Item is public or private.",
                        "example": false,
                        "type": "boolean"
                    },
                    "Status": {
                        "$ref": "#\/components\/schemas\/CatalogueStatus"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/Tags"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Version": {
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Description"
                ]
            },
            "CatalogueStatus": {
                "description": "Status of the Workload.",
                "enum": [
                    "NEW",
                    "UPLOADING",
                    "VALIDATING",
                    "ACTIVE",
                    "DELETED",
                    "FAILED"
                ],
                "example": "NEW",
                "readOnly": true,
                "type": "string"
            },
            "CatalogueVersionProperties": {
                "properties": {
                    "CatalogueId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Description": {
                        "description": "Description of the Workload.",
                        "example": "A Workload to build a VPC in my org",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ManifestURL": {
                        "description": "HTTPS\/S3 URL of the manifest. Either this or ManifestBody must be provided.",
                        "example": "S3:\/\/{StaxArtifactBucket}\/workload-vpc\/your-template-ref.yml",
                        "type": "string"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Outputs": {
                        "items": {
                            "example": "bread",
                            "type": "string"
                        },
                        "nullable": true,
                        "readOnly": true,
                        "type": "array"
                    },
                    "Public": {
                        "description": "Boolean value declaring if the Workload Catalogue Item is public or private.",
                        "example": false,
                        "type": "boolean"
                    },
                    "Status": {
                        "description": "Status of the Workload.",
                        "enum": [
                            "NEW",
                            "UPLOADING",
                            "VALIDATING",
                            "ACTIVE",
                            "DELETED",
                            "FAILED"
                        ],
                        "example": "NEW",
                        "readOnly": true,
                        "type": "string"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "WorkloadVersion": {
                        "example": "0.01",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "CatalogueId"
                ],
                "type": "object"
            },
            "CidrExclusion": {
                "additionalProperties": false,
                "properties": {
                    "Cidr": {
                        "description": "CIDR Range in quad dot notation.",
                        "example": "10.128.0.0\/19",
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Description": {
                        "description": "Longer description of what the CIDR Exclusion is used for.",
                        "example": "datacenter exclusion",
                        "maxLength": 2048,
                        "minLength": 0,
                        "nullable": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the CIDR Exclusion.",
                        "example": "non-prod",
                        "maxLength": 128,
                        "minLength": 2,
                        "type": "string"
                    },
                    "NetworkingHubId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Status": {
                        "description": "The status of the CIRD Exclusion.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "required": [
                    "Name",
                    "Cidr"
                ],
                "type": "object"
            },
            "CidrRange": {
                "properties": {
                    "Cidr": {
                        "description": "CIDR Range in quad dot notation. This range is a private network range with a size between \/8 to \/23",
                        "example": "10.128.0.0\/23",
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "DefaultCidrRange": {
                        "description": "Boolean value declaring if the range is the default CIDR Range",
                        "example": false,
                        "type": "boolean"
                    },
                    "Description": {
                        "description": "Longer description of what the CIDR Range is used for.",
                        "example": "datacenter ranges",
                        "maxLength": 2048,
                        "minLength": 0,
                        "nullable": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "LastAllocationTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the CIDR Range.",
                        "example": "non-prod",
                        "maxLength": 128,
                        "minLength": 2,
                        "type": "string"
                    },
                    "NetworkingHubId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Status": {
                        "description": "The status of the CIDR Range.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "required": [
                    "Id",
                    "Name",
                    "Cidr"
                ],
                "type": "object"
            },
            "CreateCatalogueDetail": {
                "properties": {
                    "Message": {
                        "$ref": "#\/components\/schemas\/MessageEventDetail"
                    },
                    "Operation": {
                        "$ref": "#\/components\/schemas\/Operation"
                    },
                    "OperationStatus": {
                        "$ref": "#\/components\/schemas\/OperationStatus"
                    },
                    "Severity": {
                        "type": "string"
                    },
                    "TraceId": {
                        "type": "string"
                    },
                    "WorkloadCatalogueItem": {
                        "$ref": "#\/components\/schemas\/CatalogueData"
                    }
                },
                "required": [
                    "Operation",
                    "OperationStatus",
                    "Severity"
                ],
                "type": "object"
            },
            "CreateCatalogueEvent": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEvent"
                    }
                ],
                "properties": {
                    "CatalogueId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CustomerId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Detail": {
                        "$ref": "#\/components\/schemas\/CreateCatalogueDetail"
                    },
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "TraceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "TaskId",
                    "TraceId"
                ],
                "type": "object"
            },
            "CreateVersionDetail": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEventDetail"
                    }
                ],
                "properties": {
                    "TraceId": {
                        "type": "string"
                    },
                    "WorkloadCatalogueItem": {
                        "properties": {
                            "CatalogueId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            },
                            "Description": {
                                "description": "Description of the Workload.",
                                "example": "A Workload to build a VPC in my org",
                                "maxLength": 1024,
                                "type": "string"
                            },
                            "ManifestBody": {
                                "description": "Raw text of a Manifest. Either this or ManifestURL must be provided.",
                                "example": "Resources:\n    - VPC:\n        Type: AWS::Cloudformation\n        TemplateURL: s3:\/\/{JumaArtifactBucket}\/workload-vpc\/vpc-2-tier-no-NAT.yml\n",
                                "type": "string"
                            },
                            "ManifestURL": {
                                "description": "HTTPS\/S3 URL of the manifest. Either this or ManifestBody must be provided.",
                                "example": "S3:\/\/{StaxArtifactBucket}\/workload-vpc\/your-template-ref.yml",
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OrganisationId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            },
                            "Parameters": {
                                "$ref": "#\/components\/schemas\/Parameter"
                            },
                            "Public": {
                                "description": "Boolean value declaring if the Workload Catalogue Item is public or private.",
                                "example": false,
                                "type": "boolean"
                            },
                            "Version": {
                                "example": "0.01",
                                "readOnly": true,
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CreateVersionEvent": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEvent"
                    }
                ],
                "properties": {
                    "CatalogueId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "CustomerId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Detail": {
                        "$ref": "#\/components\/schemas\/CreateVersionDetail"
                    },
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "TraceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "CustomerId"
                ],
                "type": "object"
            },
            "CreateWorkloadDetail": {
                "properties": {
                    "Message": {
                        "$ref": "#\/components\/schemas\/MessageEventDetail"
                    },
                    "Operation": {
                        "$ref": "#\/components\/schemas\/Operation"
                    },
                    "OperationStatus": {
                        "$ref": "#\/components\/schemas\/OperationStatus"
                    },
                    "Severity": {
                        "type": "string"
                    },
                    "Workload": {
                        "$ref": "#\/components\/schemas\/WorkloadData"
                    }
                },
                "required": [
                    "Operation",
                    "OperationStatus",
                    "Severity"
                ],
                "type": "object"
            },
            "CreateWorkloadEvent": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEvent"
                    },
                    {
                        "properties": {
                            "Detail": {
                                "$ref": "#\/components\/schemas\/CreateWorkloadDetail"
                            },
                            "WorkloadId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        }
                    }
                ],
                "type": "object"
            },
            "Customer": {
                "properties": {
                    "CognitoUserId": {
                        "description": "Cognito User unique identifier.",
                        "example": "my-user-id",
                        "readOnly": true,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Email": {
                        "description": "Email address of the User.",
                        "example": "stax.user@example.com",
                        "format": "email",
                        "maxLength": 128,
                        "minLength": 6,
                        "type": "string"
                    },
                    "FactoryVersion": {
                        "$ref": "#\/components\/schemas\/GitHash"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Account.",
                        "example": "My Business",
                        "maxLength": 64,
                        "minLength": 3,
                        "type": "string"
                    },
                    "Status": {
                        "description": "Status of the Customer.",
                        "enum": [
                            "PROSPECT",
                            "NEW",
                            "INITIALIZING",
                            "ACTIVE",
                            "SUSPENDED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "SupportPlan": {
                        "description": "Stax Support Plan allocated to the Customer.",
                        "enum": [
                            "BASIC",
                            "BUSINESS",
                            "ENTERPRISE"
                        ],
                        "example": "BUSINESS",
                        "type": "string"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    }
                },
                "required": [
                    "Name",
                    "Email"
                ],
                "type": "object"
            },
            "DNSResolver": {
                "additionalProperties": false,
                "properties": {
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "InboundIpAddresses": {
                        "description": "The IP Addresses attached to the Inbound DNS Resolver.",
                        "example": [
                            "192.168.0.1",
                            "192.168.0.2"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "Interfaces": {
                        "description": "The number of ENIs to attach to the DNS Resolvers.",
                        "example": 2,
                        "type": "integer"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Stax DNS Resolvers.",
                        "example": "dns",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "NetworkingHubId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "OutboundIpAddresses": {
                        "description": "The IP Addresses attached to the Outbound DNS Resolver.",
                        "example": [
                            "192.168.0.1",
                            "192.168.0.2"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "Status": {
                        "description": "The status of the Stax DNS Resolvers.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    }
                },
                "required": [
                    "Id",
                    "Name",
                    "NetworkingHubId",
                    "Interfaces"
                ],
                "type": "object"
            },
            "DNSRule": {
                "additionalProperties": false,
                "properties": {
                    "AwsRuleId": {
                        "description": "The AWS Route53 Resolver Rule Id.",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "DnsResolverId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "DomainName": {
                        "description": "Domain name to forward DNS queries for.",
                        "example": "test.local",
                        "maxLength": 256,
                        "minLength": 2,
                        "type": "string"
                    },
                    "ForwarderIpAddresses": {
                        "description": "The IP Addresses to forward DNS queries to.",
                        "example": [
                            "192.168.0.1",
                            "192.168.0.2"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of Stax DNS Rule.",
                        "example": "on-premises",
                        "maxLength": 64,
                        "minLength": 2,
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the Stax DNS Rule.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    }
                },
                "required": [
                    "Id",
                    "Name",
                    "DomainName",
                    "DnsResolverId",
                    "ForwarderIpAddresses"
                ],
                "type": "object"
            },
            "DeleteCatalogueDetail": {
                "properties": {
                    "Message": {
                        "$ref": "#\/components\/schemas\/MessageEventDetail"
                    },
                    "Operation": {
                        "$ref": "#\/components\/schemas\/Operation"
                    },
                    "OperationStatus": {
                        "$ref": "#\/components\/schemas\/OperationStatus"
                    },
                    "Severity": {
                        "type": "string"
                    },
                    "TraceId": {
                        "type": "string"
                    },
                    "WorkloadCatalogueItem": {
                        "$ref": "#\/components\/schemas\/CatalogueData"
                    }
                },
                "required": [
                    "Operation",
                    "OperationStatus",
                    "Severity"
                ],
                "type": "object"
            },
            "DeleteCatalogueEvent": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEvent"
                    }
                ],
                "properties": {
                    "Detail": {
                        "$ref": "#\/components\/schemas\/DeleteCatalogueDetail"
                    }
                },
                "required": [
                    "Detail"
                ],
                "type": "object"
            },
            "DeleteVersionDetail": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEventDetail"
                    }
                ],
                "properties": {
                    "TraceId": {
                        "type": "string"
                    },
                    "WorkloadCatalogueVersion": {
                        "$ref": "#\/components\/schemas\/CatalogueVersionProperties"
                    }
                },
                "type": "object"
            },
            "DeleteVersionEvent": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEvent"
                    }
                ],
                "properties": {
                    "Detail": {
                        "$ref": "#\/components\/schemas\/DeleteVersionDetail"
                    }
                },
                "type": "object"
            },
            "DeleteWorkloadDetail": {
                "properties": {
                    "Message": {
                        "$ref": "#\/components\/schemas\/MessageEventDetail"
                    },
                    "Operation": {
                        "$ref": "#\/components\/schemas\/Operation"
                    },
                    "OperationStatus": {
                        "$ref": "#\/components\/schemas\/OperationStatus"
                    },
                    "Severity": {
                        "type": "string"
                    },
                    "TraceId": {
                        "type": "string"
                    },
                    "Workload": {
                        "$ref": "#\/components\/schemas\/WorkloadData"
                    }
                },
                "required": [
                    "Operation",
                    "OperationStatus",
                    "Severity"
                ],
                "type": "object"
            },
            "DeleteWorkloadEvent": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEvent"
                    }
                ],
                "properties": {
                    "Detail": {
                        "$ref": "#\/components\/schemas\/DeleteWorkloadDetail"
                    }
                },
                "type": "object"
            },
            "DxAssociation": {
                "additionalProperties": false,
                "properties": {
                    "AwsAssociationId": {
                        "description": "The AWS Id of the DX Association.",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "DxGatewayId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "NetworkingHubId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Prefixes": {
                        "description": "The CIDR Ranges to advertise to on-premises.",
                        "example": [
                            "192.168.0.0\/24",
                            "192.168.1.0\/24"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Status": {
                        "description": "The status of the Stax DX Association.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "VpcId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    }
                },
                "required": [
                    "Id",
                    "DxGatewayId",
                    "NetworkingHubId",
                    "Prefixes"
                ],
                "type": "object"
            },
            "DxConnection": {
                "additionalProperties": false,
                "properties": {
                    "Bandwidth": {
                        "description": "Bandwidth of the Direct Connect Connection.",
                        "example": "50Mbps",
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string"
                    },
                    "ConnectionId": {
                        "description": "AWS Id of the Direct Connect Connection.",
                        "example": "dxcon-abcdefgh",
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string"
                    },
                    "ConnectionName": {
                        "description": "Name of the Direct Connect Connection.",
                        "example": "SY4",
                        "maxLength": 100,
                        "minLength": 2,
                        "type": "string"
                    },
                    "ConnectionState": {
                        "description": "State of the Direct Connect Connection.",
                        "enum": [
                            "ordering",
                            "requested",
                            "pending",
                            "available",
                            "down",
                            "deleting",
                            "deleted",
                            "rejected",
                            "unknown"
                        ],
                        "example": "available",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Region": {
                        "$ref": "#\/components\/schemas\/AwsRegion"
                    },
                    "Vlan": {
                        "description": "VLAN for the Direct Connect Connection.",
                        "example": 4000,
                        "nullable": true,
                        "type": "integer"
                    }
                },
                "required": [
                    "ConnectionId",
                    "ConnectionName",
                    "ConnectionState",
                    "Region",
                    "Bandwidth",
                    "Vlan"
                ],
                "type": "object"
            },
            "DxGateway": {
                "additionalProperties": false,
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Asn": {
                        "description": "ASN to assign to the Direct Connect Gateway.",
                        "example": 64512,
                        "type": "integer"
                    },
                    "AwsGatewayId": {
                        "description": "The AWS Id of the Direct Connect Gateway.",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "ExternalResource": {
                        "description": "Boolean value to determine if the resource did not originate from Stax.",
                        "example": false,
                        "type": "boolean"
                    },
                    "GatewayType": {
                        "description": "The type of the Stax DX Gateway.",
                        "enum": [
                            "TRANSIT",
                            "PRIVATE"
                        ],
                        "example": "TRANSIT",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Direct Connect Gateway.",
                        "example": "Prod Gateway",
                        "maxLength": 95,
                        "minLength": 2,
                        "pattern": "(?!^[0-9]$)([a-zA-Z0-9-_' '])",
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Status": {
                        "description": "The status of the Stax DX Gateway.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    }
                },
                "required": [
                    "Id",
                    "Name",
                    "Asn",
                    "AccountId",
                    "OrganisationId"
                ],
                "type": "object"
            },
            "DxVif": {
                "additionalProperties": false,
                "properties": {
                    "Asn": {
                        "description": "ASN to assign to the Direct Connect VIF.",
                        "example": 64512,
                        "type": "integer"
                    },
                    "AwsConnectionId": {
                        "description": "AWS Id of the Direct Connect Connection.",
                        "example": "dxcon-abcdefgh",
                        "maxLength": 128,
                        "minLength": 2,
                        "type": "string"
                    },
                    "AwsRouterIp": {
                        "description": "The BGP peer IP configured on the AWS endpoint.",
                        "example": "192.168.0.2\/30",
                        "type": "string"
                    },
                    "AwsVifId": {
                        "description": "The AWS Id of the Direct Connect VIF.",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "DxGatewayId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "ExternalResource": {
                        "description": "Boolean value to determine if the resource did not originate from Stax.",
                        "example": false,
                        "type": "boolean"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "JumboMtu": {
                        "description": "Boolean value to enable Jumbo Frames.",
                        "example": false,
                        "type": "boolean"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Direct Connect VIF.",
                        "example": "Prod VIF",
                        "maxLength": 95,
                        "minLength": 2,
                        "type": "string"
                    },
                    "Region": {
                        "$ref": "#\/components\/schemas\/AwsRegion"
                    },
                    "RouterIp": {
                        "description": "The BGP peer IP configured on your endpoint.",
                        "example": "192.168.0.1\/30",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the Stax DX VIF.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "VifType": {
                        "description": "The type of Direct Connect VIF.",
                        "enum": [
                            "TRANSIT",
                            "PRIVATE"
                        ],
                        "example": "TRANSIT",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Vlan": {
                        "description": "VLAN for the Direct Connect VIF.",
                        "example": 4000,
                        "type": "integer"
                    }
                },
                "required": [
                    "Id",
                    "Name",
                    "VifType",
                    "AwsConnectionId",
                    "DxGatewayId",
                    "Vlan",
                    "Asn",
                    "RouterIp",
                    "AwsRouterIp",
                    "JumboMtu",
                    "Region"
                ],
                "type": "object"
            },
            "DxVifStatus": {
                "example": [
                    {
                        "BgpPeerId": "bgp-peer-id",
                        "BgpStatus": "up"
                    }
                ],
                "items": {
                    "$ref": "#\/components\/schemas\/BgpMapping"
                },
                "type": "array",
                "x-go-name": "VifStatus"
            },
            "Error": {
                "properties": {
                    "Cause": {
                        "type": "string"
                    },
                    "Error": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GatewayMap": {
                "additionalProperties": false,
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Asn": {
                        "description": "ASN to assign to the Direct Connect Gateway.",
                        "example": 64512,
                        "type": "integer"
                    },
                    "GatewayType": {
                        "description": "The type of the Stax DX Gateway.",
                        "enum": [
                            "TRANSIT",
                            "PRIVATE"
                        ],
                        "example": "TRANSIT",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Direct Connect Gateway.",
                        "example": "Prod Gateway",
                        "maxLength": 95,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Asn",
                    "AccountId",
                    "GatewayType"
                ],
                "type": "object"
            },
            "GitHash": {
                "example": "f8cf81b",
                "maxLength": 7,
                "minLength": 7,
                "readOnly": true,
                "type": "string"
            },
            "Group": {
                "additionalProperties": false,
                "properties": {
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "GroupType": {
                        "description": "Group Type identifies whether group is managed by stax (LOCAL) or externally (SCIM).",
                        "enum": [
                            "LOCAL",
                            "SCIM"
                        ],
                        "example": "LOCAL",
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Group.",
                        "example": "DevOps",
                        "maxLength": 128,
                        "minLength": 3,
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Status": {
                        "description": "Status of the Group.",
                        "enum": [
                            "NEW",
                            "ACTIVE",
                            "DELETED"
                        ],
                        "example": "ACTIVE",
                        "type": "string"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "Users": {
                        "description": "Array of IDs of Users belonging to the Group.",
                        "items": {
                            "$ref": "#\/components\/schemas\/ro-uuidv4"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Id",
                    "Name",
                    "Status",
                    "GroupType"
                ],
                "type": "object"
            },
            "GuardDutyConfiguration": {
                "additionalProperties": false,
                "properties": {
                    "Features": {
                        "description": "A list of GuardDuty features that will be configured for the organization.",
                        "properties": {
                            "EBS_MALWARE_PROTECTION": {
                                "properties": {
                                    "EbsSnapshotPreservation": {
                                        "description": "Snapshot preservation settings.",
                                        "enum": [
                                            "NO_RETENTION",
                                            "RETENTION_WITH_FINDING"
                                        ],
                                        "nullable": true,
                                        "type": "string"
                                    },
                                    "Enable": {
                                        "description": "Whether to enable malware scanning",
                                        "type": "boolean"
                                    },
                                    "ScanResourceCriteria": {
                                        "oneOf": [
                                            {
                                                "additionalProperties": false,
                                                "nullable": true,
                                                "properties": {
                                                    "Include": {
                                                        "additionalProperties": false,
                                                        "description": "Scan EC2 instances and EBS volumes using inclusion tags",
                                                        "properties": {
                                                            "EC2_INSTANCE_TAG": {
                                                                "description": "Scan EC2 instances and EBS volumes using inclusion tags",
                                                                "items": {
                                                                    "$ref": "#\/components\/schemas\/ScanTags"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "EC2_INSTANCE_TAG"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "Include"
                                                ],
                                                "type": "object"
                                            },
                                            {
                                                "additionalProperties": false,
                                                "nullable": true,
                                                "properties": {
                                                    "Exclude": {
                                                        "additionalProperties": false,
                                                        "description": "Scan EC2 instances and EBS volumes using exclusion tags",
                                                        "properties": {
                                                            "EC2_INSTANCE_TAG": {
                                                                "description": "Scan EC2 instances and EBS volumes using exclusion tags",
                                                                "items": {
                                                                    "$ref": "#\/components\/schemas\/ScanTags"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "required": [
                                                            "EC2_INSTANCE_TAG"
                                                        ],
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "Exclude"
                                                ],
                                                "type": "object"
                                            }
                                        ]
                                    }
                                },
                                "required": [
                                    "Enable",
                                    "EbsSnapshotPreservation",
                                    "ScanResourceCriteria"
                                ],
                                "type": "object"
                            },
                            "EKS_AUDIT_LOGS": {
                                "description": "Describes whether to monitor and generate findings from Kubernetes Audit Logs.",
                                "properties": {
                                    "Enable": {
                                        "description": "Whether to enable findings from Kubernetes Audit Logs.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Enable"
                                ],
                                "type": "object"
                            },
                            "EKS_RUNTIME_MONITORING": {
                                "description": "EKS Runtime Monitoring provides runtime threat detection coverage for Amazon Elastic Kubernetes Service (Amazon EKS) nodes and containers within your AWS environment.",
                                "properties": {
                                    "EKS_ADDON_MANAGEMENT": {
                                        "description": "Bool to indicate whether 'EKS Runtime Monitoring manage agent automatically' is enabled. GuardDuty will fully automate the deployment of and update to the GuardDuty security agent for the EKS clusters.",
                                        "nullable": true,
                                        "type": "boolean"
                                    },
                                    "Enable": {
                                        "description": "Bool to indicate whether 'EKS Runtime Monitoring' is enabled.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Enable",
                                    "EKS_ADDON_MANAGEMENT"
                                ],
                                "type": "object"
                            },
                            "LAMBDA_NETWORK_LOGS": {
                                "description": "Describes whether to monitor lambda function network logs",
                                "properties": {
                                    "Enable": {
                                        "description": "Whether to enable monitor lambda function network logs",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Enable"
                                ],
                                "type": "object"
                            },
                            "RDS_LOGIN_EVENTS": {
                                "description": "Describes whether to monitor and generate findings from RDS Protection.",
                                "properties": {
                                    "Enable": {
                                        "description": "Whether to enable findings from RDS Protection.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Enable"
                                ],
                                "type": "object"
                            },
                            "S3_DATA_EVENTS": {
                                "description": "Describes whether to monitor and generate findings on S3 data events.",
                                "properties": {
                                    "Enable": {
                                        "description": "Whether to enable S3 Protection.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "Enable"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "S3_DATA_EVENTS",
                            "EKS_AUDIT_LOGS",
                            "EBS_MALWARE_PROTECTION",
                            "RDS_LOGIN_EVENTS",
                            "EKS_RUNTIME_MONITORING",
                            "LAMBDA_NETWORK_LOGS"
                        ],
                        "type": "object"
                    },
                    "FindingPublishingFrequency": {
                        "description": " A value that specifies how frequently updated findings are exported.",
                        "enum": [
                            "FIFTEEN_MINUTES",
                            "ONE_HOUR",
                            "SIX_HOURS"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "FindingPublishingFrequency",
                    "Features"
                ],
                "type": "object"
            },
            "HubConnection": {
                "additionalProperties": false,
                "properties": {
                    "ImprovedAcceleration": {
                        "description": "Boolean value to turn on AWS Global Accelerator and the AWS global network for improved performance",
                        "example": false,
                        "type": "boolean"
                    },
                    "Name": {
                        "description": "Name of Stax VPN Connection.",
                        "example": "vpn-transit-connection",
                        "maxLength": 251,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "NetworkingHubId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "required": [
                    "Name",
                    "NetworkingHubId",
                    "ImprovedAcceleration"
                ],
                "type": "object"
            },
            "HubPeering": {
                "additionalProperties": false,
                "properties": {
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "DestinationAwsAccountId": {
                        "description": "The AWS Account Id that contains the Destination TGW.",
                        "example": "000011112222",
                        "maxLength": 12,
                        "minLength": 12,
                        "nullable": true,
                        "pattern": "^\\d{12,12}$",
                        "type": "string"
                    },
                    "DestinationAwsRegion": {
                        "$ref": "#\/components\/schemas\/nullable-AwsRegion"
                    },
                    "DestinationAwsTgwId": {
                        "description": "The AWS Id of the Destination TGW.",
                        "example": "tgw-0000aaaa1111bbbbb",
                        "maxLength": 21,
                        "minLength": 21,
                        "nullable": true,
                        "pattern": "^tgw-[a-zA-Z0-9]*$",
                        "type": "string"
                    },
                    "DestinationNetworkingHubId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "DestinationTgwPeeringAttachmentId": {
                        "description": "The AWS Id of the Destination TGW Peering attachment.",
                        "example": "tgw-attach-0000aaaa1111bbbbb",
                        "nullable": true,
                        "type": "string"
                    },
                    "ExternalResource": {
                        "description": "Boolean value to determine if the resource did not originate from Stax.",
                        "example": false,
                        "type": "boolean"
                    },
                    "HubPeeringTarget": {
                        "description": "The target type to determine the actions against the destination.",
                        "enum": [
                            "STAX_RESOURCE",
                            "STAX_ACCOUNT",
                            "EXTERNAL"
                        ],
                        "example": "STAX_RESOURCE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "The Name of the Hub Peering.",
                        "example": "Prod-Shared",
                        "maxLength": 128,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "SourceAwsAccountId": {
                        "description": "The AWS Account Id that contains the Source TGW.",
                        "example": "000011112222",
                        "maxLength": 12,
                        "minLength": 12,
                        "nullable": true,
                        "pattern": "^\\d{12,12}$",
                        "type": "string"
                    },
                    "SourceAwsRegion": {
                        "$ref": "#\/components\/schemas\/nullable-AwsRegion"
                    },
                    "SourceAwsTgwId": {
                        "description": "The AWS Id of the Source TGW.",
                        "example": "tgw-0000aaaa1111bbbbb",
                        "maxLength": 21,
                        "minLength": 21,
                        "nullable": true,
                        "pattern": "^tgw-[a-zA-Z0-9]*$",
                        "type": "string"
                    },
                    "SourceNetworkingHubId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "SourceTgwPeeringAttachmentId": {
                        "description": "The AWS Id of the Source TGW Peering attachment.",
                        "example": "tgw-attach-0000aaaa1111bbbbb",
                        "nullable": true,
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the Hub Peering.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "PENDING_ACCEPT",
                            "UPDATE_IN_PROGRESS"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    }
                },
                "required": [
                    "Id",
                    "OrganisationId",
                    "Status",
                    "Name",
                    "HubPeeringTarget",
                    "SourceNetworkingHubId"
                ],
                "type": "object"
            },
            "IdamUser": {
                "additionalProperties": false,
                "properties": {
                    "access": {
                        "type": "object"
                    },
                    "attributes": {
                        "type": "object"
                    },
                    "createdTimestamp": {
                        "type": "integer"
                    },
                    "customerId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "email": {
                        "description": "Email address of User.",
                        "example": "stax.user@example.com",
                        "format": "email",
                        "maxLength": 128,
                        "minLength": 6,
                        "readOnly": true,
                        "type": "string"
                    },
                    "emailVerified": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "firstName": {
                        "description": "Given Name of the User.",
                        "example": "John",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "lastName": {
                        "description": "Family Name of the User.",
                        "example": "Doe",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "orgAlias": {
                        "type": "string"
                    },
                    "organisationId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "requiredActions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "role": {
                        "$ref": "#\/components\/schemas\/Role"
                    },
                    "totp": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "email",
                    "id"
                ],
                "type": "object"
            },
            "IdamUserRole": {
                "description": "Stax role assigned to an IDAM user.",
                "enum": [
                    "customer_admin",
                    "customer_user",
                    "customer_readonly",
                    "customer_costadmin"
                ],
                "example": "customer_admin",
                "type": "string"
            },
            "KeyValueRequestParameter": {
                "additionalProperties": false,
                "example": {
                    "Key": "CostCode",
                    "Value": "12345"
                },
                "nullable": true,
                "properties": {
                    "Key": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ],
                "type": "object"
            },
            "MessageEventDetail": {
                "oneOf": [
                    {
                        "properties": {
                            "CustomerId": {
                                "$ref": "#\/components\/schemas\/uuidv4"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/uuidv4"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "type": "string"
                    }
                ]
            },
            "NetworkingHub": {
                "additionalProperties": false,
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Asn": {
                        "description": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session",
                        "example": 64512,
                        "type": "integer"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Description": {
                        "description": "Longer description of what the Stax Networking Hub is used for.",
                        "example": "my-hub",
                        "maxLength": 2048,
                        "minLength": 0,
                        "nullable": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "InterfaceEndpoints": {
                        "items": {
                            "$ref": "#\/components\/schemas\/interface-endpoint"
                        },
                        "type": "array"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of Stax Networking Hub.",
                        "example": "non-prod",
                        "maxLength": 238,
                        "minLength": 2,
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "PhzSuffix": {
                        "description": "The suffix used to create Route53 Private Hosted Zones names within the Networking Hub, cannot be modified once set",
                        "example": "my-domain.cloud",
                        "maxLength": 255,
                        "minLength": 2,
                        "nullable": true,
                        "type": "string"
                    },
                    "RedundantEndpoints": {
                        "description": "Boolean value declaring if redundant Interface VPC Endpoints will be created",
                        "example": true,
                        "type": "boolean"
                    },
                    "Region": {
                        "$ref": "#\/components\/schemas\/AwsRegion"
                    },
                    "Status": {
                        "description": "The status of the Stax Networking Hub.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "VpnEcmpSupport": {
                        "description": "Boolean value declaring to enable or disable Equal Cost Multipath Protocol support",
                        "example": true,
                        "type": "boolean"
                    }
                },
                "required": [
                    "Id",
                    "Name",
                    "AccountId",
                    "Region"
                ],
                "type": "object"
            },
            "NetworkingTags": {
                "additionalProperties": {
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9+\\-=._:\/@ ]*$",
                    "type": "string"
                },
                "example": {
                    "CostCode": "12345"
                },
                "maxProperties": 50,
                "minProperties": 0,
                "nullable": true,
                "type": "object"
            },
            "Null": {
                "nullable": true
            },
            "Operation": {
                "enum": [
                    "CREATE",
                    "READ",
                    "UPDATE",
                    "DELETE",
                    "accounts:CreateAccount",
                    "accounts:CreateAccountType",
                    "accounts:CloseAccount",
                    "accounts:DiscoverAccount",
                    "accounts:DiscoverAccounts",
                    "accounts:DeleteAccountType",
                    "accounts:OnboardAccount",
                    "accounts:ReadAccountTypes",
                    "accounts:ReadAccounts",
                    "accounts:UpdateAccount",
                    "accounts:UpdateAccountType",
                    "accounts:UpdateAccountTypeAccess",
                    "accounts:UpdateAccountTypeMembers",
                    "accounts:UpdateAccountTypePolicies",
                    "organisations:AttachPolicy",
                    "organisations:CreatePolicy",
                    "organisations:DeletePolicy",
                    "organisations:DetachPolicy",
                    "organisations:ReadPolicies",
                    "organisations:UpdatePolicy",
                    "organisations:CreateOrganisationalUnit",
                    "organisations:DeleteOrganisationalUnit",
                    "organisations:ReadOrganisationalUnit",
                    "organisations:UpdateOrganisationalUnit",
                    "teams:CreateApiToken",
                    "teams:CreateGroup",
                    "teams:CreateUser",
                    "teams:DeleteApiToken",
                    "teams:DeleteGroup",
                    "teams:DeleteUser",
                    "teams:ReadApiTokens",
                    "teams:ReadGroups",
                    "teams:ReadUsers",
                    "teams:UpdateApiToken",
                    "teams:UpdateGroup",
                    "teams:UpdateGroupMembers",
                    "teams:UpdateUser",
                    "teams:UpdateUserPassword",
                    "workloads:CreateCatalogueItem",
                    "workloads:CreateCatalogueVersion",
                    "workloads:CreateWorkload",
                    "workloads:DeleteCatalogueItem",
                    "workloads:DeleteCatalogueVersion",
                    "workloads:DeleteWorkload",
                    "workloads:ReadWorkloadCatalogueItems",
                    "workloads:ReadWorkloads",
                    "workloads:UpdateWorkload",
                    "networking:CreateHub",
                    "networking:UpdateHub",
                    "networking:DeleteHub",
                    "networking:CreateVpc",
                    "networking:UpdateVpc",
                    "networking:DeleteVpc",
                    "networking:CreateDnsResolver",
                    "networking:UpdateDnsResolver",
                    "networking:DeleteDnsResolver",
                    "networking:CreateDnsRule",
                    "networking:UpdateDnsRule",
                    "networking:DeleteDnsRule",
                    "networking:CreateDxResource",
                    "networking:UpdateDxVif",
                    "networking:DeleteDxVif",
                    "networking:CreateDxAssociation",
                    "networking:UpdateDxAssociation",
                    "networking:DeleteDxGateway",
                    "networking:DeleteDxAssociation",
                    "networking:CreateVpnCustomerGateway",
                    "networking:UpdateVpnCustomerGateway",
                    "networking:DeleteVpnCustomerGateway",
                    "networking:CreateVpnConnection",
                    "networking:UpdateVpnConnection",
                    "networking:DeleteVpnConnection",
                    "networking:CreateHubPrefixList",
                    "networking:CreateVpcPrefixList",
                    "networking:UpdatePrefixList",
                    "networking:UpdateHubPrefixListAssociation",
                    "networking:UpdateVpcPrefixListAssociation",
                    "networking:DeletePrefixList",
                    "networking:CreateHubPeering",
                    "networking:UpdateHubPeering",
                    "networking:DeleteHubPeering",
                    "account_assurance:CreateHardenAccount",
                    "account_assurance:UpdateHardenAccount",
                    "account_assurance:HardenAccount",
                    "account_discovery:DiscoverAccounts",
                    "aws_account:CreateAwsAccounts",
                    "idam_account:IdamAccount",
                    "idam_user:CreateIdamUser",
                    "idam_user:UpdateIdamUser",
                    "idam_workload:CreateIdamWorkload",
                    "organisation:CreateOrganisation",
                    "organisation_assurance:OrganisationAssurance",
                    "organisation_billing:DeployEtl",
                    "organisation_billing:RegisterApn",
                    "organisation_billing:UpdateCrm",
                    "stax_account:CreateStaxAccount",
                    "stax_account:CloseStaxAccount",
                    "stax_account:OnboardStaxAccount",
                    "stax_account:UpdateStaxAccount",
                    "customer:CreateCustomer",
                    "saga:CreateCustomer",
                    "saga:CreateOrganisation",
                    "saga:UpdateOrganisation",
                    "saga:CreateAccount",
                    "saga:CreateAwsAccounts",
                    "saga:OnboardAccount",
                    "saga:UpdateAccount",
                    "saga:UpdateOrgAccounts",
                    "saga:CloseAccount",
                    "saga:DiscoverAccount",
                    "services:ReadConfigurations",
                    "services:ReadGuardDutyConfiguration",
                    "services:ReadSecurityHubConfiguration",
                    "services:ConfigureGuardDuty",
                    "services:ConfigureSecurityHub",
                    "policies:AttachPolicy",
                    "policies:DetachPolicy"
                ],
                "type": "string"
            },
            "OperationStatus": {
                "description": "The status of an operation within Stax. This status is returned as part of the response for an asynchronous request and as the status of a Task. STARTED indicates that a request\/Task has been received by Stax and is awaiting a worker. PENDING indicates that the Task has been picked up by a worker and is in queue. RUNNING indicates that the Task is active and being processed by a worker. SUCCEEDED indicates that the Task has completed successfully. FAILED indicates that the Task failed.",
                "enum": [
                    "STARTED",
                    "PENDING",
                    "RUNNING",
                    "SUCCEEDED",
                    "FAILED"
                ],
                "type": "string"
            },
            "Organisation": {
                "properties": {
                    "Alias": {
                        "description": "Alias for your Organisation. This alias will be used in the URL of your Stax Identity Broker. Allowed characters include a-z, 0-9 and hyphens (except start and end).",
                        "example": "my-stax-org",
                        "maxLength": 32,
                        "minLength": 3,
                        "type": "string"
                    },
                    "AllowedDomains": {
                        "description": "Allowed email domains for the Organisation, this limits who can be invited to your Team.",
                        "example": [
                            "@example.com",
                            "@stax.io"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "maxLength": 64,
                        "minLength": 3,
                        "nullable": true,
                        "type": "array"
                    },
                    "AttachedPolicies": {
                        "items": {
                            "$ref": "#\/components\/schemas\/ro-uuidv4"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "AwsAccountEmailTemplate": {
                        "description": "AWS Accounts will be registered with email addresses fitting this pattern. Please ensure these email addresses are secured, as they can be used for Root Credential recovery.",
                        "example": "stax.user+${Stax::AccountId}@example.com",
                        "maxLength": 64,
                        "minLength": 3,
                        "nullable": true,
                        "type": "string"
                    },
                    "AwsPartnerSupport": {
                        "description": "AWS Partner Led Support - if you have partner led support then Stax Support will open AWS Support cases on your behalf.",
                        "type": "boolean"
                    },
                    "AwsSupportType": {
                        "description": "Default AWS Support level set on Accounts in your Organisation.",
                        "enum": [
                            "BASIC",
                            "DEVELOPER",
                            "BUSINESS",
                            "ENTERPRISE"
                        ],
                        "example": "ENTERPRISE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "ComplianceType": {
                        "description": "Compliance type for the Organisation.",
                        "enum": [
                            "APRA",
                            "PCI",
                            "SOC2"
                        ],
                        "example": "PCI",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "CustomerId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ExternalStaxId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Organisation",
                        "example": "default",
                        "maxLength": 64,
                        "minLength": 3,
                        "type": "string"
                    },
                    "Region": {
                        "$ref": "#\/components\/schemas\/AwsRegion"
                    },
                    "SpotlightSsoURL": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "Status": {
                        "description": "Status of the Organisation.",
                        "enum": [
                            "NEW",
                            "INITIALIZING",
                            "ACTIVE",
                            "SUSPENDED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    }
                },
                "required": [
                    "Id"
                ],
                "type": "object"
            },
            "OrganisationalUnit": {
                "additionalProperties": false,
                "properties": {
                    "AwsId": {
                        "maxLength": 128,
                        "nullable": true,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "ExternalResource": {
                        "description": "Boolean value to determine if the resource did not originate from Stax.",
                        "example": false,
                        "type": "boolean"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Organisational Unit.",
                        "example": "Security",
                        "maxLength": 128,
                        "minLength": 3,
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "OrganisationalUnitType": {
                        "description": "Type of the organisational unit.",
                        "enum": [
                            "ROOT",
                            "STAX_DEFAULT",
                            "STAX_SECURITY",
                            "STAX_ACCOUNT_POOL",
                            "ORGANISATION_ROOT",
                            "CHILD"
                        ],
                        "example": "ROOT",
                        "readOnly": true,
                        "type": "string"
                    },
                    "ParentOrganisationalUnitId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "Status": {
                        "description": "Status of the organisational unit.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_FAILED",
                            "CREATE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "UPDATE_IN_PROGRESS"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/StaxTags"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    }
                },
                "required": [
                    "Id",
                    "OrganisationId",
                    "Status",
                    "Name",
                    "ParentOrganisationalUnitId",
                    "OrganisationalUnitType",
                    "AwsId",
                    "CreatedTS",
                    "CreatedBy",
                    "ModifiedTS"
                ],
                "type": "object"
            },
            "Pagination": {
                "description": "Pagination metadata. Present when limit and offset parameters are supplied.",
                "properties": {
                    "NextOffset": {
                        "anyOf": [
                            {
                                "description": "Offset value to provide to retrieve the next set of items. Null when there are no more pages to fetch.",
                                "example": 20,
                                "nullable": true,
                                "type": "number"
                            }
                        ],
                        "description": "Offset value to provide to retrieve the next set of items. Null when there are no more pages to fetch.",
                        "example": 20,
                        "nullable": true,
                        "type": "number"
                    },
                    "PrevOffset": {
                        "anyOf": [
                            {
                                "description": "Offset value to provide to retrieve the previous set of items. Null when the first page is returned.",
                                "example": null,
                                "nullable": true,
                                "type": "number"
                            }
                        ],
                        "description": "Offset value to provide to retrieve the previous set of items. Null when the first page is returned.",
                        "example": null,
                        "nullable": true,
                        "type": "number"
                    },
                    "Total": {
                        "description": "Total number of items in the full pagination set after filters are applied.",
                        "example": 100,
                        "type": "number"
                    }
                },
                "required": [
                    "Total",
                    "NextOffset",
                    "PrevOffset"
                ],
                "type": "object"
            },
            "Parameter": {
                "additionalProperties": {},
                "example": {
                    "CostCode": "12345",
                    "Dept": "Marketing"
                },
                "nullable": true,
                "type": "object"
            },
            "Policy": {
                "additionalProperties": false,
                "properties": {
                    "AttachableTo": {
                        "description": "Whether a policy is org only or account type only, or both",
                        "enum": [
                            "ORG",
                            "ACCOUNT_TYPE",
                            "ANY"
                        ],
                        "example": "ANY",
                        "readOnly": false,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Description": {
                        "description": "Description of the Policy.",
                        "example": "A service control policy that denies access to all.",
                        "maxLength": 1024,
                        "minLength": 3,
                        "nullable": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Mandatory": {
                        "description": "Boolean value declaring if the policy is mandatory or not.",
                        "example": false,
                        "type": "boolean"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Policy.",
                        "example": "DenyAll",
                        "maxLength": 128,
                        "minLength": 3,
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Policy": {
                        "type": "object"
                    },
                    "Public": {
                        "description": "Boolean value declaring if the policy is public or private.",
                        "example": false,
                        "type": "boolean"
                    },
                    "Status": {
                        "description": "Status of the policy.",
                        "enum": [
                            "ACTIVE",
                            "DELETED",
                            "FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "Id",
                    "Name",
                    "Description",
                    "Public",
                    "Mandatory",
                    "Status",
                    "OrganisationId",
                    "CreatedTS",
                    "CreatedBy",
                    "ModifiedTS",
                    "AttachableTo",
                    "Policy"
                ],
                "type": "object"
            },
            "PrefixList": {
                "additionalProperties": false,
                "properties": {
                    "AwsPrefixListId": {
                        "description": "The AWS Id of the Prefix List.",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "AwsTargetId": {
                        "description": "The AWS Id of either a VPN, VPC or Direct Connect Gateway to the target of the HUB Prefix List associations.",
                        "example": "BLACKHOLE",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Entries": {
                        "description": "The CIDR Ranges to include in the Prefix List.",
                        "example": [
                            "192.168.0.1\/32",
                            "192.168.0.2\/32"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "MaxEntries": {
                        "description": "The maximum number of CIDR entries that can exist in the Prefix List.",
                        "example": 3,
                        "type": "integer"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Stax Prefix List.",
                        "example": "example",
                        "maxLength": 245,
                        "minLength": 2,
                        "type": "string"
                    },
                    "NetworkingHubId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "PrefixListType": {
                        "description": "The type of Prefix List.",
                        "enum": [
                            "VPC",
                            "HUB"
                        ],
                        "example": "HUB",
                        "type": "string"
                    },
                    "RouteTableTypes": {
                        "description": "The TGW Route Table types to associate a HUB Prefix List with.",
                        "example": [
                            "INFRASTRUCTURE",
                            "ISOLATED"
                        ],
                        "items": {
                            "enum": [
                                "INFRASTRUCTURE",
                                "ISOLATED",
                                "ONPREMISES",
                                "FLAT"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "Status": {
                        "description": "The status of the Stax Prefix List.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "SubnetTypes": {
                        "description": "The subnet types to associate a VPC Prefix List with.",
                        "example": [
                            "PRIVATE",
                            "RESTRICTED"
                        ],
                        "items": {
                            "enum": [
                                "PRIVATE",
                                "PUBLIC",
                                "RESTRICTED",
                                "CONNECTIVITY",
                                "ENDPOINT"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "TargetId": {
                        "description": "The Stax Id of either a VPN, VPC or Direct Connect Gateway which will be the target of the HUB Prefix List.",
                        "example": "ec5eaa8f-da06-4935-b5ce-05bd957c8bdc",
                        "nullable": true,
                        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "TargetType": {
                        "description": "The type of the target for the HUB Prefix List associations.",
                        "enum": [
                            "BLACKHOLE",
                            "VPC",
                            "VPN",
                            "DIRECT_CONNECT_GATEWAY",
                            "HUB_PEERING"
                        ],
                        "example": "BLACKHOLE",
                        "nullable": true,
                        "type": "string"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "VpcIds": {
                        "description": "The list of Stax VPC Ids to associate a VPC Prefix List with.",
                        "example": [
                            "a7220870-40fe-4235-abb3-4d42af0336c2",
                            "7e542285-8b90-4b57-81e1-96e87e5ee443"
                        ],
                        "items": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "VpcTypes": {
                        "description": "The VPC types to associate a VPC Prefix List with.",
                        "example": [
                            "TRANSIT",
                            "ISOLATED"
                        ],
                        "items": {
                            "enum": [
                                "TRANSIT",
                                "ISOLATED",
                                "FLAT",
                                "SHAREDSERVICES"
                            ],
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    },
                    "Zones": {
                        "description": "The VPC Zones to associate a VPC or HUB Prefix List with.",
                        "example": [
                            "ZONE1",
                            "ZONE2"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                    }
                },
                "required": [
                    "Id",
                    "NetworkingHubId",
                    "Status",
                    "Name",
                    "MaxEntries",
                    "Entries",
                    "PrefixListType"
                ],
                "type": "object"
            },
            "PrivateAssociation": {
                "additionalProperties": false,
                "properties": {
                    "Prefixes": {
                        "description": "The CIDR Ranges to advertise to on-premises.",
                        "example": [
                            "192.168.0.0\/24",
                            "192.168.1.0\/24"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "VpcId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    }
                },
                "required": [
                    "VpcId",
                    "Prefixes"
                ],
                "type": "object"
            },
            "Role": {
                "description": "Stax role assigned to user.",
                "enum": [
                    "customer_root",
                    "customer_admin",
                    "customer_user",
                    "customer_readonly",
                    "customer_costadmin",
                    "api_admin",
                    "api_user",
                    "api_readonly"
                ],
                "example": "customer_admin",
                "type": "string"
            },
            "ScanTags": {
                "additionalProperties": {
                    "maxLength": 256,
                    "minLength": 0,
                    "pattern": "^[a-zA-Z0-9+\\-=._:\/@ ]*$",
                    "type": "string"
                },
                "example": {
                    "CostCode": "12345"
                },
                "maxProperties": 1,
                "minProperties": 1,
                "nullable": true,
                "type": "object"
            },
            "SecurityHubConfiguration": {
                "additionalProperties": false,
                "properties": {
                    "Standards": {
                        "additionalProperties": false,
                        "properties": {
                            "AWS_FOUNDATIONAL_SECURITY_BEST_PRACTICES_1_0_0": {
                                "type": "boolean"
                            },
                            "AWS_REGIONS": {
                                "description": "List of AWS Regions to enable security hub standards in.",
                                "example": [
                                    "ap-southeast-2",
                                    "us-west-2"
                                ],
                                "items": {
                                    "$ref": "#\/components\/schemas\/AwsRegion"
                                },
                                "type": "array"
                            },
                            "CIS_AWS_FOUNDATIONS_BENCHMARK_1_2_0": {
                                "type": "boolean"
                            },
                            "CIS_AWS_FOUNDATIONS_BENCHMARK_1_4_0": {
                                "type": "boolean"
                            },
                            "PCI_DSS_3_2_1": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "AWS_FOUNDATIONAL_SECURITY_BEST_PRACTICES_1_0_0",
                            "AWS_REGIONS",
                            "CIS_AWS_FOUNDATIONS_BENCHMARK_1_2_0",
                            "CIS_AWS_FOUNDATIONS_BENCHMARK_1_4_0",
                            "PCI_DSS_3_2_1"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Standards"
                ],
                "type": "object"
            },
            "ServiceConfiguration": {
                "properties": {
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Enabled": {
                        "description": "Set to True if enabling an organisation service like guardduty.",
                        "type": "boolean"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2019-03-11T01:11:40.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Service": {
                        "description": "The service to configure",
                        "enum": [
                            "SECURITYHUB",
                            "GUARDDUTY"
                        ],
                        "example": "SECURITYHUB",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the service configuration",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "CONFIGURING",
                            "ERROR"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    }
                },
                "required": [
                    "Id",
                    "OrganisationId",
                    "Service",
                    "Enabled",
                    "Status"
                ],
                "type": "object"
            },
            "StaxEvent": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEvent"
                    }
                ],
                "properties": {
                    "Detail": {
                        "$ref": "#\/components\/schemas\/TaskEventDetail"
                    }
                }
            },
            "StaxTags": {
                "additionalProperties": {
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9+\\-=._:\/@ ]*$",
                    "type": "string"
                },
                "example": {
                    "CostCode": "12345"
                },
                "maxProperties": 100,
                "minProperties": 0,
                "nullable": true,
                "type": "object"
            },
            "Tags": {
                "additionalProperties": {
                    "type": "string"
                },
                "example": {
                    "CostCode": "12345"
                },
                "maxProperties": 100,
                "minProperties": 0,
                "nullable": true,
                "type": "object"
            },
            "TaskEventDetail": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEventDetail"
                    }
                ],
                "properties": {
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    }
                }
            },
            "TraceEventDetail": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEventDetail"
                    }
                ],
                "properties": {
                    "TraceId": {
                        "type": "string"
                    }
                }
            },
            "TransitAssociation": {
                "additionalProperties": false,
                "properties": {
                    "NetworkingHubId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Prefixes": {
                        "description": "The CIDR Ranges to advertise to on-premises.",
                        "example": [
                            "192.168.0.0\/24",
                            "192.168.1.0\/24"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "NetworkingHubId",
                    "Prefixes"
                ],
                "type": "object"
            },
            "TunnelMapping": {
                "additionalProperties": false,
                "properties": {
                    "TunnelName": {
                        "description": "The name of VPN tunnel",
                        "type": "string"
                    },
                    "TunnelStatus": {
                        "description": "The status of the VPN tunnel.",
                        "enum": [
                            "up",
                            "down"
                        ],
                        "example": "up",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateCatalogueDetail": {
                "properties": {
                    "Message": {
                        "$ref": "#\/components\/schemas\/MessageEventDetail"
                    },
                    "Operation": {
                        "$ref": "#\/components\/schemas\/Operation"
                    },
                    "OperationStatus": {
                        "$ref": "#\/components\/schemas\/OperationStatus"
                    },
                    "Severity": {
                        "type": "string"
                    },
                    "TraceId": {
                        "type": "string"
                    },
                    "WorkloadCatalogueItem": {
                        "$ref": "#\/components\/schemas\/CatalogueData"
                    }
                },
                "required": [
                    "Operation",
                    "OperationStatus",
                    "Severity"
                ],
                "type": "object"
            },
            "UpdateCatalogueEvent": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEvent"
                    }
                ],
                "properties": {
                    "CatalogueId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "CustomerId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Detail": {
                        "$ref": "#\/components\/schemas\/UpdateCatalogueDetail"
                    },
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "TraceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "Detail"
                ],
                "type": "object"
            },
            "UpdateWorkloadDetail": {
                "properties": {
                    "Message": {
                        "$ref": "#\/components\/schemas\/MessageEventDetail"
                    },
                    "Operation": {
                        "$ref": "#\/components\/schemas\/Operation"
                    },
                    "OperationStatus": {
                        "$ref": "#\/components\/schemas\/OperationStatus"
                    },
                    "Severity": {
                        "type": "string"
                    },
                    "Workload": {
                        "$ref": "#\/components\/schemas\/WorkloadData"
                    }
                },
                "required": [
                    "Operation",
                    "OperationStatus",
                    "Severity"
                ],
                "type": "object"
            },
            "UpdateWorkloadEvent": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/BaseEvent"
                    }
                ],
                "properties": {
                    "Detail": {
                        "$ref": "#\/components\/schemas\/UpdateWorkloadDetail"
                    },
                    "WorkloadId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "AuthOrigin": {
                        "example": "idam",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "CustomerId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Email": {
                        "description": "Email address of User.",
                        "example": "stax.user@example.com",
                        "format": "email",
                        "maxLength": 128,
                        "minLength": 6,
                        "readOnly": true,
                        "type": "string"
                    },
                    "FirstName": {
                        "description": "Given Name of the User.",
                        "example": "John",
                        "maxLength": 128,
                        "minLength": 0,
                        "nullable": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "LastName": {
                        "description": "Family Name of the User.",
                        "example": "Doe",
                        "maxLength": 128,
                        "minLength": 0,
                        "nullable": true,
                        "type": "string"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Concatenation of first and last name. Defaults to email address if neither are present.",
                        "example": "John Doe",
                        "maxLength": 128,
                        "minLength": 3,
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "Role": {
                        "$ref": "#\/components\/schemas\/Role"
                    },
                    "Status": {
                        "description": "Status of the User.",
                        "enum": [
                            "ACTIVE",
                            "DISABLED",
                            "DELETED",
                            "INVITED",
                            "NEW"
                        ],
                        "example": "ACTIVE",
                        "type": "string"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    }
                },
                "required": [
                    "Id",
                    "Email",
                    "Name",
                    "OrganisationId"
                ],
                "type": "object"
            },
            "UserGroupMemberMap": {
                "additionalProperties": false,
                "properties": {
                    "GroupId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "UserId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    }
                },
                "required": [
                    "UserId",
                    "GroupId"
                ],
                "type": "object"
            },
            "VPC": {
                "additionalProperties": false,
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "AwsVpcId": {
                        "description": "The AWS VPC ID.",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "Cidr": {
                        "description": "CIDR Range in quad dot notation. This range is a private network range with a size between \/8 to \/23",
                        "example": "10.128.0.0\/23",
                        "type": "string"
                    },
                    "CidrRangeId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CreateFlowlogCwl": {
                        "description": "Boolean value declaring to utilise a Cloudwatch log group for VPC Flow logs",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateIgw": {
                        "description": "Boolean value declaring if Internet Gateway is enabled",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateNat": {
                        "description": "Boolean value declaring if NAT Gateways is enabled",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateVgw": {
                        "description": "Boolean value declaring if a Virtual Private Gateway is enabled",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Description": {
                        "description": "Longer description of what the Stax VPC is used for.",
                        "example": "VPC for my particular application",
                        "maxLength": 2048,
                        "minLength": 0,
                        "nullable": true,
                        "type": "string"
                    },
                    "GatewayEndpoints": {
                        "items": {
                            "$ref": "#\/components\/schemas\/gateway-endpoint"
                        },
                        "type": "array"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of Stax VPC",
                        "example": "non-prod",
                        "maxLength": 255,
                        "minLength": 2,
                        "type": "string"
                    },
                    "NetworkingHubId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "PhzId": {
                        "description": "The Route53 Private Hosted Zone Id for the VPC",
                        "example": "PHZAAEXAMPLE",
                        "nullable": true,
                        "type": "string"
                    },
                    "PhzPrefix": {
                        "description": "The unique prefix to combine with the PhzSuffix to create a Route53 Private Hosted Zone for the VPC, cannot be modified once set",
                        "example": "dev",
                        "maxLength": 255,
                        "minLength": 2,
                        "nullable": true,
                        "type": "string"
                    },
                    "RedundantNat": {
                        "description": "Boolean value declaring if redundant NAT Gateways will be created",
                        "example": false,
                        "type": "boolean"
                    },
                    "Region": {
                        "$ref": "#\/components\/schemas\/AwsRegion"
                    },
                    "Size": {
                        "description": "Size of the VPC.",
                        "enum": [
                            "SMALL",
                            "MEDIUM",
                            "LARGE"
                        ],
                        "example": "SMALL",
                        "type": "string"
                    },
                    "Status": {
                        "description": "The status of the Stax VPC.",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "Type": {
                        "description": "Type of VPC. The Type determines what Route Tables are attached to the VPC",
                        "enum": [
                            "FLAT",
                            "ISOLATED",
                            "SHAREDSERVICES",
                            "TRANSIT"
                        ],
                        "example": "FLAT",
                        "type": "string"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "VgwAsn": {
                        "description": "The ASN of the Virtual Private Gateway.",
                        "example": 64513,
                        "nullable": true,
                        "type": "integer"
                    },
                    "Zone": {
                        "description": "All 'Flat' VPCs in the same Zone can communicate to each other.",
                        "example": "non-prod",
                        "maxLength": 213,
                        "minLength": 2,
                        "nullable": true,
                        "type": "string"
                    }
                },
                "required": [
                    "Id",
                    "Name",
                    "AccountId",
                    "Region"
                ],
                "type": "object"
            },
            "VifMap": {
                "additionalProperties": false,
                "properties": {
                    "Asn": {
                        "description": "ASN to assign to the Direct Connect VIF.",
                        "example": 64513,
                        "type": "integer"
                    },
                    "AwsConnectionId": {
                        "description": "AWS Id of the Direct Connect Connection.",
                        "example": "dxcon-abcdefgh",
                        "maxLength": 128,
                        "minLength": 2,
                        "type": "string"
                    },
                    "AwsRouterIp": {
                        "description": "The BGP peer IP configured on the AWS endpoint.",
                        "example": "192.168.0.2\/30",
                        "type": "string"
                    },
                    "BgpAuthKey": {
                        "description": "The password that will be used to authenticate the BGP session.",
                        "example": "secret",
                        "type": "string"
                    },
                    "DxGatewayId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "JumboMtu": {
                        "description": "Boolean value to enable Jumbo Frames.",
                        "example": false,
                        "type": "boolean"
                    },
                    "Name": {
                        "description": "Name of the Direct Connect VIF.",
                        "example": "Prod VIF",
                        "maxLength": 95,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "RouterIp": {
                        "description": "The BGP peer IP configured on your endpoint.",
                        "example": "192.168.0.1\/30",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "Vlan": {
                        "description": "VLAN for the Direct Connect VIF.",
                        "example": 4000,
                        "type": "integer"
                    }
                },
                "required": [
                    "Name",
                    "AwsConnectionId",
                    "Vlan",
                    "Asn",
                    "RouterIp",
                    "AwsRouterIp",
                    "BgpAuthKey",
                    "JumboMtu"
                ],
                "type": "object"
            },
            "VpcConnection": {
                "additionalProperties": false,
                "properties": {
                    "Name": {
                        "description": "Name of Stax VPN Connection.",
                        "example": "vpn-private-connection",
                        "maxLength": 251,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "VpcId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    }
                },
                "required": [
                    "Name",
                    "VpcId"
                ],
                "type": "object"
            },
            "VpnConnection": {
                "additionalProperties": false,
                "properties": {
                    "AwsVpnConnectionId": {
                        "description": "The AWS Id of the VPN Connection.",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ImprovedAcceleration": {
                        "description": "Boolean value to turn on AWS Global Accelerator and the AWS global network for improved performance",
                        "example": false,
                        "type": "boolean"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Customer Gateway.",
                        "example": "Prod Gateway",
                        "maxLength": 95,
                        "minLength": 2,
                        "pattern": "(?!^[0-9]$)([a-zA-Z0-9-_' '])",
                        "type": "string"
                    },
                    "NetworkingHubId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Status": {
                        "description": "The status of the Stax VPN Customer Gateway",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "VpcId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "VpnConnectionType": {
                        "description": "The type of VPN Connection.",
                        "enum": [
                            "HUB",
                            "VPC"
                        ],
                        "example": "HUB",
                        "readOnly": true,
                        "type": "string"
                    },
                    "VpnCustomerGatewayId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    }
                },
                "required": [
                    "Name",
                    "VpnCustomerGatewayId"
                ],
                "type": "object"
            },
            "VpnConnectionStatus": {
                "example": [
                    {
                        "TunnelName": "VPN Tunnel",
                        "TunnelStatus": "up"
                    }
                ],
                "items": {
                    "$ref": "#\/components\/schemas\/TunnelMapping"
                },
                "type": "array",
                "x-go-name": "ConnectionStatus"
            },
            "VpnCustomerGateway": {
                "additionalProperties": false,
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Asn": {
                        "description": "ASN to assign to the Customer Gateway.",
                        "example": 64512,
                        "type": "integer"
                    },
                    "AwsVpnCustomerGatewayId": {
                        "description": "The AWS ID of the VPN Customer Gateway.",
                        "nullable": true,
                        "readOnly": true,
                        "type": "string"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "IpAddress": {
                        "description": "The IP address for the customer gateway's outside interface.",
                        "example": "192.168.1.0",
                        "type": "string"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Customer Gateway.",
                        "example": "Prod Gateway",
                        "maxLength": 95,
                        "minLength": 2,
                        "pattern": "(?!^[0-9]$)([a-zA-Z0-9-_' '])",
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Region": {
                        "$ref": "#\/components\/schemas\/AwsRegion"
                    },
                    "Status": {
                        "description": "The status of the Stax VPN Customer Gateway",
                        "enum": [
                            "ACTIVE",
                            "CREATE_IN_PROGRESS",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED"
                        ],
                        "example": "ACTIVE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    }
                },
                "required": [
                    "Name",
                    "Asn",
                    "AccountId"
                ],
                "type": "object"
            },
            "Workload": {
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CatalogueId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CatalogueVersionId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "The Workload name.",
                        "example": "my-workload-is-cool",
                        "maxLength": 64,
                        "minLength": 2,
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Parameters": {
                        "$ref": "#\/components\/schemas\/Parameter"
                    },
                    "Protection": {
                        "description": "Boolean value declaring if the Workload is protected from deletion",
                        "example": false,
                        "type": "boolean"
                    },
                    "Region": {
                        "description": "AWS Region the workload will be launched in",
                        "example": "us-east-1",
                        "maxLength": 32,
                        "type": "string"
                    },
                    "Status": {
                        "description": "Status of the Workload.",
                        "enum": [
                            "NEW",
                            "INITIALIZING",
                            "ACTIVE",
                            "CREATE_FAILED",
                            "DELETE_IN_PROGRESS",
                            "DELETED",
                            "DELETE_FAILED",
                            "UPDATE_IN_PROGRESS",
                            "UPDATE_FAILED",
                            "UPDATE_COMPLETE"
                        ],
                        "example": "NEW",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/Tags"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    }
                },
                "required": [
                    "Id",
                    "Name",
                    "CatalogueId",
                    "AccountId",
                    "Region"
                ],
                "type": "object"
            },
            "WorkloadCatalogue": {
                "properties": {
                    "CatalogueVersionId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Description": {
                        "description": "Description of the Workload.",
                        "example": "A Workload to build a VPC in my org",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Workload Catalogue Item to create.",
                        "example": "my-directory-service",
                        "maxLength": 64,
                        "minLength": 2,
                        "type": "string"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Protection": {
                        "description": "Boolean value declaring if the Workload Catalogue Item is public or private.",
                        "example": false,
                        "type": "boolean"
                    },
                    "Public": {
                        "description": "Boolean value declaring if the Workload Catalogue Item is public or private.",
                        "example": false,
                        "type": "boolean"
                    },
                    "Status": {
                        "$ref": "#\/components\/schemas\/CatalogueStatus"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "Versions": {
                        "items": {
                            "$ref": "#\/components\/schemas\/WorkloadCatalogueVersion"
                        },
                        "readOnly": true,
                        "type": "array"
                    }
                },
                "required": [
                    "Id",
                    "Name",
                    "Status",
                    "OrganisationId"
                ],
                "type": "object"
            },
            "WorkloadCatalogueVersion": {
                "properties": {
                    "CatalogueId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "CreatedTS": {
                        "description": "Created timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Description": {
                        "description": "Description of the Workload.",
                        "example": "A Workload to build a VPC in my org",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "ManifestURL": {
                        "description": "HTTPS\/S3 URL of the manifest. Either this or ManifestBody must be provided.",
                        "example": "S3:\/\/{StaxArtifactBucket}\/workload-vpc\/your-template-ref.yml",
                        "type": "string"
                    },
                    "ModifiedTS": {
                        "description": "Modified timestamp.",
                        "example": "2018-10-11T01:05:45.000Z",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Outputs": {
                        "items": {
                            "example": "bread",
                            "type": "string"
                        },
                        "nullable": true,
                        "readOnly": true,
                        "type": "array"
                    },
                    "Parameters": {
                        "items": {
                            "$ref": "#\/components\/schemas\/Parameter"
                        },
                        "type": "array"
                    },
                    "Public": {
                        "description": "Boolean value declaring if the Workload Catalogue Item is public or private.",
                        "example": false,
                        "type": "boolean"
                    },
                    "Status": {
                        "description": "Status of the Workload.",
                        "enum": [
                            "NEW",
                            "UPLOADING",
                            "VALIDATING",
                            "ACTIVE",
                            "DELETED",
                            "FAILED"
                        ],
                        "example": "NEW",
                        "readOnly": true,
                        "type": "string"
                    },
                    "UserTaskId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "WorkloadVersion": {
                        "example": "0.01",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "required": [
                    "Id",
                    "Status",
                    "ManifestURL",
                    "WorkloadVersion"
                ],
                "type": "object"
            },
            "WorkloadData": {
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CatalogueId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CatalogueVersionId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "CreatedBy": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Name": {
                        "description": "The Workload name.",
                        "example": "my-workload-is-cool",
                        "maxLength": 64,
                        "minLength": 2,
                        "nullable": true,
                        "type": "string"
                    },
                    "Operation": {
                        "$ref": "#\/components\/schemas\/Operation"
                    },
                    "OrgId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Parameters": {
                        "$ref": "#\/components\/schemas\/Parameter"
                    },
                    "Protection": {
                        "description": "Boolean value declaring if the Workload Catalogue Item is public or private.",
                        "example": false,
                        "nullable": true,
                        "type": "boolean"
                    },
                    "Region": {
                        "description": "AWS Region the workload will be launched in",
                        "example": "us-east-1",
                        "maxLength": 32,
                        "nullable": true,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/Tags"
                    },
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "TraceId": {
                        "type": "string"
                    },
                    "WorkloadId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    }
                },
                "required": [
                    "TraceId",
                    "Name"
                ],
                "type": "object"
            },
            "accounts.CloseAccount": {
                "properties": {
                    "Id": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    }
                },
                "required": [
                    "Id"
                ],
                "type": "object"
            },
            "accounts.CloseAccountResponse": {
                "properties": {
                    "CustomerId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    },
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "TraceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "Detail",
                    "DetailType"
                ],
                "type": "object"
            },
            "accounts.CreateAccount": {
                "properties": {
                    "AccountType": {
                        "anyOf": [
                            {
                                "example": "development",
                                "type": "string"
                            },
                            {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        ]
                    },
                    "AwsAccountAlias": {
                        "description": "The IAM alias for the account",
                        "maxLength": 48,
                        "minLength": 1,
                        "nullable": true,
                        "pattern": "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Account.",
                        "example": "bakery",
                        "maxLength": 64,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9+\\-=._:\/@ ]*$",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/StaxTags"
                    }
                },
                "required": [
                    "Name",
                    "AccountType"
                ],
                "type": "object"
            },
            "accounts.CreateAccountResponse": {
                "properties": {
                    "CustomerId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Detail": {
                        "properties": {
                            "Account": {
                                "properties": {
                                    "AccountType": {
                                        "anyOf": [
                                            {
                                                "example": "development",
                                                "type": "string"
                                            },
                                            {
                                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                                            }
                                        ]
                                    },
                                    "AwsAccountAlias": {
                                        "description": "The IAM alias for the account",
                                        "maxLength": 48,
                                        "minLength": 1,
                                        "nullable": true,
                                        "pattern": "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$",
                                        "type": "string"
                                    },
                                    "Name": {
                                        "example": "automation",
                                        "type": "string"
                                    },
                                    "Operation": {
                                        "$ref": "#\/components\/schemas\/Operation"
                                    },
                                    "OrganisationId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "Tags": {
                                        "$ref": "#\/components\/schemas\/StaxTags"
                                    }
                                },
                                "type": "object"
                            },
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    },
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "TraceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "Detail",
                    "DetailType"
                ],
                "type": "object"
            },
            "accounts.CreateAccountType": {
                "additionalProperties": false,
                "properties": {
                    "Name": {
                        "description": "Name of the Account Type.",
                        "example": "Development",
                        "maxLength": 64,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9+\\-=._:\/@ ]*$",
                        "type": "string"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "accounts.CreateAccountTypeResponse": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "AccountType": {
                                "$ref": "#\/components\/schemas\/AccountType"
                            },
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Message",
                            "Operation",
                            "OperationStatus",
                            "Severity",
                            "AccountType"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "Detail",
                    "DetailType"
                ],
                "type": "object"
            },
            "accounts.DeleteAccountTypeResponse": {
                "additionalProperties": false,
                "properties": {
                    "AccountTypes": {
                        "$ref": "#\/components\/schemas\/AccountType"
                    }
                },
                "required": [
                    "AccountTypes"
                ],
                "type": "object"
            },
            "accounts.DiscoverAccount": {
                "type": "object"
            },
            "accounts.DiscoverAccounts": {
                "type": "object"
            },
            "accounts.DiscoverAccountsResponse": {
                "allOf": [
                    {
                        "properties": {
                            "CustomerId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "TaskId",
                            "CustomerId",
                            "TraceId"
                        ],
                        "type": "object"
                    },
                    {
                        "$ref": "#\/components\/schemas\/BaseEvent"
                    },
                    {
                        "properties": {
                            "Detail": {
                                "$ref": "#\/components\/schemas\/TraceEventDetail"
                            }
                        }
                    }
                ]
            },
            "accounts.OnboardAccount": {
                "properties": {
                    "AccountType": {
                        "anyOf": [
                            {
                                "example": "Development",
                                "type": "string"
                            },
                            {
                                "$ref": "#\/components\/schemas\/uuidv4"
                            }
                        ]
                    },
                    "AwsAccountId": {
                        "description": "AWS Account Id.",
                        "example": "012345678901",
                        "maxLength": 12,
                        "minLength": 12,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Account.",
                        "example": "bakery",
                        "maxLength": 64,
                        "minLength": 2,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/StaxTags"
                    }
                },
                "required": [
                    "AwsAccountId",
                    "AccountType"
                ],
                "type": "object"
            },
            "accounts.ReadAccountTypes": {
                "additionalProperties": false,
                "properties": {
                    "AccountTypes": {
                        "items": {
                            "$ref": "#\/components\/schemas\/AccountType"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "AccountTypes"
                ],
                "type": "object"
            },
            "accounts.ReadAccounts": {
                "properties": {
                    "Accounts": {
                        "items": {
                            "$ref": "#\/components\/schemas\/Account"
                        },
                        "type": "array"
                    },
                    "Paging": {
                        "$ref": "#\/components\/schemas\/Pagination"
                    }
                },
                "required": [
                    "Accounts"
                ],
                "type": "object"
            },
            "accounts.UpdateAccount": {
                "properties": {
                    "AccountType": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "AwsAccountAlias": {
                        "description": "The IAM alias for the account",
                        "example": "aws-iam-alias",
                        "maxLength": 48,
                        "minLength": 1,
                        "nullable": true,
                        "pattern": "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$",
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Account.",
                        "example": "bakery",
                        "maxLength": 64,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9+\\-=._:\/@ ]*$",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/StaxTags"
                    }
                },
                "type": "object"
            },
            "accounts.UpdateAccountResponse": {
                "properties": {
                    "CustomerId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Detail": {
                        "properties": {
                            "Account": {
                                "properties": {
                                    "AccountId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "AccountName": {
                                        "example": "automation",
                                        "type": "string"
                                    },
                                    "AccountType": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "Name": {
                                        "example": "automation",
                                        "type": "string"
                                    },
                                    "Operation": {
                                        "$ref": "#\/components\/schemas\/Operation"
                                    },
                                    "OrganisationId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "Tags": {
                                        "$ref": "#\/components\/schemas\/StaxTags"
                                    }
                                },
                                "type": "object"
                            },
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    },
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "TraceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "Detail",
                    "DetailType"
                ],
                "type": "object"
            },
            "accounts.UpdateAccountType": {
                "additionalProperties": false,
                "properties": {
                    "Name": {
                        "description": "Name of the Account Type.",
                        "example": "Development",
                        "maxLength": 64,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9+\\-=._:\/@ ]*$",
                        "type": "string"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "accounts.UpdateAccountTypeAccess": {
                "additionalProperties": false,
                "properties": {
                    "AddRoles": {
                        "example": [
                            {
                                "AccountTypeId": "ec5eaa8f-da06-4935-b5ce-05bd957c8bdc",
                                "GroupId": "ec5eaa8f-da06-4935-b5ce-05bd957c8bdc",
                                "RoleName": "admin"
                            }
                        ],
                        "items": {
                            "$ref": "#\/components\/schemas\/AccountTypeAccessMap"
                        },
                        "type": "array"
                    },
                    "RemoveRoles": {
                        "example": [],
                        "items": {
                            "$ref": "#\/components\/schemas\/AccountTypeAccessMap"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "accounts.UpdateAccountTypeAccessEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Message",
                            "Operation",
                            "OperationStatus",
                            "TaskId",
                            "Severity"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "Detail",
                    "DetailType"
                ],
                "type": "object"
            },
            "accounts.UpdateAccountTypeMembers": {
                "additionalProperties": false,
                "properties": {
                    "Members": {
                        "example": [
                            {
                                "AccountId": "B4407766-E821-450D-B7C8-9EA38B58C432",
                                "AccountTypeId": "B4407766-E821-450D-B7C8-9EA38B58C432"
                            }
                        ],
                        "items": {
                            "$ref": "#\/components\/schemas\/AccountTypeMemberMap"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Members"
                ],
                "type": "object"
            },
            "accounts.UpdateAccountTypeMembersEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/nullable-uuidv4"
                            }
                        },
                        "required": [
                            "Message",
                            "Operation",
                            "OperationStatus",
                            "TaskId",
                            "Severity"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "Detail",
                    "DetailType"
                ],
                "type": "object"
            },
            "accounts.UpdateAccountTypePolicies": {
                "properties": {
                    "AddPolicies": {
                        "example": [
                            {
                                "AccountTypeId": "ec5eaa8f-da06-4935-b5ce-05bd957c8bdc",
                                "PolicyId": "ec5eaa8f-da06-4935-b5ce-05bd957c8bdc"
                            }
                        ],
                        "items": {
                            "$ref": "#\/components\/schemas\/AccountTypePolicyMap"
                        },
                        "type": "array"
                    },
                    "RemovePolicies": {
                        "example": [],
                        "items": {
                            "$ref": "#\/components\/schemas\/AccountTypePolicyMap"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "accounts.UpdateAccountTypePoliciesEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Message",
                            "Operation",
                            "OperationStatus",
                            "TaskId",
                            "Severity"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "Detail",
                    "DetailType"
                ],
                "type": "object"
            },
            "accounts.UpdateAccountTypeResponse": {
                "additionalProperties": false,
                "properties": {
                    "AccountTypes": {
                        "$ref": "#\/components\/schemas\/AccountType"
                    }
                },
                "required": [
                    "AccountTypes"
                ],
                "type": "object"
            },
            "gateway-endpoint": {
                "description": "A list of gateway vpc endpoints",
                "enum": [
                    "dynamodb",
                    "s3"
                ],
                "example": "s3",
                "type": "string"
            },
            "interface-endpoint": {
                "description": "A list of interface vpc endpoints",
                "enum": [
                    "access-analyzer",
                    "application-autoscaling",
                    "appmesh-envoy-management",
                    "appstream.api",
                    "appstream.streaming",
                    "athena",
                    "autoscaling",
                    "autoscaling-plans",
                    "awsconnector",
                    "backup",
                    "clouddirectory",
                    "cloudformation",
                    "cloudtrail",
                    "codebuild",
                    "codecommit",
                    "codedeploy",
                    "codedeploy-commands-secure",
                    "codepipeline",
                    "config",
                    "datasync",
                    "dms",
                    "ebs",
                    "ec2",
                    "ec2messages",
                    "ecr.api",
                    "ecr.dkr",
                    "ecs",
                    "ecs-agent",
                    "ecs-telemetry",
                    "elasticfilesystem",
                    "elasticfilesystem-fips",
                    "elasticloadbalancing",
                    "email-smtp",
                    "events",
                    "execute-api",
                    "fsx",
                    "git-codecommit",
                    "glue",
                    "imagebuilder",
                    "kinesis-firehose",
                    "kinesis-streams",
                    "kms",
                    "lambda",
                    "logs",
                    "monitoring",
                    "notebook",
                    "qldb.session",
                    "rds",
                    "rds-data",
                    "rekognition",
                    "s3interface",
                    "sagemaker.api",
                    "sagemaker.runtime",
                    "secretsmanager",
                    "securityhub",
                    "servicecatalog",
                    "sms",
                    "sns",
                    "sqs",
                    "ssm",
                    "ssmmessages",
                    "storagegateway",
                    "sts",
                    "transfer",
                    "transfer.server",
                    "workspaces",
                    "xray"
                ],
                "example": "ec2",
                "type": "string"
            },
            "networking.CreateCidrExclusion": {
                "additionalProperties": false,
                "properties": {
                    "Cidr": {
                        "description": "CIDR Range in quad dot notation.",
                        "example": "10.128.0.0\/19",
                        "type": "string"
                    },
                    "Description": {
                        "description": "Longer description of what the CIDR Exclusion is used for.",
                        "example": "This Reservation blocks out existing legacy VPCs",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the CIDR Exclusion.",
                        "example": "legacy-vpcs",
                        "maxLength": 128,
                        "minLength": 2,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "required": [
                    "Name",
                    "Cidr"
                ],
                "type": "object"
            },
            "networking.CreateCidrRange": {
                "additionalProperties": false,
                "properties": {
                    "Cidr": {
                        "description": "CIDR Range in quad dot notation. This range is a private network range with a size between \/8 to \/23",
                        "example": "10.128.0.0\/23",
                        "type": "string"
                    },
                    "Description": {
                        "description": "Longer description of what the CIDR Range is used for.",
                        "example": "CIDR Range used for team ABCD application 1234",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the CIDR Range.",
                        "example": "prod",
                        "maxLength": 128,
                        "minLength": 2,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "required": [
                    "Name",
                    "Cidr"
                ],
                "type": "object"
            },
            "networking.CreateDnsResolver": {
                "additionalProperties": false,
                "properties": {
                    "Name": {
                        "description": "Name of Stax DNS Resolver.",
                        "example": "dns",
                        "maxLength": 50,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "NumberOfInterfaces": {
                        "description": "The number of ENIs to attach to the Stax DNS Resolvers.",
                        "example": 2,
                        "type": "integer"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "required": [
                    "Name",
                    "NumberOfInterfaces"
                ],
                "type": "object"
            },
            "networking.CreateDnsResolverEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "DnsResolver": {
                                "additionalProperties": false,
                                "properties": {
                                    "Id": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "Id"
                                ],
                                "type": "object"
                            },
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "DnsResolver"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.CreateDnsRule": {
                "additionalProperties": false,
                "properties": {
                    "DomainName": {
                        "description": "Domain name to forward DNS queries for.",
                        "example": "test.local",
                        "maxLength": 256,
                        "minLength": 2,
                        "pattern": "^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$",
                        "type": "string"
                    },
                    "ForwarderIpAddresses": {
                        "description": "The IP Addresses to forward DNS queries to.",
                        "example": [
                            "192.168.0.1",
                            "192.168.0.2"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Name": {
                        "description": "Name of Stax DNS Rule.",
                        "example": "on-premises",
                        "maxLength": 64,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "required": [
                    "Name",
                    "DomainName",
                    "ForwarderIpAddresses"
                ],
                "type": "object"
            },
            "networking.CreateDnsRuleEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "DnsRule": {
                                "additionalProperties": false,
                                "properties": {
                                    "Id": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "Id"
                                ],
                                "type": "object"
                            },
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "DnsRule"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.CreateDxAssociation": {
                "oneOf": [
                    {
                        "$ref": "#\/components\/schemas\/TransitAssociation"
                    },
                    {
                        "$ref": "#\/components\/schemas\/PrivateAssociation"
                    }
                ]
            },
            "networking.CreateDxAssociationEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "DxAssociation": {
                                "additionalProperties": false,
                                "properties": {
                                    "Id": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "Id"
                                ],
                                "type": "object"
                            },
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "DxAssociation"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.CreateDxResource": {
                "additionalProperties": false,
                "properties": {
                    "Gateway": {
                        "$ref": "#\/components\/schemas\/GatewayMap"
                    },
                    "Vif": {
                        "$ref": "#\/components\/schemas\/VifMap"
                    }
                },
                "type": "object"
            },
            "networking.CreateDxResourceEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "DxResource": {
                                "additionalProperties": false,
                                "properties": {
                                    "Gateway": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Id": {
                                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Vif": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Id": {
                                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "DxResource"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.CreateHub": {
                "additionalProperties": false,
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "AmazonSideAsn": {
                        "description": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session",
                        "example": 64512,
                        "maximum": 65534,
                        "minimum": 64512,
                        "type": "integer"
                    },
                    "Cidr": {
                        "description": "CIDR Range in quad dot notation. This range is a private network range with a size between \/8 to \/22 for the Transit VPC",
                        "example": "10.128.0.0\/22",
                        "type": "string"
                    },
                    "CidrExclusions": {
                        "items": {
                            "$ref": "#\/components\/schemas\/CidrExclusion"
                        },
                        "type": "array"
                    },
                    "CidrRangeName": {
                        "description": "Name of the CIDR Range where the Transit VPC lives.",
                        "example": "myrange",
                        "maxLength": 128,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "CreateCloudwatchVpcFlowlogs": {
                        "description": "Boolean value declaring to utilise a Cloudwatch log group for VPC Flow logs",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateInternetGateway": {
                        "description": "Boolean value declaring to create an Internet Gateway",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateNatGateway": {
                        "description": "Boolean value declaring to create a NAT Gateway",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateVirtualPrivateGateway": {
                        "description": "Boolean value declaring to create a Virtual Private Gateway",
                        "example": true,
                        "type": "boolean"
                    },
                    "Description": {
                        "description": "Longer description of what the Stax Networking Hub is used for.",
                        "example": "This Hub is for a team ABCD applications",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    },
                    "GatewayEndpoints": {
                        "items": {
                            "$ref": "#\/components\/schemas\/gateway-endpoint"
                        },
                        "type": "array"
                    },
                    "InterfaceEndpoints": {
                        "items": {
                            "$ref": "#\/components\/schemas\/interface-endpoint"
                        },
                        "type": "array"
                    },
                    "Name": {
                        "description": "Name of Stax Networking Hub.",
                        "example": "prod",
                        "maxLength": 238,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "PhzSuffix": {
                        "description": "The suffix used to create Route53 Private Hosted Zones names within the Networking Hub, cannot be modified once set",
                        "example": "my-domain.cloud",
                        "maxLength": 255,
                        "minLength": 0,
                        "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                        "type": "string"
                    },
                    "RedundantEndpoints": {
                        "description": "Boolean value declaring if redundant Interface VPC Endpoints will be created",
                        "example": true,
                        "type": "boolean"
                    },
                    "RedundantNat": {
                        "description": "Boolean value declaring to create redundant NAT Gateways",
                        "example": true,
                        "type": "boolean"
                    },
                    "Region": {
                        "$ref": "#\/components\/schemas\/AwsRegion"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "VirtualPrivateGatewayAsn": {
                        "description": "ASN to assign to the Virtual Private Gateway",
                        "example": 64513,
                        "type": "integer"
                    },
                    "VpnEcmpSupport": {
                        "description": "Boolean value declaring to enable or disable Equal Cost Multipath Protocol support",
                        "example": true,
                        "type": "boolean"
                    }
                },
                "required": [
                    "Name",
                    "AccountId",
                    "Region",
                    "Cidr",
                    "CreateNatGateway",
                    "CreateInternetGateway"
                ],
                "type": "object"
            },
            "networking.CreateHubEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "NetworkingHub": {
                                "additionalProperties": false,
                                "properties": {
                                    "Id": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "Id"
                                ],
                                "type": "object"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "NetworkingHub"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.CreateHubPeering": {
                "additionalProperties": false,
                "properties": {
                    "DestinationAwsAccountId": {
                        "description": "The AWS Account Id that contains the Destination TGW.",
                        "example": "000011112222",
                        "maxLength": 12,
                        "minLength": 12,
                        "nullable": true,
                        "pattern": "^\\d{12,12}$",
                        "type": "string"
                    },
                    "DestinationAwsRegion": {
                        "$ref": "#\/components\/schemas\/nullable-AwsRegion"
                    },
                    "DestinationAwsTgwId": {
                        "description": "The AWS Id of the Destination TGW.",
                        "example": "tgw-0000aaaa1111bbbbb",
                        "maxLength": 21,
                        "minLength": 21,
                        "nullable": true,
                        "pattern": "^tgw-[a-zA-Z0-9]*$",
                        "type": "string"
                    },
                    "DestinationNetworkingHubId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "HubPeeringTarget": {
                        "description": "The target type to determine the actions against the destination.",
                        "enum": [
                            "STAX_RESOURCE",
                            "STAX_ACCOUNT",
                            "EXTERNAL"
                        ],
                        "example": "STAX_RESOURCE",
                        "readOnly": true,
                        "type": "string"
                    },
                    "Name": {
                        "description": "The Name of the Hub Peering.",
                        "example": "Prod-Shared",
                        "maxLength": 128,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "required": [
                    "Name",
                    "HubPeeringTarget"
                ],
                "type": "object"
            },
            "networking.CreateHubPeeringEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "HubPeering": {
                                "additionalProperties": false,
                                "properties": {
                                    "Id": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "Id"
                                ],
                                "type": "object"
                            },
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "HubPeering"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.CreateHubPrefixList": {
                "additionalProperties": false,
                "properties": {
                    "Entries": {
                        "description": "The CIDR Ranges to include in the Prefix List.",
                        "example": [
                            "192.168.0.1\/32",
                            "192.168.0.2\/32"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "MaxEntries": {
                        "description": "The maximum number of CIDR entries that can exist in the Prefix List.",
                        "example": 3,
                        "type": "integer"
                    },
                    "Name": {
                        "description": "Name of the Stax Prefix List.",
                        "example": "example",
                        "maxLength": 245,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "RouteTableTypes": {
                        "description": "The TGW Route Table types to associate a HUB Prefix List with.",
                        "example": [
                            "INFRASTRUCTURE",
                            "ISOLATED"
                        ],
                        "items": {
                            "enum": [
                                "INFRASTRUCTURE",
                                "ISOLATED",
                                "ONPREMISES",
                                "FLAT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "TargetId": {
                        "description": "The Stax Id of either a VPN, VPC or Direct Connect Gateway which will be the target of the HUB Prefix List.",
                        "example": "ec5eaa8f-da06-4935-b5ce-05bd957c8bdc",
                        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "TargetType": {
                        "description": "The type of the target for the HUB Prefix List associations.",
                        "enum": [
                            "BLACKHOLE",
                            "VPC",
                            "VPN",
                            "DIRECT_CONNECT_GATEWAY",
                            "HUB_PEERING"
                        ],
                        "example": "BLACKHOLE",
                        "type": "string"
                    },
                    "Zones": {
                        "description": "The VPC Zones to associate a HUB Prefix List with.",
                        "example": [
                            "ZONE1",
                            "ZONE2"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Name",
                    "MaxEntries",
                    "Entries",
                    "TargetType"
                ],
                "type": "object"
            },
            "networking.CreatePrefixListEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "PrefixList": {
                                "additionalProperties": false,
                                "properties": {
                                    "Id": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "Id"
                                ],
                                "type": "object"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "PrefixList"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.CreateVpc": {
                "additionalProperties": false,
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CidrRangeId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CreateCloudwatchVpcFlowlogs": {
                        "description": "Boolean value declaring to utilise a Cloudwatch log group for VPC Flow logs",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateInternetGateway": {
                        "description": "Boolean value declaring to create an Internet Gateway",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateVirtualPrivateGateway": {
                        "description": "Boolean value declaring to create a Virtual Private Gateway",
                        "example": true,
                        "type": "boolean"
                    },
                    "Description": {
                        "description": "Longer description of what the Stax VPC is used for.",
                        "example": "VPC for a non-prod microservice",
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string"
                    },
                    "GatewayEndpoints": {
                        "items": {
                            "$ref": "#\/components\/schemas\/gateway-endpoint"
                        },
                        "type": "array"
                    },
                    "Name": {
                        "description": "Name of Stax VPC",
                        "example": "dev-ms-customers",
                        "maxLength": 255,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "PhzPrefix": {
                        "description": "The unique prefix to combine with the PhzSuffix to create a Route53 Private Hosted Zone for the VPC, cannot be modified once set",
                        "example": "dev",
                        "maxLength": 255,
                        "minLength": 0,
                        "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                        "type": "string"
                    },
                    "Region": {
                        "$ref": "#\/components\/schemas\/AwsRegion"
                    },
                    "Size": {
                        "description": "Size of the VPC.",
                        "enum": [
                            "SMALL",
                            "MEDIUM",
                            "LARGE"
                        ],
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "Type": {
                        "description": "Type of VPC. The Type determines what Route Tables are attached to the VPC",
                        "enum": [
                            "ISOLATED",
                            "FLAT",
                            "SHAREDSERVICES"
                        ],
                        "type": "string"
                    },
                    "VirtualPrivateGatewayAsn": {
                        "description": "ASN to assign to the Virtual Private Gateway",
                        "example": 64513,
                        "type": "integer"
                    },
                    "Zone": {
                        "description": "All 'Flat' VPCs in the same Zone can communicate to each other.",
                        "example": "my-zone",
                        "maxLength": 213,
                        "minLength": 2,
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "CidrRangeId",
                    "AccountId",
                    "Region",
                    "Size",
                    "Type",
                    "CreateInternetGateway"
                ],
                "type": "object"
            },
            "networking.CreateVpcEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            },
                            "VPC": {
                                "additionalProperties": false,
                                "properties": {
                                    "Id": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "Id"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "VPC"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.CreateVpcPrefixList": {
                "additionalProperties": false,
                "properties": {
                    "Entries": {
                        "description": "The CIDR Ranges to include in the Prefix List.",
                        "example": [
                            "192.168.0.1\/32",
                            "192.168.0.2\/32"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "MaxEntries": {
                        "description": "The maximum number of CIDR entries that can exist in the Prefix List.",
                        "example": 3,
                        "type": "integer"
                    },
                    "Name": {
                        "description": "Name of the Stax Prefix List.",
                        "example": "example",
                        "maxLength": 245,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "SubnetTypes": {
                        "description": "The subnet types to associate a VPC Prefix List with.",
                        "example": [
                            "PRIVATE",
                            "RESTRICTED"
                        ],
                        "items": {
                            "enum": [
                                "PRIVATE",
                                "PUBLIC",
                                "RESTRICTED",
                                "CONNECTIVITY",
                                "ENDPOINT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "VpcIds": {
                        "description": "The list of Stax VPC Ids to associate a VPC Prefix List with.",
                        "example": [
                            "a7220870-40fe-4235-abb3-4d42af0336c2",
                            "7e542285-8b90-4b57-81e1-96e87e5ee443"
                        ],
                        "items": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        },
                        "type": "array"
                    },
                    "VpcTypes": {
                        "description": "The VPC types to associate a VPC Prefix List with.",
                        "example": [
                            "TRANSIT",
                            "ISOLATED"
                        ],
                        "items": {
                            "enum": [
                                "TRANSIT",
                                "ISOLATED",
                                "FLAT",
                                "SHAREDSERVICES"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Zones": {
                        "description": "The VPC Zones to associate a VPC Prefix List with.",
                        "example": [
                            "ZONE1",
                            "ZONE2"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Name",
                    "MaxEntries",
                    "Entries"
                ],
                "type": "object"
            },
            "networking.CreateVpnConnection": {
                "oneOf": [
                    {
                        "$ref": "#\/components\/schemas\/HubConnection"
                    },
                    {
                        "$ref": "#\/components\/schemas\/VpcConnection"
                    }
                ]
            },
            "networking.CreateVpnConnectionEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            },
                            "VpnConnection": {
                                "additionalProperties": false,
                                "properties": {
                                    "Id": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "Id"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "VpnConnection"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.CreateVpnCustomerGateway": {
                "additionalProperties": false,
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Asn": {
                        "description": "ASN to assign to the VPN Customer Gateway.",
                        "example": 64513,
                        "maximum": 65534,
                        "minimum": 64512,
                        "type": "integer"
                    },
                    "IpAddress": {
                        "description": "The Internet-routable IP address for the customer gateway's outside interface. The address must be static.",
                        "example": "1.1.1.1",
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of Stax VPN Customer Gateway.",
                        "example": "vpn-gw",
                        "maxLength": 251,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "Region": {
                        "$ref": "#\/components\/schemas\/AwsRegion"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "required": [
                    "Name",
                    "Asn",
                    "IpAddress",
                    "AccountId",
                    "Region"
                ],
                "type": "object"
            },
            "networking.CreateVpnCustomerGatewayEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            },
                            "VpnCustomerGateway": {
                                "additionalProperties": false,
                                "properties": {
                                    "Id": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "Id"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "VpnCustomerGateway"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.DeleteDnsResolverEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.DeleteDnsRuleEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.DeleteDxAssociationEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.DeleteDxGatewayEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.DeleteDxVifEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.DeleteHubEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.DeleteHubPeeringEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.DeletePrefixListEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.DeleteVpcEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.DeleteVpnConnectionEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.DeleteVpnCustomerGatewayEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.ReadCidrExclusions": {
                "additionalProperties": false,
                "properties": {
                    "Exclusions": {
                        "items": {
                            "$ref": "#\/components\/schemas\/CidrExclusion"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Exclusions"
                ],
                "type": "object"
            },
            "networking.ReadCidrRanges": {
                "additionalProperties": false,
                "properties": {
                    "Ranges": {
                        "items": {
                            "$ref": "#\/components\/schemas\/CidrRange"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Ranges"
                ],
                "type": "object"
            },
            "networking.ReadDnsResolvers": {
                "additionalProperties": false,
                "properties": {
                    "DnsResolvers": {
                        "items": {
                            "$ref": "#\/components\/schemas\/DNSResolver"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DnsResolvers"
                ],
                "type": "object"
            },
            "networking.ReadDnsRules": {
                "additionalProperties": false,
                "properties": {
                    "DnsRules": {
                        "items": {
                            "$ref": "#\/components\/schemas\/DNSRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DnsRules"
                ],
                "type": "object"
            },
            "networking.ReadDxAssociations": {
                "additionalProperties": false,
                "properties": {
                    "DxAssociations": {
                        "items": {
                            "$ref": "#\/components\/schemas\/DxAssociation"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DxAssociations"
                ],
                "type": "object"
            },
            "networking.ReadDxConnections": {
                "additionalProperties": false,
                "properties": {
                    "DxConnections": {
                        "items": {
                            "$ref": "#\/components\/schemas\/DxConnection"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DxConnections"
                ],
                "type": "object"
            },
            "networking.ReadDxGateways": {
                "additionalProperties": false,
                "properties": {
                    "DxGateways": {
                        "items": {
                            "$ref": "#\/components\/schemas\/DxGateway"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DxGateways"
                ],
                "type": "object"
            },
            "networking.ReadDxVifStatus": {
                "additionalProperties": false,
                "properties": {
                    "DxVifStatus": {
                        "$ref": "#\/components\/schemas\/DxVifStatus"
                    }
                },
                "type": "object"
            },
            "networking.ReadDxVifs": {
                "additionalProperties": false,
                "properties": {
                    "DxVifs": {
                        "items": {
                            "$ref": "#\/components\/schemas\/DxVif"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "DxVifs"
                ],
                "type": "object"
            },
            "networking.ReadHubPeerings": {
                "additionalProperties": false,
                "properties": {
                    "HubPeerings": {
                        "items": {
                            "$ref": "#\/components\/schemas\/HubPeering"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "HubPeerings"
                ],
                "type": "object"
            },
            "networking.ReadHubs": {
                "additionalProperties": false,
                "properties": {
                    "Hubs": {
                        "items": {
                            "$ref": "#\/components\/schemas\/NetworkingHub"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Hubs"
                ],
                "type": "object"
            },
            "networking.ReadPrefixLists": {
                "additionalProperties": false,
                "properties": {
                    "PrefixLists": {
                        "items": {
                            "$ref": "#\/components\/schemas\/PrefixList"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "PrefixLists"
                ],
                "type": "object"
            },
            "networking.ReadVpcs": {
                "additionalProperties": false,
                "properties": {
                    "Vpcs": {
                        "items": {
                            "$ref": "#\/components\/schemas\/VPC"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Vpcs"
                ],
                "type": "object"
            },
            "networking.ReadVpnConnectionStatus": {
                "additionalProperties": false,
                "properties": {
                    "VpnConnectionStatus": {
                        "$ref": "#\/components\/schemas\/VpnConnectionStatus"
                    }
                },
                "type": "object"
            },
            "networking.ReadVpnConnections": {
                "additionalProperties": false,
                "properties": {
                    "VpnConnections": {
                        "items": {
                            "$ref": "#\/components\/schemas\/VpnConnection"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "VpnConnections"
                ],
                "type": "object"
            },
            "networking.ReadVpnCustomerGateways": {
                "additionalProperties": false,
                "properties": {
                    "VpnCustomerGateways": {
                        "items": {
                            "$ref": "#\/components\/schemas\/VpnCustomerGateway"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "VpnCustomerGateways"
                ],
                "type": "object"
            },
            "networking.UpdateCidrExclusion": {
                "additionalProperties": false,
                "properties": {
                    "Description": {
                        "description": "Longer description of what the CIDR Exclusion is used for.",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the CIDR Exclusion.",
                        "example": "data-center",
                        "maxLength": 128,
                        "minLength": 2,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "type": "object"
            },
            "networking.UpdateCidrRange": {
                "additionalProperties": false,
                "properties": {
                    "Description": {
                        "description": "Longer description of what the CIDR Range is used for.",
                        "example": "CIDR Range used for team ABCD application 1234",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the CIDR Range.",
                        "example": "prod",
                        "maxLength": 128,
                        "minLength": 2,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "type": "object"
            },
            "networking.UpdateDnsResolver": {
                "additionalProperties": false,
                "properties": {
                    "Name": {
                        "description": "Name of Stax DNS Resolver.",
                        "example": "dns",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "NumberOfInterfaces": {
                        "description": "The number of ENIs to attach to the DNS Resolvers.",
                        "example": 2,
                        "type": "integer"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "type": "object"
            },
            "networking.UpdateDnsResolverEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.UpdateDnsRule": {
                "additionalProperties": false,
                "properties": {
                    "ForwarderIpAddresses": {
                        "description": "The IP Addresses to forward DNS queries to.",
                        "example": [
                            "192.168.0.1",
                            "192.168.0.2"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Name": {
                        "description": "Name of Stax DNS Rule.",
                        "example": "on-premises",
                        "maxLength": 64,
                        "minLength": 2,
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "type": "object"
            },
            "networking.UpdateDnsRuleEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.UpdateDxAssociation": {
                "additionalProperties": false,
                "properties": {
                    "Prefixes": {
                        "description": "The CIDR Ranges to advertise to on-premises.",
                        "example": [
                            "192.168.0.0\/24",
                            "192.168.1.0\/24"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "networking.UpdateDxAssociationEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.UpdateDxVif": {
                "additionalProperties": false,
                "properties": {
                    "JumboMtu": {
                        "description": "Boolean value to enable Jumbo Frames.",
                        "example": false,
                        "type": "boolean"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "type": "object"
            },
            "networking.UpdateDxVifEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.UpdateHub": {
                "additionalProperties": false,
                "properties": {
                    "CreateCloudwatchVpcFlowlogs": {
                        "description": "Boolean value declaring to utilise a Cloudwatch log group for VPC Flow logs",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateInternetGateway": {
                        "description": "Boolean value declaring to create an Internet Gateway",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateNatGateway": {
                        "description": "Boolean value declaring to create a NAT Gateway",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateVirtualPrivateGateway": {
                        "description": "Boolean value declaring to create a Virtual Private Gateway",
                        "example": true,
                        "type": "boolean"
                    },
                    "Description": {
                        "description": "Longer description of what the Stax Networking Hub is used for.",
                        "example": "This Hub is for connectivity from headquaters to VPC workloads",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "GatewayEndpoints": {
                        "items": {
                            "$ref": "#\/components\/schemas\/gateway-endpoint"
                        },
                        "type": "array"
                    },
                    "InterfaceEndpoints": {
                        "items": {
                            "$ref": "#\/components\/schemas\/interface-endpoint"
                        },
                        "type": "array"
                    },
                    "Name": {
                        "description": "Name of Stax Networking Hub",
                        "example": "prod",
                        "maxLength": 238,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "PhzSuffix": {
                        "description": "The suffix used to create Route53 Private Hosted Zones names within the Networking Hub, cannot be modified once set",
                        "example": "my-domain.cloud",
                        "maxLength": 255,
                        "minLength": 0,
                        "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                        "type": "string"
                    },
                    "RedundantEndpoints": {
                        "description": "Boolean value declaring if redundant Interface VPC Endpoints will be created",
                        "example": true,
                        "type": "boolean"
                    },
                    "RedundantNat": {
                        "description": "Boolean value declaring to create redundant NAT Gateways",
                        "example": true,
                        "type": "boolean"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "VirtualPrivateGatewayAsn": {
                        "description": "ASN to assign to the Virtual Private Gateway",
                        "example": 64513,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "networking.UpdateHubEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.UpdateHubPeering": {
                "additionalProperties": false,
                "properties": {
                    "Name": {
                        "description": "The Name of the Hub Peering.",
                        "example": "Prod-Shared",
                        "maxLength": 128,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "type": "object"
            },
            "networking.UpdateHubPeeringEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.UpdateHubPrefixListAssociation": {
                "additionalProperties": false,
                "properties": {
                    "RouteTableTypes": {
                        "description": "The TGW Route Table types to associate a HUB Prefix List with.",
                        "example": [
                            "INFRASTRUCTURE",
                            "ISOLATED"
                        ],
                        "items": {
                            "enum": [
                                "INFRASTRUCTURE",
                                "ISOLATED",
                                "ONPREMISES",
                                "FLAT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Zones": {
                        "description": "The VPC Zones to associate a HUB Prefix List with.",
                        "example": [
                            "ZONE1",
                            "ZONE2"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "networking.UpdatePrefixList": {
                "additionalProperties": false,
                "properties": {
                    "Entries": {
                        "description": "The CIDR Ranges to include in the Prefix List.",
                        "example": [
                            "192.168.0.1\/32",
                            "192.168.0.2\/32"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "MaxEntries": {
                        "description": "The maximum number of CIDR entries that can exist in the Prefix List.",
                        "example": 3,
                        "type": "integer"
                    },
                    "Name": {
                        "description": "Name of the Stax Prefix List.",
                        "example": "example",
                        "maxLength": 245,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "TargetId": {
                        "description": "The Stax Id of either a VPN, VPC or Direct Connect Gateway which will be the target of the HUB Prefix List.",
                        "example": "ec5eaa8f-da06-4935-b5ce-05bd957c8bdc",
                        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                        "type": "string"
                    },
                    "TargetType": {
                        "description": "The type of the target for the HUB Prefix List associations.",
                        "enum": [
                            "BLACKHOLE",
                            "VPC",
                            "VPN",
                            "DIRECT_CONNECT_GATEWAY",
                            "HUB_PEERING"
                        ],
                        "example": "BLACKHOLE",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "networking.UpdatePrefixListAssociationEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.UpdatePrefixListEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.UpdateVpc": {
                "additionalProperties": false,
                "properties": {
                    "CreateCloudwatchVpcFlowlogs": {
                        "description": "Boolean value declaring to utilise a Cloudwatch log group for VPC Flow logs",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateInternetGateway": {
                        "description": "Boolean value declaring to create an Internet Gateway",
                        "example": true,
                        "type": "boolean"
                    },
                    "CreateVirtualPrivateGateway": {
                        "description": "Boolean value declaring to create a Virtual Private Gateway",
                        "example": true,
                        "type": "boolean"
                    },
                    "Description": {
                        "description": "Longer description of what this VPC is used for.",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "GatewayEndpoints": {
                        "items": {
                            "$ref": "#\/components\/schemas\/gateway-endpoint"
                        },
                        "type": "array"
                    },
                    "Name": {
                        "description": "Name of the Stax VPC",
                        "example": "prod",
                        "maxLength": 255,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "PhzPrefix": {
                        "description": "The unique prefix to combine with the PhzSuffix to create a Route53 Private Hosted Zone for the VPC, cannot be modified once set",
                        "example": "dev",
                        "maxLength": 255,
                        "minLength": 0,
                        "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    },
                    "VirtualPrivateGatewayAsn": {
                        "description": "ASN to assign to the Virtual Private Gateway",
                        "example": 64513,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "networking.UpdateVpcEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.UpdateVpcPrefixListAssociation": {
                "additionalProperties": false,
                "properties": {
                    "SubnetTypes": {
                        "description": "The subnet types to associate a VPC Prefix List with.",
                        "example": [
                            "PRIVATE",
                            "RESTRICTED"
                        ],
                        "items": {
                            "enum": [
                                "PRIVATE",
                                "PUBLIC",
                                "RESTRICTED",
                                "CONNECTIVITY",
                                "ENDPOINT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "VpcIds": {
                        "description": "The list of Stax VPC Ids to associate a VPC Prefix List with.",
                        "example": [
                            "a7220870-40fe-4235-abb3-4d42af0336c2",
                            "7e542285-8b90-4b57-81e1-96e87e5ee443"
                        ],
                        "items": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        },
                        "type": "array"
                    },
                    "VpcTypes": {
                        "description": "The VPC types to associate a VPC Prefix List with.",
                        "example": [
                            "TRANSIT",
                            "ISOLATED"
                        ],
                        "items": {
                            "enum": [
                                "TRANSIT",
                                "ISOLATED",
                                "FLAT",
                                "SHAREDSERVICES"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Zones": {
                        "description": "The VPC Zones to associate a VPC Prefix List with.",
                        "example": [
                            "ZONE1",
                            "ZONE2"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "networking.UpdateVpnConnection": {
                "additionalProperties": false,
                "properties": {
                    "Name": {
                        "description": "Name of Stax VPN Connection.",
                        "example": "new-vpn-gw",
                        "maxLength": 251,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "type": "object"
            },
            "networking.UpdateVpnConnectionEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "networking.UpdateVpnCustomerGateway": {
                "additionalProperties": false,
                "properties": {
                    "Name": {
                        "description": "Name of Stax VPN Customer Gateway.",
                        "example": "vpn-gw",
                        "maxLength": 251,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z0-9-_ ]*$",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/NetworkingTags"
                    }
                },
                "type": "object"
            },
            "networking.UpdateVpnCustomerGatewayEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "$ref": "#\/components\/schemas\/MessageEventDetail"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "nullable-AwsRegion": {
                "description": "AWS Region",
                "enum": [
                    "ap-northeast-1",
                    "ap-northeast-2",
                    "ap-south-1",
                    "ap-southeast-1",
                    "ap-southeast-2",
                    "ca-central-1",
                    "eu-central-1",
                    "eu-north-1",
                    "eu-west-1",
                    "eu-west-2",
                    "eu-west-3",
                    "sa-east-1",
                    "us-east-1",
                    "us-east-2",
                    "us-west-1",
                    "us-west-2"
                ],
                "nullable": true,
                "type": "string"
            },
            "nullable-uuidv4": {
                "example": "e893d7e0-9306-11e9-bc42-526af7764f64",
                "nullable": true,
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string"
            },
            "organisations.AttachPolicy": {
                "additionalProperties": false,
                "properties": {
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    }
                },
                "type": "object"
            },
            "organisations.AttachPolicyEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "organisations.CreateOrganisationalUnit": {
                "properties": {
                    "Name": {
                        "description": "Name of the Organisational Unit.",
                        "example": "DenyAll",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[\\s\\S]*$",
                        "type": "string"
                    },
                    "ParentOrganisationalUnitId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/Tags"
                    }
                },
                "required": [
                    "Name",
                    "ParentOrganisationalUnitId"
                ],
                "type": "object"
            },
            "organisations.CreateOrganisationalUnitEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "OrganisationalUnit": {
                                "additionalProperties": false,
                                "properties": {
                                    "OrganisationalUnitId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "OrganisationalUnitId"
                                ],
                                "type": "object"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId",
                            "OrganisationalUnit"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "organisations.CreatePolicy": {
                "properties": {
                    "Description": {
                        "description": "Description of the Policy.",
                        "example": "A service control policy that denies access to all.",
                        "maxLength": 1024,
                        "minLength": 3,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Policy.",
                        "example": "DenyAll",
                        "maxLength": 128,
                        "minLength": 3,
                        "type": "string"
                    },
                    "Policy": {
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Description",
                    "Policy"
                ],
                "type": "object"
            },
            "organisations.CreatePolicyEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Policy": {
                                "additionalProperties": false,
                                "properties": {
                                    "CreatedBy": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "CustomerId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "Description": {
                                        "description": "Description of the Policy.",
                                        "example": "A service control policy that denies access to all.",
                                        "maxLength": 1024,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "Mandatory": {
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "description": "Name of the Policy.",
                                        "example": "DenyAll",
                                        "maxLength": 128,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "Operation": {
                                        "$ref": "#\/components\/schemas\/Operation"
                                    },
                                    "OrgId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "OrganisationId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "Policy": {
                                        "type": "string"
                                    },
                                    "PolicyId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "Public": {
                                        "type": "boolean"
                                    },
                                    "TaskId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "TraceId": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "PolicyId"
                                ],
                                "type": "object"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId",
                            "Policy"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "organisations.DeleteOrganisationalUnitEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "OrganisationalUnit": {
                                "additionalProperties": false,
                                "properties": {
                                    "OrganisationalUnitId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "OrganisationalUnitId"
                                ],
                                "type": "object"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId",
                            "OrganisationalUnit"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "organisations.DeletePolicyEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Policy": {
                                "additionalProperties": false,
                                "properties": {
                                    "CreatedBy": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "CustomerId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "Operation": {
                                        "$ref": "#\/components\/schemas\/Operation"
                                    },
                                    "OrgId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "OrganisationId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "PolicyId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "TaskId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "TraceId": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "PolicyId"
                                ],
                                "type": "object"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId",
                            "Policy"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "organisations.DetachPolicyEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "organisations.ReadOrganisationalUnits": {
                "additionalProperties": false,
                "properties": {
                    "OrganisationalUnits": {
                        "items": {
                            "$ref": "#\/components\/schemas\/OrganisationalUnit"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "OrganisationalUnits"
                ],
                "type": "object"
            },
            "organisations.ReadOrganisations": {
                "properties": {
                    "Organisations": {
                        "items": {
                            "$ref": "#\/components\/schemas\/Organisation"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "organisations.ReadPolicies": {
                "additionalProperties": false,
                "properties": {
                    "Policies": {
                        "items": {
                            "$ref": "#\/components\/schemas\/Policy"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Policies"
                ],
                "type": "object"
            },
            "organisations.UpdateOrganisationalUnit": {
                "properties": {
                    "Name": {
                        "description": "Name of the Organisational Unit.",
                        "example": "Root",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[\\s\\S]*$",
                        "type": "string"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/Tags"
                    }
                },
                "type": "object"
            },
            "organisations.UpdateOrganisationalUnitEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "OrganisationalUnit": {
                                "additionalProperties": false,
                                "properties": {
                                    "OrganisationalUnitId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "OrganisationalUnitId"
                                ],
                                "type": "object"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId",
                            "OrganisationalUnit"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "organisations.UpdatePolicy": {
                "properties": {
                    "Description": {
                        "description": "Description of the Policy.",
                        "example": "A service control policy that denies access to all.",
                        "maxLength": 1024,
                        "minLength": 3,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Policy.",
                        "example": "DenyAll",
                        "maxLength": 128,
                        "minLength": 3,
                        "type": "string"
                    },
                    "Policy": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "organisations.UpdatePolicyEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Policy": {
                                "additionalProperties": false,
                                "properties": {
                                    "CreatedBy": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "CustomerId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "Description": {
                                        "maxLength": 1024,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "Mandatory": {
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "maxLength": 128,
                                        "minLength": 3,
                                        "type": "string"
                                    },
                                    "Operation": {
                                        "$ref": "#\/components\/schemas\/Operation"
                                    },
                                    "OrgId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "OrganisationId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "Policy": {
                                        "type": "string"
                                    },
                                    "PolicyId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "Public": {
                                        "type": "boolean"
                                    },
                                    "TaskId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    },
                                    "TraceId": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "PolicyId"
                                ],
                                "type": "object"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId",
                            "Policy"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "policies.AttachPolicy": {
                "additionalProperties": false,
                "anyOf": [
                    {
                        "required": [
                            "OrganisationalUnitId"
                        ]
                    },
                    {
                        "required": [
                            "AccountId"
                        ]
                    }
                ],
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    },
                    "OrganisationalUnitId": {
                        "$ref": "#\/components\/schemas\/nullable-uuidv4"
                    }
                },
                "type": "object"
            },
            "policies.AttachPolicyEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "PolicyAttachment": {
                                "additionalProperties": false,
                                "properties": {
                                    "PolicyAttachmentId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "PolicyAttachmentId"
                                ],
                                "type": "object"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId",
                            "PolicyAttachment"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "policies.DetachPolicyEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "PolicyAttachment": {
                                "additionalProperties": false,
                                "properties": {
                                    "PolicyAttachmentId": {
                                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                                    }
                                },
                                "required": [
                                    "PolicyAttachmentId"
                                ],
                                "type": "object"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId",
                            "PolicyAttachment"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "public.CheckAlias": {
                "additionalProperties": false,
                "properties": {
                    "Alias": {
                        "additionalProperties": false,
                        "properties": {
                            "Status": {
                                "enum": [
                                    "The company alias provided is available",
                                    "The company alias provided is already in use by another customer and cannot be used"
                                ],
                                "example": "The company alias provided is available",
                                "type": "string"
                            }
                        },
                        "required": [
                            "Status"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Alias"
                ],
                "type": "object"
            },
            "public.ReadConfig": {
                "additionalProperties": false,
                "properties": {
                    "API": {
                        "additionalProperties": false,
                        "properties": {
                            "endpoints": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "endpoint": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "region": {
                                            "$ref": "#\/components\/schemas\/AwsRegion"
                                        }
                                    },
                                    "required": [
                                        "name",
                                        "endpoint",
                                        "region"
                                    ],
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "endpoints"
                        ],
                        "type": "object"
                    },
                    "Analytics": {
                        "additionalProperties": false,
                        "properties": {
                            "disable": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "disable"
                        ],
                        "type": "object"
                    },
                    "ApiAuth": {
                        "additionalProperties": false,
                        "properties": {
                            "identityPoolId": {
                                "type": "string"
                            },
                            "mandatorySignIn": {
                                "type": "boolean"
                            },
                            "region": {
                                "$ref": "#\/components\/schemas\/AwsRegion"
                            },
                            "userPoolId": {
                                "type": "string"
                            },
                            "userPoolWebClientId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "identityPoolId",
                            "region",
                            "userPoolId",
                            "userPoolWebClientId",
                            "mandatorySignIn"
                        ],
                        "type": "object"
                    },
                    "AppSync": {
                        "additionalProperties": false,
                        "properties": {
                            "analytics": {
                                "additionalProperties": false,
                                "properties": {
                                    "endpoint": {
                                        "type": "string"
                                    },
                                    "region": {
                                        "$ref": "#\/components\/schemas\/AwsRegion"
                                    }
                                },
                                "required": [
                                    "region",
                                    "endpoint"
                                ],
                                "type": "object"
                            },
                            "core": {
                                "additionalProperties": false,
                                "properties": {
                                    "endpoint": {
                                        "type": "string"
                                    },
                                    "region": {
                                        "$ref": "#\/components\/schemas\/AwsRegion"
                                    }
                                },
                                "required": [
                                    "region",
                                    "endpoint"
                                ],
                                "type": "object"
                            },
                            "graphqlEndpoint": {
                                "type": "string"
                            },
                            "region": {
                                "$ref": "#\/components\/schemas\/AwsRegion"
                            }
                        },
                        "required": [
                            "core",
                            "analytics",
                            "region",
                            "graphqlEndpoint"
                        ],
                        "type": "object"
                    },
                    "Auth": {
                        "additionalProperties": false,
                        "properties": {
                            "identityPoolId": {
                                "type": "string"
                            },
                            "mandatorySignIn": {
                                "type": "boolean"
                            },
                            "region": {
                                "$ref": "#\/components\/schemas\/AwsRegion"
                            },
                            "userPoolId": {
                                "type": "string"
                            },
                            "userPoolWebClientId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "identityPoolId",
                            "region",
                            "mandatorySignIn"
                        ],
                        "type": "object"
                    },
                    "Features": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Juma": {
                        "additionalProperties": false,
                        "properties": {
                            "controlplaneRegion": {
                                "$ref": "#\/components\/schemas\/AwsRegion"
                            },
                            "domainName": {
                                "type": "string"
                            },
                            "fullDomainName": {
                                "type": "string"
                            },
                            "masterAccountId": {
                                "type": "integer"
                            },
                            "stage": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "fullDomainName",
                            "domainName",
                            "stage",
                            "controlplaneRegion",
                            "masterAccountId"
                        ],
                        "type": "object"
                    },
                    "JumaAuth": {
                        "additionalProperties": false,
                        "properties": {
                            "identityPoolId": {
                                "type": "string"
                            },
                            "mandatorySignIn": {
                                "type": "boolean"
                            },
                            "region": {
                                "$ref": "#\/components\/schemas\/AwsRegion"
                            },
                            "userPoolId": {
                                "type": "string"
                            },
                            "userPoolWebClientId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "identityPoolId",
                            "region",
                            "userPoolId",
                            "userPoolWebClientId",
                            "mandatorySignIn"
                        ],
                        "type": "object"
                    },
                    "Segment": {
                        "additionalProperties": false,
                        "properties": {
                            "key": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "key"
                        ],
                        "type": "object"
                    },
                    "Sentry": {
                        "additionalProperties": false,
                        "properties": {
                            "dsn": {
                                "type": "string"
                            },
                            "projectName": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "dsn",
                            "projectName"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Auth",
                    "JumaAuth",
                    "ApiAuth",
                    "Analytics",
                    "API",
                    "AppSync",
                    "Juma",
                    "Segment",
                    "Sentry",
                    "Features"
                ],
                "type": "object"
            },
            "ro-uuidv4": {
                "example": "e893d7e0-9306-11e9-bc42-526af7764f64",
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "readOnly": true,
                "type": "string"
            },
            "services.ConfigureGuardDuty": {
                "additionalProperties": false,
                "properties": {
                    "Configuration": {
                        "$ref": "#\/components\/schemas\/GuardDutyConfiguration"
                    },
                    "Enabled": {
                        "description": "Boolean to indicate whether to enable\/disable GuardDuty service.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Enabled",
                    "Configuration"
                ],
                "type": "object"
            },
            "services.ConfigureGuardDutyEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Message",
                            "Operation",
                            "OperationStatus",
                            "Severity"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    },
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "TraceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail",
                    "TraceId",
                    "TaskId"
                ],
                "type": "object"
            },
            "services.ConfigureSecurityHub": {
                "additionalProperties": false,
                "properties": {
                    "Configuration": {
                        "$ref": "#\/components\/schemas\/SecurityHubConfiguration"
                    },
                    "Enabled": {
                        "description": "Boolean to indicate whether to enable\/disable securityhub service.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "Enabled",
                    "Configuration"
                ],
                "type": "object"
            },
            "services.ConfigureSecurityHubEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Message",
                            "Operation",
                            "OperationStatus",
                            "Severity"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    },
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "TraceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail",
                    "TraceId",
                    "TaskId"
                ],
                "type": "object"
            },
            "services.ReadConfigurations": {
                "additionalProperties": false,
                "properties": {
                    "ServiceConfigurations": {
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#\/components\/schemas\/ServiceConfiguration"
                                }
                            ],
                            "properties": {
                                "Configuration": {
                                    "anyOf": [
                                        {
                                            "$ref": "#\/components\/schemas\/Null"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/SecurityHubConfiguration"
                                        },
                                        {
                                            "$ref": "#\/components\/schemas\/GuardDutyConfiguration"
                                        }
                                    ]
                                }
                            },
                            "required": [
                                "Configuration"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ServiceConfigurations"
                ],
                "type": "object"
            },
            "services.ReadGuardDutyConfiguration": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/ServiceConfiguration"
                    }
                ],
                "properties": {
                    "Configuration": {
                        "$ref": "#\/components\/schemas\/GuardDutyConfiguration"
                    }
                },
                "required": [
                    "Configuration"
                ],
                "type": "object"
            },
            "services.ReadSecurityHubConfiguration": {
                "allOf": [
                    {
                        "$ref": "#\/components\/schemas\/ServiceConfiguration"
                    }
                ],
                "properties": {
                    "Configuration": {
                        "$ref": "#\/components\/schemas\/SecurityHubConfiguration"
                    }
                },
                "required": [
                    "Configuration"
                ],
                "type": "object"
            },
            "tasks.ReadTask": {
                "additionalProperties": false,
                "properties": {
                    "Accounts": {
                        "items": {
                            "$ref": "#\/components\/schemas\/ro-uuidv4"
                        },
                        "type": "array"
                    },
                    "Logs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "Status": {
                        "$ref": "#\/components\/schemas\/OperationStatus"
                    },
                    "Users": {
                        "items": {
                            "$ref": "#\/components\/schemas\/ro-uuidv4"
                        },
                        "type": "array"
                    },
                    "Workloads": {
                        "items": {
                            "$ref": "#\/components\/schemas\/ro-uuidv4"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Status",
                    "Logs"
                ],
                "type": "object"
            },
            "tasks.ReadTasks": {
                "additionalProperties": false,
                "properties": {
                    "Paging": {
                        "$ref": "#\/components\/schemas\/Pagination"
                    },
                    "Tasks": {
                        "items": {
                            "additionalProperties": false,
                            "properties": {
                                "Id": {
                                    "$ref": "#\/components\/schemas\/ro-uuidv4"
                                },
                                "Resources": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "ResourceId": {
                                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                                            },
                                            "ResourceType": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "ResourceId",
                                            "ResourceType"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Status": {
                                    "$ref": "#\/components\/schemas\/OperationStatus"
                                },
                                "Type": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Id",
                                "Status",
                                "Type"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Tasks"
                ],
                "type": "object"
            },
            "teams.CreateApiToken": {
                "additionalProperties": false,
                "properties": {
                    "Description": {
                        "description": "Longer description of what this Token is used for.",
                        "example": "This token is for deployment pipelines in Gitlab to deploy to dev\/test environments",
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of API Token",
                        "example": "gitlab-cicd",
                        "maxLength": 64,
                        "minLength": 2,
                        "pattern": "^([0-9a-zA-Z_.-]+)$",
                        "type": "string"
                    },
                    "Role": {
                        "$ref": "#\/components\/schemas\/ApiRole"
                    },
                    "StoreToken": {
                        "default": true,
                        "description": "Store the Access and Secret key in SSM, in your security account.",
                        "example": true,
                        "type": "boolean"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/Tags"
                    },
                    "TokenKeyId": {
                        "default": "alias\/stax-api-tokens",
                        "description": "If you choose to store your keys in SSM, encrypt them with this KMS Key",
                        "example": "alias\/my-custom-key",
                        "maxLength": 128,
                        "minLength": 7,
                        "pattern": "^([a-zA-Z0-9:\/_-]+)$",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Role"
                ],
                "type": "object"
            },
            "teams.CreateApiTokenResponse": {
                "additionalProperties": false,
                "properties": {
                    "ApiTokens": {
                        "items": {
                            "additionalProperties": false,
                            "properties": {
                                "AccessKey": {
                                    "$ref": "#\/components\/schemas\/ro-uuidv4"
                                },
                                "CreatedBy": {
                                    "$ref": "#\/components\/schemas\/nullable-uuidv4"
                                },
                                "CreatedTS": {
                                    "description": "Created timestamp.",
                                    "example": "2018-10-11T01:05:45.000Z",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Longer description of what this Token is used for.",
                                    "example": "This token is for deployment pipelines in Gitlab to deploy to dev environments",
                                    "maxLength": 1024,
                                    "type": "string"
                                },
                                "ModifiedTS": {
                                    "description": "Created timestamp.",
                                    "example": "2018-10-11T01:05:45.000Z",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "Name of API Token",
                                    "example": "gitlab-cicd",
                                    "maxLength": 64,
                                    "minLength": 2,
                                    "pattern": "^([0-9a-zA-Z_.-]+)$",
                                    "type": "string"
                                },
                                "Role": {
                                    "$ref": "#\/components\/schemas\/ApiRole"
                                },
                                "SecretKey": {
                                    "maxLength": 32,
                                    "minLength": 32,
                                    "type": "string"
                                },
                                "Status": {
                                    "description": "Status of the User.",
                                    "enum": [
                                        "ACTIVE",
                                        "DELETED"
                                    ],
                                    "example": "ACTIVE",
                                    "type": "string"
                                },
                                "Tags": {
                                    "$ref": "#\/components\/schemas\/Tags"
                                }
                            },
                            "required": [
                                "AccessKey"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ApiTokens"
                ],
                "type": "object"
            },
            "teams.CreateGroup": {
                "properties": {
                    "Name": {
                        "description": "Name of User Group",
                        "example": "devops",
                        "maxLength": 64,
                        "minLength": 2,
                        "type": "string"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "teams.CreateGroupEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    },
                    "GroupId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    }
                },
                "required": [
                    "GroupId",
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "teams.CreateUser": {
                "properties": {
                    "Email": {
                        "description": "Email address of User.",
                        "example": "stax.user@example.com",
                        "format": "email",
                        "maxLength": 128,
                        "minLength": 6,
                        "type": "string"
                    },
                    "FirstName": {
                        "description": "Given Name of the User.",
                        "example": "John",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "LastName": {
                        "description": "Family Name of the User.",
                        "example": "Doe",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Role": {
                        "$ref": "#\/components\/schemas\/IdamUserRole"
                    }
                },
                "required": [
                    "Email",
                    "FirstName",
                    "LastName"
                ],
                "type": "object"
            },
            "teams.CreateUserEvent": {
                "additionalProperties": false,
                "properties": {
                    "CustomerId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    },
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "TraceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "TaskId",
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "teams.DeleteApiTokenResponse": {
                "additionalProperties": false,
                "properties": {
                    "ApiTokens": {
                        "items": {
                            "additionalProperties": false,
                            "properties": {
                                "AccessKey": {
                                    "$ref": "#\/components\/schemas\/ro-uuidv4"
                                },
                                "CreatedBy": {
                                    "$ref": "#\/components\/schemas\/nullable-uuidv4"
                                },
                                "CreatedTS": {
                                    "description": "Created timestamp.",
                                    "example": "2018-10-11T01:05:45.000Z",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Longer description of what this Token is used for.",
                                    "example": "This token is for deployment pipelines in Gitlab to deploy to dev\/test environments",
                                    "maxLength": 1024,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "ModifiedTS": {
                                    "description": "Modified timestamp.",
                                    "example": "2018-10-11T01:05:45.000Z",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "Name of API Token",
                                    "example": "gitlab-cicd",
                                    "maxLength": 64,
                                    "minLength": 2,
                                    "pattern": "^([0-9a-zA-Z_.-]+)$",
                                    "type": "string"
                                },
                                "Role": {
                                    "$ref": "#\/components\/schemas\/ApiRole"
                                },
                                "Status": {
                                    "description": "Status of the Token.",
                                    "enum": [
                                        "ACTIVE",
                                        "DELETED"
                                    ],
                                    "example": "ACTIVE",
                                    "type": "string"
                                },
                                "Tags": {
                                    "$ref": "#\/components\/schemas\/Tags"
                                }
                            },
                            "required": [
                                "AccessKey"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ApiTokens"
                ],
                "type": "object"
            },
            "teams.DeleteGroupEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ]
            },
            "teams.DeleteUserResponse": {
                "additionalProperties": false,
                "properties": {
                    "Users": {
                        "items": {
                            "$ref": "#\/components\/schemas\/User"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Users"
                ],
                "type": "object"
            },
            "teams.ReadApiTokens": {
                "additionalProperties": false,
                "properties": {
                    "ApiTokens": {
                        "items": {
                            "additionalProperties": false,
                            "properties": {
                                "AccessKey": {
                                    "$ref": "#\/components\/schemas\/ro-uuidv4"
                                },
                                "CreatedBy": {
                                    "$ref": "#\/components\/schemas\/nullable-uuidv4"
                                },
                                "CreatedTS": {
                                    "description": "Created timestamp.",
                                    "example": "2018-10-11T01:05:45.000Z",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Longer description of what this Token is used for.",
                                    "example": "This token is for deployment pipelines in Gitlab to deploy to dev\/test environments",
                                    "maxLength": 1024,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "ModifiedTS": {
                                    "description": "Modified timestamp.",
                                    "example": "2018-10-11T01:05:45.000Z",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "Name of API Token",
                                    "example": "gitlab-cicd",
                                    "maxLength": 64,
                                    "minLength": 2,
                                    "pattern": "^([0-9a-zA-Z_.-]+)$",
                                    "type": "string"
                                },
                                "Role": {
                                    "$ref": "#\/components\/schemas\/ApiRole"
                                },
                                "Status": {
                                    "description": "Status of the Token.",
                                    "enum": [
                                        "ACTIVE",
                                        "DELETED"
                                    ],
                                    "example": "ACTIVE",
                                    "type": "string"
                                },
                                "Tags": {
                                    "$ref": "#\/components\/schemas\/Tags"
                                }
                            },
                            "required": [
                                "AccessKey",
                                "Name",
                                "Description",
                                "Role",
                                "Status"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ApiTokens"
                ],
                "type": "object"
            },
            "teams.ReadGroupsResponse": {
                "additionalProperties": false,
                "properties": {
                    "Groups": {
                        "items": {
                            "$ref": "#\/components\/schemas\/Group"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Groups"
                ],
                "type": "object"
            },
            "teams.ReadIdamUsers": {
                "additionalProperties": false,
                "properties": {
                    "Users": {
                        "items": {
                            "$ref": "#\/components\/schemas\/IdamUser"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Users"
                ],
                "type": "object"
            },
            "teams.ReadUsers": {
                "additionalProperties": false,
                "properties": {
                    "Users": {
                        "items": {
                            "$ref": "#\/components\/schemas\/User"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Users"
                ],
                "type": "object"
            },
            "teams.UpdateApiToken": {
                "additionalProperties": false,
                "properties": {
                    "Description": {
                        "description": "Longer description of what this Token is used for.",
                        "example": "This token is for deployment pipelines in Gitlab to deploy to dev\/test environments",
                        "maxLength": 1024,
                        "minLength": 2,
                        "type": "string"
                    },
                    "Role": {
                        "$ref": "#\/components\/schemas\/ApiRole"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/Tags"
                    }
                },
                "type": "object"
            },
            "teams.UpdateApiTokenResponse": {
                "additionalProperties": false,
                "properties": {
                    "ApiTokens": {
                        "items": {
                            "additionalProperties": false,
                            "properties": {
                                "AccessKey": {
                                    "$ref": "#\/components\/schemas\/ro-uuidv4"
                                },
                                "CreatedBy": {
                                    "$ref": "#\/components\/schemas\/nullable-uuidv4"
                                },
                                "CreatedTS": {
                                    "description": "Created timestamp.",
                                    "example": "2018-10-11T01:05:45.000Z",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "Description": {
                                    "description": "Longer description of what this Token is used for.",
                                    "example": "This token is for deployment pipelines in Gitlab to deploy to dev\/test environments",
                                    "maxLength": 1024,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "ModifiedTS": {
                                    "description": "Modified timestamp.",
                                    "example": "2018-10-11T01:05:45.000Z",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "Name of API Token",
                                    "example": "gitlab-cicd",
                                    "maxLength": 64,
                                    "minLength": 2,
                                    "pattern": "^([0-9a-zA-Z_.-]+)$",
                                    "type": "string"
                                },
                                "Role": {
                                    "$ref": "#\/components\/schemas\/ApiRole"
                                },
                                "Status": {
                                    "description": "Status of the Token.",
                                    "enum": [
                                        "ACTIVE",
                                        "DELETED"
                                    ],
                                    "example": "ACTIVE",
                                    "type": "string"
                                },
                                "Tags": {
                                    "$ref": "#\/components\/schemas\/Tags"
                                }
                            },
                            "required": [
                                "AccessKey"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ApiTokens"
                ],
                "type": "object"
            },
            "teams.UpdateGroup": {
                "properties": {
                    "Name": {
                        "description": "Name of User Group",
                        "example": "devops",
                        "maxLength": 64,
                        "minLength": 2,
                        "type": "string"
                    }
                },
                "required": [
                    "Name"
                ],
                "type": "object"
            },
            "teams.UpdateGroupEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "teams.UpdateGroupMembers": {
                "properties": {
                    "AddMembers": {
                        "items": {
                            "$ref": "#\/components\/schemas\/UserGroupMemberMap"
                        },
                        "type": "array"
                    },
                    "RemoveMembers": {
                        "items": {
                            "$ref": "#\/components\/schemas\/UserGroupMemberMap"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "teams.UpdateGroupMembersEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TaskId": {
                                "$ref": "#\/components\/schemas\/ro-uuidv4"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus",
                            "TaskId"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ]
            },
            "teams.UpdateUser": {
                "properties": {
                    "Email": {
                        "description": "Email address of User.",
                        "example": "stax.user@example.com",
                        "format": "email",
                        "maxLength": 128,
                        "minLength": 6,
                        "type": "string"
                    },
                    "FirstName": {
                        "description": "Given Name of the User.",
                        "example": "John",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "LastName": {
                        "description": "Family Name of the User.",
                        "example": "Doe",
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string"
                    },
                    "Role": {
                        "$ref": "#\/components\/schemas\/IdamUserRole"
                    },
                    "Status": {
                        "description": "Status of User.",
                        "enum": [
                            "ACTIVE",
                            "DISABLED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "teams.UpdateUserEvent": {
                "additionalProperties": false,
                "properties": {
                    "CustomerId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    },
                    "TaskId": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "TraceId": {
                        "type": "string"
                    }
                },
                "required": [
                    "TaskId",
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "teams.UpdateUserInvite": {
                "type": "object"
            },
            "teams.UpdateUserInviteEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Message",
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "teams.UpdateUserPassword": {
                "type": "object"
            },
            "teams.UpdateUserPasswordEvent": {
                "additionalProperties": false,
                "properties": {
                    "Detail": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "type": "string"
                            },
                            "Operation": {
                                "$ref": "#\/components\/schemas\/Operation"
                            },
                            "OperationStatus": {
                                "$ref": "#\/components\/schemas\/OperationStatus"
                            },
                            "Severity": {
                                "type": "string"
                            },
                            "TraceId": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Message",
                            "Operation",
                            "OperationStatus"
                        ],
                        "type": "object"
                    },
                    "DetailType": {
                        "type": "string"
                    }
                },
                "required": [
                    "DetailType",
                    "Detail"
                ],
                "type": "object"
            },
            "uuidv4": {
                "example": "ec5eaa8f-da06-4935-b5ce-05bd957c8bdc",
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string"
            },
            "workloads.Catalogue": {
                "properties": {
                    "OrganisationId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Paging": {
                        "$ref": "#\/components\/schemas\/Pagination"
                    },
                    "WorkloadCatalogueItems": {
                        "items": {
                            "$ref": "#\/components\/schemas\/WorkloadCatalogue"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "OrganisationId",
                    "WorkloadCatalogueItems"
                ],
                "type": "object"
            },
            "workloads.CreateCatalogueItem": {
                "properties": {
                    "Description": {
                        "description": "Description of the Workload.",
                        "example": "A Workload to build a VPC in my org",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "ManifestBody": {
                        "description": "Raw text of a Manifest. Either this or ManifestURL must be provided.",
                        "example": "Resources:\n    - VPC:\n        Type: AWS::Cloudformation\n        TemplateURL: s3:\/\/{JumaArtifactBucket}\/workload-vpc\/vpc-2-tier-no-NAT.yml\n",
                        "type": "string"
                    },
                    "ManifestURL": {
                        "description": "HTTPS\/S3 URL of the manifest. Either this or ManifestBody must be provided.",
                        "example": "S3:\/\/{StaxArtifactBucket}\/workload-vpc\/your-template-ref.yml",
                        "type": "string"
                    },
                    "Name": {
                        "description": "Name of the Workload Catalogue Item to create.",
                        "example": "my-directory-service",
                        "maxLength": 64,
                        "minLength": 2,
                        "type": "string"
                    },
                    "Parameters": {
                        "$ref": "#\/components\/schemas\/Parameter"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/Tags"
                    },
                    "Version": {
                        "description": "Version of the Workload Catalogue Item to create.",
                        "example": "1.0.2",
                        "maxLength": 128,
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Version",
                    "Description"
                ],
                "type": "object"
            },
            "workloads.CreateCatalogueVersion": {
                "properties": {
                    "Description": {
                        "description": "Description of the Workload Item Version",
                        "example": "A Workload to build a VPC in my org",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "ManifestBody": {
                        "description": "Raw text of a Manifest. Either this or ManifestURL must be provided.",
                        "example": "Resources:\n    - VPC:\n        Type: AWS::Cloudformation\n        TemplateURL: s3:\/\/{JumaArtifactBucket}\/workload-vpc\/vpc-2-tier-no-NAT.yml\n",
                        "type": "string"
                    },
                    "ManifestURL": {
                        "description": "HTTPS\/S3 URL of the manifest. Either this or ManifestBody must be provided.",
                        "example": "S3:\/\/{StaxArtifactBucket}\/workload-vpc\/your-template-ref.yml",
                        "type": "string"
                    },
                    "Parameters": {
                        "$ref": "#\/components\/schemas\/Parameter"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/Tags"
                    },
                    "Version": {
                        "description": "Version of the Workload Catalogue Item to create.",
                        "example": "1.0.2",
                        "maxLength": 128,
                        "type": "string"
                    }
                },
                "required": [
                    "Version",
                    "Description"
                ]
            },
            "workloads.CreateWorkload": {
                "properties": {
                    "AccountId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CatalogueId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CatalogueVersionId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Id": {
                        "$ref": "#\/components\/schemas\/ro-uuidv4"
                    },
                    "Name": {
                        "description": "The Workload name.",
                        "example": "my-workload-is-cool",
                        "maxLength": 64,
                        "minLength": 2,
                        "pattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
                        "type": "string"
                    },
                    "Parameters": {
                        "items": {
                            "$ref": "#\/components\/schemas\/KeyValueRequestParameter"
                        },
                        "type": "array"
                    },
                    "Region": {
                        "$ref": "#\/components\/schemas\/AwsRegion"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/Tags"
                    }
                },
                "required": [
                    "Name",
                    "CatalogueId",
                    "AccountId",
                    "Region"
                ],
                "type": "object"
            },
            "workloads.ReadCatalogueItems": {
                "properties": {
                    "WorkloadCatalogues": {
                        "items": {
                            "$ref": "#\/components\/schemas\/workloads.Catalogue"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "WorkloadCatalogues"
                ],
                "type": "object"
            },
            "workloads.ReadCatalogueManifest": {
                "properties": {
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "url"
                ],
                "type": "object"
            },
            "workloads.ReadCatalogueTemplate": {
                "properties": {
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "url"
                ],
                "type": "object"
            },
            "workloads.ReadCatalogueVersion": {
                "properties": {
                    "Versions": {
                        "items": {
                            "$ref": "#\/components\/schemas\/WorkloadCatalogueVersion"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Versions"
                ],
                "type": "object"
            },
            "workloads.ReadWorkloads": {
                "additionalProperties": false,
                "properties": {
                    "account_ids": {
                        "description": "Comma delimited list of Stax Account IDs. Returns all Workloads deployed to these Account IDs.",
                        "type": "string"
                    },
                    "account_names": {
                        "description": "Comma delimited list of Stax Account Names. Returns all Workloads deployed to these Accounts Names.",
                        "type": "string"
                    },
                    "account_types": {
                        "description": "Comma delimited list of Stax Account Types. Returns all Workloads deployed to these Account Types.",
                        "type": "string"
                    },
                    "catalogue_ids": {
                        "description": "Comma delimited list of Stax Workload Catalogue IDs. Returns all Workloads deployed with these Catalogue IDs.",
                        "type": "string"
                    },
                    "catalogue_names": {
                        "description": "Comma delimited list of Stax Workload Catalogue Names. Returns all Workloads deployed with these Workload Catalogue Names.",
                        "type": "string"
                    },
                    "catalogue_version": {
                        "description": "Only return Workloads launched from this Stax Workload Catalogue Version (eg. 1.0.0). Requires catalogue_ids",
                        "type": "string"
                    },
                    "catalogue_version_id": {
                        "description": "Only return Workloads launched from this Stax Workload Catalogue Version ID.",
                        "type": "string"
                    },
                    "filter": {
                        "description": "Comma delimited list of Stax Workload statuses. Returns all Workloads with this status. \nFilter Options available: NEW, INITIALIZING, ACTIVE, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, UPDATE_IN_PROGRESS, UPDATE_FAILED, UPDATE_COMPLETE.",
                        "type": "string"
                    },
                    "id_filter": {
                        "description": "Comma delimited list of Stax Workload IDs. Returns all Workloads with these Workload IDs.",
                        "type": "string"
                    },
                    "include_tags": {
                        "description": "Do you want all the Tags?",
                        "type": "boolean"
                    },
                    "limit": {
                        "description": "Pagination - The number of items per page to return. Must be used with offset",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The Name of the Workloads to return.",
                        "type": "string"
                    },
                    "offset": {
                        "description": "Pagination - The page number to return. Must be used with limit",
                        "type": "integer"
                    },
                    "sort": {
                        "description": "The field to sort on.",
                        "enum": [
                            "Id",
                            "Name",
                            "AccountId",
                            "CatalogueId",
                            "CatalogueVersionId",
                            "Region",
                            "Status",
                            "UserTaskId",
                            "CreatedBy",
                            "CreatedTS",
                            "ModifiedTS",
                            "FactoryVersion"
                        ],
                        "type": "string"
                    },
                    "sort_order": {
                        "description": "The sort order - up or down.",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "workloads.ReadWorkloadsResponse": {
                "properties": {
                    "Paging": {
                        "$ref": "#\/components\/schemas\/Pagination"
                    },
                    "Workloads": {
                        "items": {
                            "$ref": "#\/components\/schemas\/Workload"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Workloads"
                ],
                "type": "object"
            },
            "workloads.UpdateAll": {
                "properties": {
                    "CatalogueId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CatalogueVersionId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    }
                },
                "required": [
                    "CatalogueId"
                ],
                "type": "object"
            },
            "workloads.UpdateWorkload": {
                "properties": {
                    "CatalogueId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "CatalogueVersionId": {
                        "$ref": "#\/components\/schemas\/uuidv4"
                    },
                    "Parameters": {
                        "items": {
                            "$ref": "#\/components\/schemas\/KeyValueRequestParameter"
                        },
                        "type": "array"
                    },
                    "Protection": {
                        "type": "boolean"
                    },
                    "Tags": {
                        "$ref": "#\/components\/schemas\/Tags"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sigv4": {
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    },
    "info": {
        "contact": {
            "url": "https:\/\/stax.io"
        },
        "description": "The Stax API is organised around REST, uses resource-oriented URLs, return responses are JSON and uses standard HTTP response codes, authentication and verbs.",
        "termsOfService": "https:\/\/www.stax.io\/legal\/terms\/",
        "title": "Stax Core API",
        "version": "20190206"
    },
    "openapi": "3.0.0",
    "paths": {
        "\/20190206\/account-types\/members": {
            "put": {
                "description": "Move Accounts between Account Types.<br\/>",
                "operationId": "accounts.UpdateAccountTypeMembers",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/accounts.UpdateAccountTypeMembers"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.UpdateAccountTypeMembersEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is forbidden."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Account Type members",
                "tags": [
                    "Accounts"
                ]
            }
        },
        "\/20190206\/account-types\/policies": {
            "put": {
                "description": "Add Policies to Account types or Remove Policies from Account Types. Duplicate policy additions or removals are ignored<br\/>",
                "operationId": "accounts.UpdateAccountTypePolicies",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/accounts.UpdateAccountTypePolicies"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.UpdateAccountTypePoliciesEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is forbidden."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the AccountType or Policy to attach cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Account Type Policies",
                "tags": [
                    "Accounts"
                ]
            }
        },
        "\/20190206\/accounts": {
            "get": {
                "description": "Return all AWS Accounts within your Stax Organisation.<br\/>Optionally, return the requested AWS Account.<br\/>",
                "operationId": "accounts.ReadAccounts",
                "parameters": [
                    {
                        "description": "The list of Account Names you want returned, comma delimited.",
                        "example": "security,logging",
                        "in": "query",
                        "name": "account_names",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The Account statuses to return, comma delimited.\n\nFilter options available: INITIALIZING, ACTIVE, SUSPENDED, MAINTENANCE, AWSERROR, CLOSED, OFFBOARDED, DISCOVERED, ERROR.\n",
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of Account IDs you want returned, comma delimited.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of AWS Account IDs you want returned, comma delimited.",
                        "in": "query",
                        "name": "aws_account_id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The Account Type IDs to return, comma delimited.\n",
                        "in": "query",
                        "name": "account_type_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination - The page number to return.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Pagination - The number of items per page to return.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The field to sort on.",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The sort order - up or down?",
                        "in": "query",
                        "name": "sort_order",
                        "required": false,
                        "schema": {
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Do you want all the Tags?",
                        "in": "query",
                        "name": "include_tags",
                        "required": false,
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.ReadAccounts"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Accounts",
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "description": "Create a new Stax-hardened AWS Account in your Stax Organisation.<br\/>",
                "operationId": "accounts.CreateAccount",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/accounts.CreateAccount"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.CreateAccountResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "409": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the account has another operation in progress."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create Account",
                "tags": [
                    "Accounts"
                ]
            }
        },
        "\/20190206\/accounts\/close": {
            "post": {
                "description": "Closes an AWS Account in your Stax Organisation.<br\/>",
                "operationId": "accounts.CloseAccount",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/accounts.CloseAccount"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.CloseAccountResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "409": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the account has another operation in progress."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Close Account",
                "tags": [
                    "Accounts"
                ]
            }
        },
        "\/20190206\/accounts\/discover": {
            "post": {
                "description": "Discover all AWS Accounts associated with the org into stax<br\/>",
                "operationId": "accounts.DiscoverAccounts",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.DiscoverAccountsResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful due to user input."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the account given has already been discovered."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the requested account cannot be discovered."
                    },
                    "409": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if another account discovery operation is already in progress."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Discover Accounts",
                "tags": [
                    "Accounts"
                ]
            }
        },
        "\/20190206\/accounts\/discover\/{aws_account_id}": {
            "post": {
                "description": "Attempt to (re)discover an AWS Account<br\/>",
                "operationId": "accounts.DiscoverAccount",
                "parameters": [
                    {
                        "description": "The AWS Account Id of the Account to discover.",
                        "in": "path",
                        "name": "aws_account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.DiscoverAccountsResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful due to user input."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the account given has already been discovered."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the requested account cannot be discovered."
                    },
                    "409": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the account has another operation in progress."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Discover Account",
                "tags": [
                    "Accounts"
                ]
            }
        },
        "\/20190206\/accounts\/onboard": {
            "post": {
                "description": "Onboard an existing, discovered AWS Account to your Stax Organisation.<br\/>",
                "operationId": "accounts.OnboardAccount",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/accounts.OnboardAccount"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.UpdateAccountResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "409": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the account has another operation in progress."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Onboard AWS Account",
                "tags": [
                    "Accounts"
                ]
            }
        },
        "\/20190206\/accounts\/types": {
            "get": {
                "description": "Return all the Account Types in your Stax Organisation.<br\/>Optionally, return the requested Account Type.<br\/>",
                "operationId": "accounts.ReadAccountTypes",
                "parameters": [
                    {
                        "description": "List of AccountType IDs you want returned, comma delimited.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.ReadAccountTypes"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Account Types",
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "description": "Create a new Account Type within your Stax Organisation.<br\/>Account Types can be used to set Policies on Accounts and control Group access.<br\/>",
                "operationId": "accounts.CreateAccountType",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/accounts.CreateAccountType"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.CreateAccountTypeResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is forbidden."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create Account Type",
                "tags": [
                    "Accounts"
                ]
            }
        },
        "\/20190206\/accounts\/types\/access": {
            "put": {
                "description": "Adjust the AWS role permissions between Account Types and Groups.<br\/>",
                "operationId": "accounts.UpdateAccountTypeAccess",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/accounts.UpdateAccountTypeAccess"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.UpdateAccountTypeAccessEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update AWS access",
                "tags": [
                    "Accounts"
                ]
            }
        },
        "\/20190206\/accounts\/types\/{account_type_id}": {
            "delete": {
                "description": "Delete an Account Type from your Stax Organisation.<br\/>An Account Type can only be deleted if there are no attached Accounts.<br\/>",
                "operationId": "accounts.DeleteAccountType",
                "parameters": [
                    {
                        "description": "The UUID of the Catalogue item.",
                        "in": "path",
                        "name": "account_type_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.DeleteAccountTypeResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is forbidden."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete Account Type",
                "tags": [
                    "Accounts"
                ]
            },
            "get": {
                "description": "Return all the Account Types in your Stax Organisation.<br\/>Optionally, return the requested Account Type.<br\/>",
                "operationId": "accounts.ReadAccountType",
                "parameters": [
                    {
                        "description": "The UUID of the Account Type.",
                        "in": "path",
                        "name": "account_type_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of AccountType IDs you want returned, comma delimited.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.ReadAccountTypes"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Account Type",
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "description": "Change the details of an Account Type, such as the name.<br\/>",
                "operationId": "accounts.UpdateAccountType",
                "parameters": [
                    {
                        "description": "The UUID of the Account Type to update.",
                        "in": "path",
                        "name": "account_type_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/accounts.UpdateAccountType"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.UpdateAccountTypeResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is forbidden."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Account Type",
                "tags": [
                    "Accounts"
                ]
            }
        },
        "\/20190206\/accounts\/{account_id}": {
            "get": {
                "description": "Return the requested AWS Account.<br\/>",
                "operationId": "accounts.ReadAccount",
                "parameters": [
                    {
                        "description": "The Stax UUID of the Account.",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The list of Account Names you want returned, comma delimited.",
                        "example": "security,logging",
                        "in": "query",
                        "name": "account_names",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The Account statuses to return, comma delimited.\n\nFilter options available: INITIALIZING, ACTIVE, SUSPENDED, MAINTENANCE, AWSERROR, CLOSED, OFFBOARDED, DISCOVERED, ERROR.\n",
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of Account IDs you want returned, comma delimited.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of AWS Account IDs you want returned, comma delimited.",
                        "in": "query",
                        "name": "aws_account_id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The Account Type IDs to return, comma delimited.\n",
                        "in": "query",
                        "name": "account_type_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination - The page number to return.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Pagination - The number of items per page to return.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The field to sort on.",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The sort order - up or down?",
                        "in": "query",
                        "name": "sort_order",
                        "required": false,
                        "schema": {
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Do you want all the Tags?",
                        "in": "query",
                        "name": "include_tags",
                        "required": false,
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.ReadAccounts"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Account",
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "description": "Change the details of an Account, such as the name, tags or Account Type<br\/>",
                "operationId": "accounts.UpdateAccount",
                "parameters": [
                    {
                        "description": "The UUID of the Account to update.",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/accounts.UpdateAccount"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/accounts.UpdateAccountResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is forbidden."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "409": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the account has another operation in progress."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Account",
                "tags": [
                    "Accounts"
                ]
            }
        },
        "\/20190206\/api-tokens": {
            "get": {
                "description": "Return a list of all API Tokens within your Stax Organisation.<br\/>",
                "operationId": "teams.ReadApiTokens",
                "parameters": [
                    {
                        "description": "List of Access Keys you want returned, comma delimited.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of API Token statuses you want returned, comma delimited.\n\nFilter Options available: ACTIVE, DELETED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.ReadApiTokens"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch API Tokens",
                "tags": [
                    "Team"
                ]
            },
            "post": {
                "description": "Create an API Token for API\/SDK access within your Stax Organisation.<br\/>",
                "operationId": "teams.CreateApiToken",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/teams.CreateApiToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.CreateApiTokenResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if there is insufficient permissions to grant the requested role."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create API Token",
                "tags": [
                    "Team"
                ]
            }
        },
        "\/20190206\/api-tokens\/{AccessKey}": {
            "delete": {
                "description": "Delete an API Token from your Stax Organisation.<br\/>",
                "operationId": "teams.DeleteApiToken",
                "parameters": [
                    {
                        "description": "The UUID of the User to delete.",
                        "in": "path",
                        "name": "AccessKey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.DeleteApiTokenResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unable to find the API Token to delete."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete API Token",
                "tags": [
                    "Team"
                ]
            },
            "get": {
                "description": "Return a list of all API Tokens within your Stax Organisation.<br\/>",
                "operationId": "teams.ReadApiToken",
                "parameters": [
                    {
                        "description": "The UUID of the Token to return.",
                        "in": "path",
                        "name": "AccessKey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of Access Keys you want returned, comma delimited.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of API Token statuses you want returned, comma delimited.\n\nFilter Options available: ACTIVE, DELETED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.ReadApiTokens"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch API Token",
                "tags": [
                    "Team"
                ]
            },
            "put": {
                "description": "Update a Token for API\/SDK access within your Stax Organisation.<br\/>",
                "operationId": "teams.UpdateApiToken",
                "parameters": [
                    {
                        "description": "The UUID of the API Token to update.",
                        "in": "path",
                        "name": "AccessKey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/teams.UpdateApiToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.UpdateApiTokenResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if there is insufficient permissions to grant the requested role."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unable to find the API Token to update."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update API Token",
                "tags": [
                    "Team"
                ]
            }
        },
        "\/20190206\/groups": {
            "get": {
                "description": "Return all Groups within your Stax Organisation.<br\/>Optionally, return the requested Group.<br\/>",
                "operationId": "teams.ReadGroups",
                "parameters": [
                    {
                        "description": "List of Group IDs you want returned, comma delimited.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.ReadGroupsResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Groups",
                "tags": [
                    "Groups"
                ]
            },
            "post": {
                "description": "Create a new Group within your Stax Organisation.<br\/>",
                "operationId": "teams.CreateGroup",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/teams.CreateGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.CreateGroupEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "409": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StaxEvent"
                                }
                            }
                        },
                        "description": "A group with the same name already exists."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create Group",
                "tags": [
                    "Groups"
                ]
            }
        },
        "\/20190206\/groups\/members": {
            "put": {
                "description": "Add members to a Group or Remove members from a Group<br\/>",
                "operationId": "teams.UpdateGroupMembers",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/teams.UpdateGroupMembers"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.UpdateGroupMembersEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StaxEvent"
                                }
                            }
                        },
                        "description": "Could not locate user or group."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Group Members",
                "tags": [
                    "Groups"
                ]
            }
        },
        "\/20190206\/groups\/{group_id}": {
            "delete": {
                "description": "Delete a Group from your Stax Organisation.<br\/>A Group can only be deleted if there are no team members in the Group.<br\/>",
                "operationId": "teams.DeleteGroup",
                "parameters": [
                    {
                        "description": "The UUID of Group to delete.",
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.DeleteGroupEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StaxEvent"
                                }
                            }
                        },
                        "description": "The Group still contains members."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StaxEvent"
                                }
                            }
                        },
                        "description": "The Group could not be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete Group",
                "tags": [
                    "Groups"
                ]
            },
            "get": {
                "description": "Return the requested Group from your Stax Organisation.<br\/>",
                "operationId": "teams.ReadGroup",
                "parameters": [
                    {
                        "description": "The UUID of the Group to return.",
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.ReadGroupsResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "Group not found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Group",
                "tags": [
                    "Groups"
                ]
            },
            "put": {
                "description": "Change the details of a Group, such as the name.<br\/>",
                "operationId": "teams.UpdateGroup",
                "parameters": [
                    {
                        "description": "The UUID of the Group to update.",
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/teams.UpdateGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.UpdateGroupEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StaxEvent"
                                }
                            }
                        },
                        "description": "The Group could not be found."
                    },
                    "409": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StaxEvent"
                                }
                            }
                        },
                        "description": "A group with the same name already exists."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Group",
                "tags": [
                    "Groups"
                ]
            }
        },
        "\/20190206\/idam\/user": {
            "get": {
                "deprecated": true,
                "description": "(DEPRECATED) Return a list of all IDAM Users in your Stax Organisation.<br\/>",
                "operationId": "teams.ReadIdamUsers",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.ReadIdamUsers"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the user's organisation doesn't exist."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch IDAM Users",
                "tags": [
                    "IDAM",
                    "Deprecated"
                ]
            },
            "post": {
                "description": "Create a new Stax user within your Stax Organisation.<br\/>Stax Users have permission to access the AWS Console\/CLI for AWS Accounts that exist within a Stax Organisation.<br\/>",
                "operationId": "teams.CreateUser",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/teams.CreateUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.CreateUserEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create Stax User",
                "tags": [
                    "Team"
                ]
            }
        },
        "\/20190206\/idam\/user\/resend-invite\/{user_id}": {
            "put": {
                "description": "Re-send the verification email for a Stax User.<br\/>",
                "operationId": "teams.UpdateUserInvite",
                "parameters": [
                    {
                        "description": "The UUID of the IDAM User to re-invite.",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.UpdateUserInviteEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the user has already verified their email address."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the user does not exist in IDAM."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Re-invite Stax user",
                "tags": [
                    "Team"
                ]
            }
        },
        "\/20190206\/idam\/user\/reset-password\/{user_id}": {
            "put": {
                "description": "Send a Stax User a password reset email.<br\/>",
                "operationId": "teams.UpdateUserPassword",
                "parameters": [
                    {
                        "description": "The UUID of the IDAM User to have password reset.",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.UpdateUserPasswordEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the user does not exist in IDAM or is deleted."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Reset Stax User's password",
                "tags": [
                    "Team"
                ]
            }
        },
        "\/20190206\/idam\/user\/{org_id}": {
            "get": {
                "deprecated": true,
                "description": "(DEPRECATED) Return a list of all IDAM Users in your Stax Organisation.<br\/>",
                "operationId": "teams.ReadIdamUser",
                "parameters": [
                    {
                        "description": "The Organisation ID in which the IDAM is deployed to.  If no org_id is supplied, the Customer's default Organisation will be used.",
                        "in": "path",
                        "name": "org_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.ReadIdamUsers"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the user's organisation doesn't exist."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch IDAM User",
                "tags": [
                    "IDAM",
                    "Deprecated"
                ]
            }
        },
        "\/20190206\/idam\/user\/{user_id}": {
            "put": {
                "description": "Update a Stax User's details, such as the name, role or email.<br\/>A DISABLED user can only be updated to ACTIVE, updating other attributes will result in a 400<br\/>",
                "operationId": "teams.UpdateUser",
                "parameters": [
                    {
                        "description": "The UUID of the IDAM User to update.",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/teams.UpdateUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.UpdateUserEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "Only status can be updated on a disabled user."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the user does not exist in IDAM."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Stax User",
                "tags": [
                    "Team"
                ]
            }
        },
        "\/20190206\/networking\/dnsresolvers": {
            "get": {
                "description": "<br\/>Returns the DNS Resolver of the Stax Networking Hub.<br\/>Providing the UUID of a Stax DNS Resolver will return a specific Stax DNS Resolver's details.<br\/>",
                "operationId": "networking.ReadDnsResolvers",
                "parameters": [
                    {
                        "description": "The Stax DNS Resolver statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDnsResolvers"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DNS Resolvers",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dnsresolvers\/{dns_resolver_id}": {
            "delete": {
                "description": "<br\/>Deletes a Stax DNS Resolver within a Stax Networking Hub.<br\/>",
                "operationId": "networking.DeleteDnsResolver",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DNS Resolver to delete.",
                        "in": "path",
                        "name": "dns_resolver_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.DeleteDnsResolverEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking Hub doesn't match supplied credentials."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax DNS Resolver to delete cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete DNS Resolver",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Returns the DNS Resolver of the Stax Networking Hub.<br\/>Providing the UUID of a Stax DNS Resolver will return a specific Stax DNS Resolver's details.<br\/>",
                "operationId": "networking.ReadDnsResolver",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DNS Resolver to fetch.",
                        "in": "path",
                        "name": "dns_resolver_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax DNS Resolver statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDnsResolvers"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DNS Resolver",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>Updates the attributes for a given Stax DNS Resolver. Only supplied values are updated.<br\/>",
                "operationId": "networking.UpdateDnsResolver",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DNS Resolver to update.",
                        "in": "path",
                        "name": "dns_resolver_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateDnsResolver"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdateDnsResolverEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking Hub doesn't match supplied credentials."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax DNS Resolver to update cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update DNS Resolver",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dnsresolvers\/{dns_resolver_id}\/dnsrules": {
            "get": {
                "description": "<br\/>Returns the Stax DNS Rules of the Stax DNS Resolver.<br\/>Providing the UUID of a Stax DNS Rule will return a specific Stax DNS Rule's details.<br\/>",
                "operationId": "networking.ReadResolverDnsRules",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DNS Resolver.",
                        "in": "path",
                        "name": "dns_resolver_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax DNS Rule statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDnsRules"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Resolver DNS Rules",
                "tags": [
                    "Networking"
                ]
            },
            "post": {
                "description": "<br\/>Creates a Stax DNS Rule within a Stax DNS Resolver.<br\/>",
                "operationId": "networking.CreateDnsRule",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DNS Resolver to create the Stax DNS Rule within.",
                        "in": "path",
                        "name": "dns_resolver_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateDnsRule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.CreateDnsRuleEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking Hub doesn't match supplied credentials."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax DNS Resolver to create the Stax DNS Rule within cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create DNS Rule",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dnsrules": {
            "get": {
                "description": "<br\/>Returns the Stax DNS Rules of the Stax DNS Resolver.<br\/>Providing the UUID of a Stax DNS Rule will return a specific Stax DNS Rule's details.<br\/>",
                "operationId": "networking.ReadDnsRules",
                "parameters": [
                    {
                        "description": "The Stax DNS Rule statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDnsRules"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DNS Rules",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dnsrules\/{dns_rule_id}": {
            "delete": {
                "description": "<br\/>Deletes a Stax DNS Rule within a Stax DNS Resolver<br\/>",
                "operationId": "networking.DeleteDnsRule",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DNS Rule.",
                        "in": "path",
                        "name": "dns_rule_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.DeleteDnsRuleEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking Hub doesn't match supplied credentials."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax DNS Rule to delete cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete DNS Rule",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Returns the Stax DNS Rules of the Stax DNS Resolver.<br\/>Providing the UUID of a Stax DNS Rule will return a specific Stax DNS Rule's details.<br\/>",
                "operationId": "networking.ReadDnsRule",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DNS Rule to fetch.",
                        "in": "path",
                        "name": "dns_rule_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax DNS Rule statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDnsRules"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DNS Rule",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>Updates the attributes for a given Stax DNS Rule. Only supplied values are updated.<br\/>",
                "operationId": "networking.UpdateDnsRule",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DNS Rule to update.",
                        "in": "path",
                        "name": "dns_rule_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateDnsRule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdateDnsRuleEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking Hub doesn't match supplied credentials."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax DNS Rule to update cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update DNS Rule",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dxassociations": {
            "get": {
                "description": "<br\/>Returns all the Stax DX Asssociations.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax DX Associations for the Stax Networking Hub.<br\/>Providing the UUID of a Stax DX Association will return a specific Stax DX Association's details.<br\/>",
                "operationId": "networking.ReadDxAssociations",
                "parameters": [
                    {
                        "description": "The Stax DX Association statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxAssociations"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DX Associations",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dxassociations\/{dx_association_id}": {
            "delete": {
                "description": "<br\/>Deletes a Stax DX Association.<br\/>",
                "operationId": "networking.DeleteDxAssociation",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Association to delete.",
                        "in": "path",
                        "name": "dx_association_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.DeleteDxAssociationEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax DX Association to delete cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete DX Association",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Returns all the Stax DX Asssociations.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax DX Associations for the Stax Networking Hub.<br\/>Providing the UUID of a Stax DX Association will return a specific Stax DX Association's details.<br\/>",
                "operationId": "networking.ReadDxAssociation",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Association to fetch.",
                        "in": "path",
                        "name": "dx_association_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax DX Association statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": true,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxAssociations"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DX Association",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>Updates the attributes for a given Stax DX Association. Only supplied values are updated.<br\/>",
                "operationId": "networking.UpdateDxAssociation",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Association to update.",
                        "in": "path",
                        "name": "dx_association_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateDxAssociation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdateDxAssociationEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax DX Association to update cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update DX Association",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dxgateways": {
            "get": {
                "description": "<br\/>Returns all the Stax DX Gateways.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax DX Gateways associated to the Stax Networking Hub.<br\/>Providing the UUID of a Stax DX Gateway will return a specific Stax DX Gateway's details.<br\/>",
                "operationId": "networking.ReadDxGateways",
                "parameters": [
                    {
                        "description": "The Stax DX Gateway statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxGateways"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DX Gateways",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dxgateways\/{dx_gateway_id}": {
            "delete": {
                "description": "<br\/>Deletes a Stax DX Gateway.<br\/>",
                "operationId": "networking.DeleteDxGateway",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Gateway to delete.",
                        "in": "path",
                        "name": "dx_gateway_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.DeleteDxGatewayEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax DX Vif to delete cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete DX Gateway",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Returns all the Stax DX Gateways.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax DX Gateways associated to the Stax Networking Hub.<br\/>Providing the UUID of a Stax DX Gateway will return a specific Stax DX Gateway's details.<br\/>",
                "operationId": "networking.ReadDxGateway",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Gateway to fetch.",
                        "in": "path",
                        "name": "dx_gateway_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax DX Gateway statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxGateways"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DX Gateway",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dxgateways\/{dx_gateway_id}\/dxassociations": {
            "get": {
                "description": "<br\/>Returns all the Stax DX Asssociations.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax DX Associations for the Stax Networking Hub.<br\/>Providing the UUID of a Stax DX Association will return a specific Stax DX Association's details.<br\/>",
                "operationId": "networking.ReadGatewayDxAssociations",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Gateway to fetch associations for.",
                        "in": "path",
                        "name": "dx_gateway_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax DX Association statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxAssociations"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Gateway DX Associations",
                "tags": [
                    "Networking"
                ]
            },
            "post": {
                "description": "<br\/>Creates a Stax DX Association between a Stax Networking Hub or Stax VPC and a Stax DX Gateway.<br\/><br\/>Providing a NetworkingHubId will attempt to associate the Direct Connect Gateway that contains Transit<br\/>VIFs to the Networking Hubs Transit Gateway.<br\/><br\/>Providing a VPCId will attempt attempt to associate the Direct Connect Gateway that contains Private VIFs<br\/>to the VPCs Virtual Private Gateway.<br\/>",
                "operationId": "networking.CreateDxAssociation",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Gateway to association with a Stax Networking Hub.",
                        "in": "path",
                        "name": "dx_gateway_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateDxAssociation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.CreateDxAssociationEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Resources to create the DX Association for cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create DX Association",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dxgateways\/{dx_gateway_id}\/dxvifs": {
            "get": {
                "description": "<br\/>Returns all the Stax DX Vifs.<br\/>Providing the UUID of a Stax DX Gateway will return the Stax DX Vifs attached to the Stax DX Gateway.<br\/>Providing the UUID of a Stax DX Vif will return a specific Stax DX Vif's details.<br\/>",
                "operationId": "networking.ReadGatewayDxVifs",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Vif.",
                        "in": "path",
                        "name": "dx_gateway_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax DX Gateway statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxVifs"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Gatway DX Vifs",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dxresources": {
            "post": {
                "description": "<br\/>Creates a Stax DX Resource, a DX Gateway and\/or DX Vif.<br\/>",
                "operationId": "networking.CreateDxResource",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateDxResource"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.CreateDxResourceEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Resource to deploy the DX Resources into cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create DX Resources",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dxvifs": {
            "get": {
                "description": "<br\/>Returns all the Stax DX Vifs.<br\/>Providing the UUID of a Stax DX Gateway will return the Stax DX Vifs attached to the Stax DX Gateway.<br\/>Providing the UUID of a Stax DX Vif will return a specific Stax DX Vif's details.<br\/>",
                "operationId": "networking.ReadDxVifs",
                "parameters": [
                    {
                        "description": "The Stax DX Gateway statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxVifs"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DX Vifs",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dxvifs\/{dx_vif_id}": {
            "delete": {
                "description": "<br\/>Deletes a Stax DX Vif.<br\/>",
                "operationId": "networking.DeleteDxVif",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Vif to delete.",
                        "in": "path",
                        "name": "dx_vif_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.DeleteDxVifEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax DX Vif to delete cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete DX Vif",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Returns all the Stax DX Vifs.<br\/>Providing the UUID of a Stax DX Gateway will return the Stax DX Vifs attached to the Stax DX Gateway.<br\/>Providing the UUID of a Stax DX Vif will return a specific Stax DX Vif's details.<br\/>",
                "operationId": "networking.ReadDxVif",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Vif to fetch.",
                        "in": "path",
                        "name": "dx_vif_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax DX Gateway statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxVifs"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DX Vif",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>Updates the attributes for a given Stax DX Vif. Only supplied values are updated.<br\/>",
                "operationId": "networking.UpdateDxVif",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Vif to update.",
                        "in": "path",
                        "name": "dx_vif_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateDxVif"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdateDxVifEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax DX Vif to update cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update DX VIf",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/dxvifs\/{dx_vif_id}\/status": {
            "get": {
                "description": "<br\/>Returns the connectivity status of the BPG Peers for a specific DX VIF<br\/>",
                "operationId": "networking.ReadDxVifStatus",
                "parameters": [
                    {
                        "description": "The UUID of the Stax DX Gateway where the Stax DX Vif is attached.",
                        "in": "path",
                        "name": "dx_vif_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxVifStatus"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax DX VIF cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DX VIF Status",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/exclusions": {
            "get": {
                "description": "<br\/>Returns a list of CIDR Exclusions.<br\/>Can use the UUID of a CIDR Exclusions to return a specific CIDR Exclusions details.<br\/>",
                "operationId": "networking.ReadCidrExclusions",
                "parameters": [
                    {
                        "description": "The Hub statuses to return, comma delimited.\n\nFilter options available: ACTIVE, DELETED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadCidrExclusions"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch CIDR Exclusions",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/exclusions\/{exclusion_id}": {
            "delete": {
                "description": "<br\/>Deletes a CIDR Exclusion within a Stax Networking Hub.<br\/>",
                "operationId": "networking.DeleteCidrExclusion",
                "parameters": [
                    {
                        "description": "The UUID of the Exclusion to Delete.",
                        "in": "path",
                        "name": "exclusion_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadCidrExclusions"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The CIDR Exclusion to delete cannot be found or is already deleted."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete CIDR Exclusion",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Returns a list of CIDR Exclusions.<br\/>Can use the UUID of a CIDR Exclusions to return a specific CIDR Exclusions details.<br\/>",
                "operationId": "networking.ReadCidrExclusion",
                "parameters": [
                    {
                        "description": "The UUID of the Exclusion to read.",
                        "in": "path",
                        "name": "exclusion_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Hub statuses to return, comma delimited.\n\nFilter options available: ACTIVE, DELETED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadCidrExclusions"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch CIDR Exclusion",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>Updates a CIDR Exclusion within a Stax Networking Hub<br\/>",
                "operationId": "networking.UpdateCidrExclusion",
                "parameters": [
                    {
                        "description": "The UUID of the Exclusion to update.",
                        "in": "path",
                        "name": "exclusion_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateCidrExclusion"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdateCidrExclusion"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The CIDR Exclusion to update cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update CIDR Exclusion",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubpeerings": {
            "get": {
                "description": "<br\/>Returns all the Stax Hub Peerings.<br\/>",
                "operationId": "networking.ReadHubPeerings",
                "parameters": [
                    {
                        "description": "The Stax Hub Peering statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, PENDING_ACCEPT, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, UPDATE_IN_PROGRESS\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,PENDING_ACCEPT,DELETE_IN_PROGRESS,DELETED,DELETE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadHubPeerings"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Hub Peerings",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubpeerings\/{hub_peering_id}": {
            "delete": {
                "description": "<br\/>Deletes a Stax Hub Peering.<br\/>",
                "operationId": "networking.DeleteHubPeering",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Hub Peering to delete.",
                        "in": "path",
                        "name": "hub_peering_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.DeleteHubPeeringEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Hub Peering to delete cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete Hub Peering",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Providing the UUID of a Stax Hub Peering will return a specific Stax Hub Peering.<br\/>",
                "operationId": "networking.ReadHubPeering",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Hub Peering to Read.",
                        "in": "path",
                        "name": "hub_peering_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax Hub Peering statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, PENDING_ACCEPT, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, UPDATE_IN_PROGRESS\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,PENDING_ACCEPT,DELETE_IN_PROGRESS,DELETED,DELETE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadHubPeerings"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Hub Peering",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>Updates the attributes for a given Stax Hub Peering. Only supplied values are updated.<br\/>",
                "operationId": "networking.UpdateHubPeering",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Hub Peering to update.",
                        "in": "path",
                        "name": "hub_peering_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateHubPeering"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdateHubPeeringEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Hub Peering to update cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Hub Peering",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs": {
            "get": {
                "description": "<br\/>Returns a list of networking hubs in your Stax Organisation.<br\/>Can use the UUID of a Hub to return a specific hub details.<br\/>",
                "operationId": "networking.ReadHubs",
                "parameters": [
                    {
                        "description": "The Hub statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, UPDATE_IN_PROGRESS, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadHubs"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking Hub cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Networking Hubs",
                "tags": [
                    "Networking"
                ]
            },
            "post": {
                "description": "<br\/>Creates Stax Networking Hub within your Stax Organisation.<br\/>",
                "operationId": "networking.CreateHub",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateHub"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.CreateHubEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is forbidden."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The account to deploy a hub does not exist."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create Networking Hub",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}": {
            "delete": {
                "description": "<br\/>Deletes a hub from the Stax Organisation<br\/>",
                "operationId": "networking.DeleteHub",
                "parameters": [
                    {
                        "description": "The UUID of the Hub to delete.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.DeleteHubEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The hub to be deleted doesn't exist or is already deleted."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete Networking Hub",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Returns a list of networking hubs in your Stax Organisation.<br\/>Can use the UUID of a Hub to return a specific hub details.<br\/>",
                "operationId": "networking.ReadHub",
                "parameters": [
                    {
                        "description": "The UUID of the Hub.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Hub statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, UPDATE_IN_PROGRESS, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadHubs"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking Hub cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Networking Hub",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>Updates a various attributes for a given hub. Only supplied values are updated.<br\/>",
                "operationId": "networking.UpdateHub",
                "parameters": [
                    {
                        "description": "The UUID of the Hub to update.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateHub"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdateHubEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "An active hub to be updated does not exist"
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Networking Hub",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}\/dnsresolvers": {
            "get": {
                "description": "<br\/>Returns the DNS Resolver of the Stax Networking Hub.<br\/>Providing the UUID of a Stax DNS Resolver will return a specific Stax DNS Resolver's details.<br\/>",
                "operationId": "networking.ReadHubDnsResolvers",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Networking Hub where the Stax DNS Resolver is deployed.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax DNS Resolver statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDnsResolvers"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Hub DNS Resolvers",
                "tags": [
                    "Networking"
                ]
            },
            "post": {
                "description": "<br\/>Creates a Stax DNS Resolver within a Stax Networking Hub.<br\/>",
                "operationId": "networking.CreateDnsResolver",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Networking Hub to deploy the Stax DNS Resolver.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateDnsResolver"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.CreateDnsResolverEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking Hub to deploy the Stax DNS Resolver cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create DNS Resolver",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}\/dxassociations": {
            "get": {
                "description": "<br\/>Returns all the Stax DX Asssociations.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax DX Associations for the Stax Networking Hub.<br\/>Providing the UUID of a Stax DX Association will return a specific Stax DX Association's details.<br\/>",
                "operationId": "networking.ReadHubDxAssociations",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Networking Hub to fetch associations for.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax DX Association statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxAssociations"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Hub DX Associations",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}\/dxgateways": {
            "get": {
                "description": "<br\/>Returns all the Stax DX Gateways.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax DX Gateways associated to the Stax Networking Hub.<br\/>Providing the UUID of a Stax DX Gateway will return a specific Stax DX Gateway's details.<br\/>",
                "operationId": "networking.ReadHubDxGateways",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Networking Hub where the Stax DX Gateway is deployed.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax DX Gateway statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxGateways"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Hub DX Gateways",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}\/exclusions": {
            "get": {
                "description": "<br\/>Returns a list of CIDR Exclusions.<br\/>Can use the UUID of a CIDR Exclusions to return a specific CIDR Exclusions details.<br\/>",
                "operationId": "networking.ReadHubCidrExclusions",
                "parameters": [
                    {
                        "description": "The UUID of the Hub to list Exclusions in.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Hub statuses to return, comma delimited.\n\nFilter options available: ACTIVE, DELETED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadCidrExclusions"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Hub IDR Exclusions",
                "tags": [
                    "Networking"
                ]
            },
            "post": {
                "description": "<br\/>Creates a CIDR Exclusion within a Stax Networking Hub<br\/>",
                "operationId": "networking.CreateCidrExclusion",
                "parameters": [
                    {
                        "description": "The UUID of the Hub where the CIDR Exclusion is created in.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateCidrExclusion"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadCidrExclusions"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The hub to create the CIDR Exclusion is not found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create CIDR Exclusion",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}\/prefixlists": {
            "get": {
                "description": "<br\/>Providing the UUID of a Stax Networking Hub will return the Stax Prefix Lists for the Stax Networking Hub.<br\/>",
                "operationId": "networking.ReadHubPrefixLists",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Networking Hub to retrieve Prefix Lists for.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax Prefix List statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, UPDATE_IN_PROGRESS\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,DELETE_IN_PROGRESS,DELETED,DELETE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadPrefixLists"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Networking Hub Prefix Lists",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}\/prefixlists\/hubs": {
            "post": {
                "description": "<br\/>Creates a Stax Hub Prefix List.<br\/>",
                "operationId": "networking.CreateHubPrefixList",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Networking Hub to create the Hub Prefix List for.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateHubPrefixList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.CreatePrefixListEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking Hub to create the Prefix List for cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create a Hub Prefix List",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}\/prefixlists\/vpcs": {
            "post": {
                "description": "<br\/>Creates a Stax VPC Prefix List.<br\/>",
                "operationId": "networking.CreateVpcPrefixList",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Networking Hub to create the Vpc Prefix List for.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateVpcPrefixList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.CreatePrefixListEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking Hub to create the Prefix List for cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create a VPC Prefix List",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}\/ranges": {
            "get": {
                "description": "<br\/>Returns a list of CIDR Ranges.<br\/>Can use the UUID of a CIDR Range to return a specific CIDR Range details.<br\/>",
                "operationId": "networking.ReadHubCidrRanges",
                "parameters": [
                    {
                        "description": "The UUID of the Hub you want the Ranges for.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Hub statuses to return, comma delimited.\n\nFilter options available: ACTIVE, DELETED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE",
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of range ids to fetch, comma delimited.\n",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadCidrRanges"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Hub CIDR Ranges",
                "tags": [
                    "Networking"
                ]
            },
            "post": {
                "description": "<br\/>Creates a CIDR Range within a Stax Networking Hub<br\/>",
                "operationId": "networking.CreateCidrRange",
                "parameters": [
                    {
                        "description": "The UUID of the Hub where the CIDR Range is created in.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateCidrRange"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadCidrRanges"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The hub to create the CIDR Range is not found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create CIDR Range",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}\/vpcs": {
            "get": {
                "description": "<br\/>Returns a list of VPCs.<br\/>Can use the UUID of a VPC to return a specific VPC details.<br\/>",
                "operationId": "networking.ReadHubVpcs",
                "parameters": [
                    {
                        "description": "The UUID of the Hub where the VPC is.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The VPC statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VPC type to return, comma delimited.\n\nFilter options available: FLAT, ISOLATED, TRANSIT, SHAREDSERVICES\n",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "default": "FLAT,ISOLATED,TRANSIT,SHAREDSERVICES",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadVpcs"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Hub VPCs",
                "tags": [
                    "Networking"
                ]
            },
            "post": {
                "description": "<br\/>Creates a VPC within a Stax Networking Hub<br\/>",
                "operationId": "networking.CreateVpc",
                "parameters": [
                    {
                        "description": "The UUID of the Hub where the VPC is.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateVpc"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.CreateVpcEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is forbidden."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The hub to create the VPC is not found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create VPC",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}\/vpnconnections": {
            "get": {
                "description": "<br\/>Returns all the Stax VPN Connections.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax VPN Connections associated to the Stax Networking Hub.<br\/>Providing the UUID of a Stax VPN Customer Gateway will return the Stax VPN Connections associated to the Stax VPN Customer Gateway.<br\/>Providing the UUID of a Stax VPN Connections will return a specific Stax VPN Connections details.<br\/>",
                "operationId": "networking.ReadHubVpnConnections",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Networking Hub where the Stax VPN Connection is deployed.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax VPN Connections statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadVpnConnections"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Hub VPN Connections",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{hub_id}\/vpncustomergateways": {
            "get": {
                "description": "<br\/>Returns all the Stax VPN Customer Gateways.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax VPN Customer Gateways associated to the Stax Networking Hub.<br\/>Providing the UUID of a Stax VPN Customer Gateway will return a specific Stax VPN Customer Gateways' details.<br\/>",
                "operationId": "networking.ReadHubVpnCustomerGateways",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Networking Hub where the Stax VPN Customer Gateways is deployed.",
                        "in": "path",
                        "name": "hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax VPN Customer Gateways statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadVpnCustomerGateways"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Hub VPN Customer Gateways",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/hubs\/{networking_hub_id}\/hubpeerings": {
            "get": {
                "description": "<br\/>Providing the UUID of a Stax Networking Hub will return the Stax Hub Peerings for the Stax Networking Hub.<br\/>",
                "operationId": "networking.ReadHubHubPeerings",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Networking Hub to retrieve Hub Peerings for.",
                        "in": "path",
                        "name": "networking_hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax Hub Peering statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, PENDING_ACCEPT, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, UPDATE_IN_PROGRESS\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,PENDING_ACCEPT,DELETE_IN_PROGRESS,DELETED,DELETE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadHubPeerings"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Networking Hub Hub Peerings",
                "tags": [
                    "Networking"
                ]
            },
            "post": {
                "description": "<br\/>Creates a Stax Hub Peering.<br\/>",
                "operationId": "networking.CreateHubPeering",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Networking Hub to create the Hub Peering for.",
                        "in": "path",
                        "name": "networking_hub_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateHubPeering"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.CreateHubPeeringEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking Hub to create the Hub Peering for cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create a Hub Peering",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/prefixlists": {
            "get": {
                "description": "<br\/>Returns all the Stax Prefix Lists.<br\/>",
                "operationId": "networking.ReadPrefixLists",
                "parameters": [
                    {
                        "description": "The Stax Prefix List statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, UPDATE_IN_PROGRESS\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,DELETE_IN_PROGRESS,DELETED,DELETE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadPrefixLists"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Prefix Lists",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/prefixlists\/hubs\/{prefix_list_id}\/associations": {
            "put": {
                "description": "<br\/>Updates a Stax Hub Prefix List associations. Only supplied values are updated.<br\/>",
                "operationId": "networking.UpdateHubPrefixListAssociation",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Prefix List to update associations for.",
                        "in": "path",
                        "name": "prefix_list_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateHubPrefixListAssociation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdatePrefixListAssociationEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Prefix List cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Hub Prefix List associations",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/prefixlists\/vpcs\/{prefix_list_id}\/associations": {
            "put": {
                "description": "<br\/>Updates a Stax VPC Prefix List associations. Only supplied values are updated.<br\/>",
                "operationId": "networking.UpdateVpcPrefixListAssociation",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Prefix List to update associations for.",
                        "in": "path",
                        "name": "prefix_list_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateVpcPrefixListAssociation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdatePrefixListAssociationEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Prefix List cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update VPC Prefix List associations",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/prefixlists\/{prefix_list_id}": {
            "delete": {
                "description": "<br\/>Deletes a Stax Prefix List.<br\/>",
                "operationId": "networking.DeletePrefixList",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Prefix List to delete.",
                        "in": "path",
                        "name": "prefix_list_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.DeletePrefixListEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Prefix List to delete cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete Prefix List",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Providing the UUID of a Stax Prefix List will return a specific Stax Prefix List.<br\/>",
                "operationId": "networking.ReadPrefixList",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Prefix List to Read.",
                        "in": "path",
                        "name": "prefix_list_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax Prefix List statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, UPDATE_IN_PROGRESS\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,DELETE_IN_PROGRESS,DELETED,DELETE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadPrefixLists"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Prefix List",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>Updates a Stax Prefix List. Only supplied values are updated.<br\/>",
                "operationId": "networking.UpdatePrefixList",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Prefix List to update.",
                        "in": "path",
                        "name": "prefix_list_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdatePrefixList"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdatePrefixListEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Prefix List cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Prefix List",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/ranges": {
            "get": {
                "description": "<br\/>Returns a list of CIDR Ranges.<br\/>Can use the UUID of a CIDR Range to return a specific CIDR Range details.<br\/>",
                "operationId": "networking.ReadCidrRanges",
                "parameters": [
                    {
                        "description": "The Hub statuses to return, comma delimited.\n\nFilter options available: ACTIVE, DELETED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE",
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of range ids to fetch, comma delimited.\n",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadCidrRanges"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch CIDR Ranges",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/ranges\/{range_id}": {
            "delete": {
                "description": "<br\/>Deletes a CIDR Range within a Stax Networking Hub. No existing VPCs can be in the CIDR Range.<br\/>",
                "operationId": "networking.DeleteCidrRange",
                "parameters": [
                    {
                        "description": "The UUID of the Range to delete.",
                        "in": "path",
                        "name": "range_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadCidrRanges"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The CIDR Range to delete cannot be found or is already deleted."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete CIDR Range",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Returns a list of CIDR Ranges.<br\/>Can use the UUID of a CIDR Range to return a specific CIDR Range details.<br\/>",
                "operationId": "networking.ReadCidrRange",
                "parameters": [
                    {
                        "description": "The UUID of the Range to read.",
                        "in": "path",
                        "name": "range_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Hub statuses to return, comma delimited.\n\nFilter options available: ACTIVE, DELETED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE",
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of range ids to fetch, comma delimited.\n",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadCidrRanges"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch CIDR Range",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>Updates a CIDR Range within a Stax Networking Hub<br\/>",
                "operationId": "networking.UpdateCidrRange",
                "parameters": [
                    {
                        "description": "The UUID of the CIDR Range to update.",
                        "in": "path",
                        "name": "range_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateCidrRange"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdateCidrRange"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The CIDR Range to update cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update CIDR Range",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/vpcs": {
            "get": {
                "description": "<br\/>Returns a list of VPCs.<br\/>Can use the UUID of a VPC to return a specific VPC details.<br\/>",
                "operationId": "networking.ReadVpcs",
                "parameters": [
                    {
                        "description": "The VPC statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VPC type to return, comma delimited.\n\nFilter options available: FLAT, ISOLATED, TRANSIT, SHAREDSERVICES\n",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "default": "FLAT,ISOLATED,TRANSIT,SHAREDSERVICES",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadVpcs"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch VPCs",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/vpcs\/{vpc_id}": {
            "delete": {
                "description": "<br\/>Deletes a VPC within a Stax Networking Hub<br\/>",
                "operationId": "networking.DeleteVpc",
                "parameters": [
                    {
                        "description": "The UUID of the VPC to delete.",
                        "in": "path",
                        "name": "vpc_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.DeleteVpcEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The VPC to delete cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete VPC",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Returns a list of VPCs.<br\/>Can use the UUID of a VPC to return a specific VPC details.<br\/>",
                "operationId": "networking.ReadVpc",
                "parameters": [
                    {
                        "description": "The UUID of the VPC to read.",
                        "in": "path",
                        "name": "vpc_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The VPC statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The VPC type to return, comma delimited.\n\nFilter options available: FLAT, ISOLATED, TRANSIT, SHAREDSERVICES\n",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "default": "FLAT,ISOLATED,TRANSIT,SHAREDSERVICES",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadVpcs"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch VPC",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>Updates a VPC within a Stax Networking Hub<br\/>",
                "operationId": "networking.UpdateVpc",
                "parameters": [
                    {
                        "description": "The UUID of the VPC to update.",
                        "in": "path",
                        "name": "vpc_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateVpc"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdateVpcEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The VPC to update cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update VPC",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/vpnconnections": {
            "get": {
                "description": "<br\/>Returns all the Stax VPN Connections.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax VPN Connections associated to the Stax Networking Hub.<br\/>Providing the UUID of a Stax VPN Customer Gateway will return the Stax VPN Connections associated to the Stax VPN Customer Gateway.<br\/>Providing the UUID of a Stax VPN Connections will return a specific Stax VPN Connections details.<br\/>",
                "operationId": "networking.ReadVpnConnections",
                "parameters": [
                    {
                        "description": "The Stax VPN Connections statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadVpnConnections"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch VPN Connections",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/vpnconnections\/{vpn_connection_id}": {
            "delete": {
                "description": "<br\/>Deletes a Stax VPN Conection within a Stax VPN Customer Gateway<br\/>",
                "operationId": "networking.DeleteVpnConnection",
                "parameters": [
                    {
                        "description": "The UUID of the Stax VPN Conection.",
                        "in": "path",
                        "name": "vpn_connection_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.DeleteVpnConnectionEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax VPN Conection to delete cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete VPN Conection",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Returns all the Stax VPN Connections.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax VPN Connections associated to the Stax Networking Hub.<br\/>Providing the UUID of a Stax VPN Customer Gateway will return the Stax VPN Connections associated to the Stax VPN Customer Gateway.<br\/>Providing the UUID of a Stax VPN Connections will return a specific Stax VPN Connections details.<br\/>",
                "operationId": "networking.ReadVpnConnection",
                "parameters": [
                    {
                        "description": "The UUID of the Stax VPN Connection to fetch.",
                        "in": "path",
                        "name": "vpn_connection_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax VPN Connections statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadVpnConnections"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch VPN Connection",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>Updates the attributes for a given Stax VPN Connection. Only supplied values are updated.<br\/>",
                "operationId": "networking.UpdateVpnConnection",
                "parameters": [
                    {
                        "description": "The UUID of the Stax VPN Connection to update.",
                        "in": "path",
                        "name": "vpn_connection_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateVpnConnection"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdateVpnConnectionEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax VPN Connection to update cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update VPN Conection",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/vpnconnections\/{vpn_connection_id}\/status": {
            "get": {
                "description": "<br\/>Returns the connectivity status of the VPN Tunnels for a specific VPN Connection<br\/>",
                "operationId": "networking.ReadVpnConnectionStatus",
                "parameters": [
                    {
                        "description": "The UUID of the Stax VPN Connection.",
                        "in": "path",
                        "name": "vpn_connection_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadVpnConnectionStatus"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax VPN Connection cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch VPN Connection Status",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/vpncustomergateways": {
            "get": {
                "description": "<br\/>Returns all the Stax VPN Customer Gateways.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax VPN Customer Gateways associated to the Stax Networking Hub.<br\/>Providing the UUID of a Stax VPN Customer Gateway will return a specific Stax VPN Customer Gateways' details.<br\/>",
                "operationId": "networking.ReadVpnCustomerGateways",
                "parameters": [
                    {
                        "description": "The Stax VPN Customer Gateways statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadVpnCustomerGateways"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch VPN Customer Gateways",
                "tags": [
                    "Networking"
                ]
            },
            "post": {
                "operationId": "networking.CreateVpnCustomerGateway",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateVpnCustomerGateway"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.CreateVpnCustomerGatewayEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Resource to deploy the VPN Customer Gateway into cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Creates a Stax VPN Customer Gateway",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/vpncustomergateways\/{vpn_customer_gateway_id}": {
            "delete": {
                "operationId": "networking.DeleteVpnCustomerGateway",
                "parameters": [
                    {
                        "description": "The UUID of the VPN Customer Gateway to delete.",
                        "in": "path",
                        "name": "vpn_customer_gateway_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.DeleteVpnCustomerGatewayEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The VPN Customer Gateway to be deleted doesn't exist or is already deleted."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete a Stax VPN Customer Gateway",
                "tags": [
                    "Networking"
                ]
            },
            "get": {
                "description": "<br\/>Returns all the Stax VPN Customer Gateways.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax VPN Customer Gateways associated to the Stax Networking Hub.<br\/>Providing the UUID of a Stax VPN Customer Gateway will return a specific Stax VPN Customer Gateways' details.<br\/>",
                "operationId": "networking.ReadVpnCustomerGateway",
                "parameters": [
                    {
                        "description": "The UUID of the Stax VPN Customer Gateways to fetch.",
                        "in": "path",
                        "name": "vpn_customer_gateway_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax VPN Customer Gateways statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadVpnCustomerGateways"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch VPN Customer Gateway",
                "tags": [
                    "Networking"
                ]
            },
            "put": {
                "description": "<br\/>",
                "operationId": "networking.UpdateVpnCustomerGateway",
                "parameters": [
                    {
                        "description": "The UUID of the Stax VPN Customer Gateway to update.",
                        "in": "path",
                        "name": "vpn_customer_gateway_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.UpdateVpnCustomerGateway"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.UpdateVpnCustomerGatewayEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax VPN Customer Gateway to update cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Updates a Stax VPN Customer Gateway",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/vpncustomergateways\/{vpn_customer_gateway_id}\/vpnconnection": {
            "post": {
                "description": "<br\/>Creates a Stax VPN Connection between a Stax Networking Hub or Stax VPC and a Stax VPN Customer Gateway.<br\/><br\/>Providing a Networking Hub Id will attempt to create a VPN Connection for the VPN Customer Gateway and a Transit Gateway<br\/><br\/>Providing a VPC ID ill attempt to create a VPN Connection for the VPN Customer Gateway and a VPC's Virtual Private Gateway.<br\/>",
                "operationId": "networking.CreateVpnConnection",
                "parameters": [
                    {
                        "description": "The UUID of the Stax VPN Connection to association with a Stax Networking Hub.",
                        "in": "path",
                        "name": "vpn_customer_gateway_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/networking.CreateVpnConnection"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.CreateVpnConnectionEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Resources to create the VPN Connection for cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create VPN Connection",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/vpncustomergateways\/{vpn_customer_gateway_id}\/vpnconnections": {
            "get": {
                "description": "<br\/>Returns all the Stax VPN Connections.<br\/>Providing the UUID of a Stax Networking Hub will return the Stax VPN Connections associated to the Stax Networking Hub.<br\/>Providing the UUID of a Stax VPN Customer Gateway will return the Stax VPN Connections associated to the Stax VPN Customer Gateway.<br\/>Providing the UUID of a Stax VPN Connections will return a specific Stax VPN Connections details.<br\/>",
                "operationId": "networking.ReadGatewayVpnConnections",
                "parameters": [
                    {
                        "description": "The UUID of the Stax VPN Customer Gateways to fetch.",
                        "in": "path",
                        "name": "vpn_customer_gateway_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Stax VPN Connections statuses to return, comma delimited.\n\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadVpnConnections"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Gateway VPN Connections",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/networking\/{account_id}\/dxconnections": {
            "get": {
                "description": "<br\/>Returns all DX Connections for the specified Stax Account Id.<br\/>",
                "operationId": "networking.ReadDxConnections",
                "parameters": [
                    {
                        "description": "The UUID of the Stax Account that contains a Direct Connect connection.",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "$ref": "#\/components\/schemas\/uuidv4"
                        }
                    },
                    {
                        "description": "The Direct Connect Connection states to return, comma delimited.\n\nFilter options available: ordering,requested,pending,available,down,deleting,deleted,rejected,unknown\n",
                        "in": "query",
                        "name": "state",
                        "required": false,
                        "schema": {
                            "default": "pending,available",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/networking.ReadDxConnections"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Account cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch DX Connections",
                "tags": [
                    "Networking"
                ]
            }
        },
        "\/20190206\/organisations": {
            "get": {
                "description": "Return a list of your Stax Organisations.<br\/>A Stax Organisation is an instance of Stax which houses your AWS Accounts, Workloads and IDAM Users.<br\/>",
                "operationId": "organisations.ReadOrganisations",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/organisations.ReadOrganisations"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful. The response body contains an Organisation array."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Stax Organisations",
                "tags": [
                    "Organisations"
                ]
            }
        },
        "\/20190206\/organisations\/current": {
            "get": {
                "description": "Return the current users Organisation.<br\/>A Stax Organisation is an instance of Stax which houses your AWS Accounts, Workloads and IDAM Users.<br\/>",
                "operationId": "organisations.ReadOrganisation",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/organisations.ReadOrganisations"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful. The response body contains an Organisation array."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Stax Organisation",
                "tags": [
                    "Organisations"
                ]
            }
        },
        "\/20190206\/organisations\/organisational-units": {
            "get": {
                "description": "Return all Organisation Units in your Stax Organisation.<br\/>",
                "operationId": "organisations.ReadOrganisationalUnits",
                "parameters": [
                    {
                        "description": "The Stax Organisational Unit statuses to return, comma delimited.\nFilter options available: ACTIVE, CREATE_IN_PROGRESS, CREATE_FAILED, UPDATE_IN_PROGRESS, DELETE_IN_PROGRESS, DELETE_FAILED, DELETED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,CREATE_IN_PROGRESS,CREATE_FAILED,UPDATE_IN_PROGRESS,DELETE_IN_PROGRESS,DELETE_FAILED,DELETED",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/organisations.ReadOrganisationalUnits"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Organisational Unit cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Organisational Units",
                "tags": [
                    "OrganisationalUnits"
                ]
            }
        },
        "\/20190206\/organisations\/organisational-units\/{organisational_unit_id}": {
            "get": {
                "description": "Return the requested Organisational Unit.<br\/>",
                "operationId": "organisations.ReadOrganisationalUnit",
                "parameters": [
                    {
                        "description": "The UUID of the Organisational Unit to return.",
                        "in": "path",
                        "name": "organisational_unit_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/organisations.ReadOrganisationalUnits"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Organisational Unit",
                "tags": [
                    "OrganisationalUnits"
                ]
            }
        },
        "\/20190206\/policies": {
            "get": {
                "description": "Return all Policies in your Stax Organisation.<br\/>",
                "operationId": "organisations.ReadPolicies",
                "parameters": [
                    {
                        "description": "The Stax Policy statuses to return, comma delimited.\n\nFilter options available: ACTIVE, DELETED\n",
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE,DELETED",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/organisations.ReadPolicies"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Policies",
                "tags": [
                    "Policies"
                ]
            },
            "post": {
                "description": "Create a Policy in your Stax Organisation.<br\/>",
                "operationId": "organisations.CreatePolicy",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/organisations.CreatePolicy"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/organisations.CreatePolicyEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create Policy",
                "tags": [
                    "Policies"
                ]
            }
        },
        "\/20190206\/policies\/organisation\/{policy_id}": {
            "delete": {
                "description": "Detach a Policy from your Stax Organisation.<br\/>The policy will no longer apply to all Account Types within the Organisation.<br\/>",
                "operationId": "organisations.DetachPolicy",
                "parameters": [
                    {
                        "description": "The UUID of the Policy to detach.",
                        "in": "path",
                        "name": "policy_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/organisations.DetachPolicyEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Policy to detach cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Detach Policy from Organisation",
                "tags": [
                    "Policies"
                ]
            },
            "put": {
                "description": "Attach a Policy to your Stax Organisation.<br\/>The policy will apply to all Account Types within the Organisation.<br\/>",
                "operationId": "organisations.AttachPolicy",
                "parameters": [
                    {
                        "description": "The UUID of the Policy to attach.",
                        "in": "path",
                        "name": "policy_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/organisations.AttachPolicy"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/organisations.AttachPolicyEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Policy to attach cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Attach Policy to Organisation",
                "tags": [
                    "Policies"
                ]
            }
        },
        "\/20190206\/policies\/{policy_id}": {
            "delete": {
                "description": "Delete a Policy from your Stax Organisation.<br\/>",
                "operationId": "organisations.DeletePolicy",
                "parameters": [
                    {
                        "description": "The UUID of the Policy to delete.",
                        "in": "path",
                        "name": "policy_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/organisations.DeletePolicyEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Policy to delete cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete Policy",
                "tags": [
                    "Policies"
                ]
            },
            "get": {
                "description": "Return all Policies in your Stax Organisation.<br\/>Optionally, return the requested Policy.<br\/>",
                "operationId": "organisations.ReadPolicy",
                "parameters": [
                    {
                        "description": "The UUID of the Policy to return.",
                        "in": "path",
                        "name": "policy_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/organisations.ReadPolicies"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Policy",
                "tags": [
                    "Policies"
                ]
            },
            "put": {
                "description": "Update an existing Policy within your Stax Organisation.<br\/>",
                "operationId": "organisations.UpdatePolicy",
                "parameters": [
                    {
                        "description": "The UUID of the Policy to update.",
                        "in": "path",
                        "name": "policy_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/organisations.UpdatePolicy"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/organisations.UpdatePolicyEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Policy to update cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Policy",
                "tags": [
                    "Policies"
                ]
            }
        },
        "\/20190206\/public\/check-alias\/{alias}": {
            "get": {
                "description": "Check if an Alias is available or if it is already in use by another Stax customer.<br\/>The Alias is the unique identifier for a Customer's Stax Organisation.<br\/>",
                "operationId": "public.CheckAlias",
                "parameters": [
                    {
                        "description": "A unique string containing characters a-z, 0-9.\nHyphens can also be used, but not at the start or end of the alias.\n",
                        "in": "path",
                        "name": "alias",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/public.CheckAlias"
                                }
                            }
                        },
                        "description": "The response returned if the Alias is available and not in use by another Customer."
                    },
                    "409": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/public.CheckAlias"
                                }
                            }
                        },
                        "description": "The Alias is already in use by another Customer."
                    }
                },
                "summary": "Check Alias availability",
                "tags": [
                    "Public"
                ]
            }
        },
        "\/20190206\/public\/config": {
            "get": {
                "description": "This is an unauthenticated endpoint returning your configuration variables which are required to authenticate API requests.<br\/>",
                "operationId": "public.ReadConfig",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/public.ReadConfig"
                                }
                            }
                        },
                        "description": "Configuration values required to authenicate API requests."
                    }
                },
                "summary": "Fetch public config",
                "tags": [
                    "Public"
                ]
            }
        },
        "\/20190206\/services\/configuration": {
            "get": {
                "description": "<br\/>Returns a list of service configuration in your Stax Organisation.<br\/>Specify service name (e.g., SECURITYHUB, GUARDDUTY) to get service specific configuration.<br\/>",
                "operationId": "services:ReadConfigurations",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/services.ReadConfigurations"
                                }
                            }
                        },
                        "description": "Service configuration(s) returned if the request is successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Organisation Service Configurations",
                "tags": [
                    "ServiceConfiguration"
                ]
            }
        },
        "\/20190206\/services\/securityhub\/configuration": {
            "get": {
                "description": "<br\/>Returns the securityhub service configuration of your Stax Organisation.<br\/>",
                "operationId": "services.ReadSecurityHubConfiguration",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/services.ReadSecurityHubConfiguration"
                                }
                            }
                        },
                        "description": "Service configuration returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Stax Networking resource cannot be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch securityhub configuration for the organisation",
                "tags": [
                    "ServiceConfiguration"
                ]
            },
            "put": {
                "operationId": "services:ConfigureSecurityHub",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/services.ConfigureSecurityHub"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/services.ConfigureSecurityHubEvent"
                                }
                            }
                        },
                        "description": "Security Hub configuration has started."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "Once enabled, security hub configuration cannot be disabled."
                    },
                    "409": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "Security hub configuration cannot be updated because of a conflicting operation in progress."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Set the desired state of security hub service in your AWS Organization",
                "tags": [
                    "ServiceConfiguration"
                ]
            }
        },
        "\/20190206\/task\/{task_id}": {
            "get": {
                "description": "Return the status of the requested Task.<br\/>A Task may relate to an Account, User, Workload, Organisation or Log Event.<br\/>",
                "operationId": "tasks.ReadTask",
                "parameters": [
                    {
                        "description": "The UUID of the Task to return.",
                        "in": "path",
                        "name": "task_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/tasks.ReadTask"
                                }
                            }
                        },
                        "description": "The response returned for a valid Task."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the requested Task could not be found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch status of Task",
                "tags": [
                    "Tasks"
                ]
            }
        },
        "\/20190206\/users": {
            "get": {
                "description": "Return a list of all Users within your Stax Organisation.<br\/>To retrieve DELETED users, include the DELETED status in the status_filter.<br\/>Optionally, return the requested Users by supplying an id_filter.<br\/>",
                "operationId": "teams.ReadUsers",
                "parameters": [
                    {
                        "description": "List of Users filtered by auth origin, comma delimited.\n\nFilter Options available: Team, Federated\n",
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "schema": {
                            "default": "Team",
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of User IDs you want returned, comma delimited.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of Users filtered by Status, comma delimited.\n\nFilter Options available: ACTIVE, NEW, INVITED, DISABLED, DELETED\n\nDefaults to: ACTIVE,NEW,INVITED,DISABLED\n",
                        "in": "query",
                        "name": "status_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.ReadUsers"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful due to user input."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Stax Users and Federated Users",
                "tags": [
                    "Team"
                ]
            }
        },
        "\/20190206\/users\/me": {
            "get": {
                "description": "Returns the current logged in User.<br\/>",
                "operationId": "teams.FetchCurrentUser",
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.ReadUsers"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "User not found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Current User",
                "tags": [
                    "Team"
                ]
            }
        },
        "\/20190206\/users\/{user_id}": {
            "delete": {
                "description": "Delete a Stax User from your Stax Organisation.<br\/>",
                "operationId": "teams.DeleteUser",
                "parameters": [
                    {
                        "description": "The UUID of the User to delete.",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.DeleteUserResponse"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "User not found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete Stax User",
                "tags": [
                    "Team"
                ]
            },
            "get": {
                "description": "Return the requested User.<br\/>Attempting to fetch a DELETED user will always return User not found.<br\/>",
                "operationId": "teams.ReadUser",
                "parameters": [
                    {
                        "description": "The UUID of the User to return.",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/teams.ReadUsers"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "User not found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Stax User or Federated User",
                "tags": [
                    "Team"
                ]
            }
        },
        "\/20190206\/workload-catalogue": {
            "get": {
                "description": "Return all Workload Catalogue Items within your Stax Organisation.<br\/>Optionally, return the requested Workload Catalogue Item.<br\/>",
                "operationId": "workloads.ReadCatalogueItems",
                "parameters": [
                    {
                        "description": "The Name of the Workload Catalogue Items to return.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of Workload Catalogue Item statuses you want returned, comma delimited.\n\nFilter options available: STARTED, RUNNING, SUCCEEDED, FAILED, TIMED_OUT, ABORTED.\n",
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of Workload Catalogue Item IDs you want returned, comma delimited.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination - The page number to return.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Pagination - The number of items per page to return.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The field to sort on.",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "enum": [
                                "Id",
                                "Name",
                                "Description",
                                "Status",
                                "OrganisationId",
                                "Public",
                                "CreatedTS",
                                "CreatedBy",
                                "ModifiedTS",
                                "UserTaskId",
                                "CatalogueVersionId",
                                "Protection"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "The sort order - up or down.",
                        "in": "query",
                        "name": "sort_order",
                        "required": false,
                        "schema": {
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Do you want all Versions?",
                        "in": "query",
                        "name": "include_versions",
                        "required": false,
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Do you want the Parameter dictionary?",
                        "in": "query",
                        "name": "include_parameters",
                        "required": false,
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Do you want all the Tags?",
                        "in": "query",
                        "name": "include_tags",
                        "required": false,
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/workloads.ReadCatalogueItems"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if an invalid ID is entered."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if no catalogue is found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Workload Catalogue Items",
                "tags": [
                    "Workloads"
                ]
            },
            "post": {
                "description": "Create a new Workload Catalogue Item within your Stax Organisation.<br\/>",
                "operationId": "workloads.CreateCatalogueItem",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/workloads.CreateCatalogueItem"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateCatalogueEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the catalogue manifest is invalid."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Create Workload Catalogue Item",
                "tags": [
                    "Workloads"
                ]
            }
        },
        "\/20190206\/workload-catalogue\/manifest\/{version_id}": {
            "get": {
                "description": "Return a Workload Catalogue Manifest<br\/>",
                "operationId": "workloads.ReadCatalogueManifest",
                "parameters": [
                    {
                        "description": "The UUID of the Catalogue Version",
                        "in": "path",
                        "name": "version_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/workloads.ReadCatalogueManifest"
                                }
                            }
                        },
                        "description": "Returns the presigned url for the manifest file"
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if an invalid ID is entered."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload Catalogue Version ID can not be found or does not belong to the user."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Workload Catalogue Manifest",
                "tags": [
                    "Workloads"
                ]
            }
        },
        "\/20190206\/workload-catalogue\/template\/{version_id}\/{name}": {
            "get": {
                "description": "Return a specific Workload Catalogue Cloudformation Template<br\/>",
                "operationId": "workloads.ReadCatalogueTemplate",
                "parameters": [
                    {
                        "description": "The UUID of the Catalogue Version",
                        "in": "path",
                        "name": "version_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Retrieve the Cloudformation with this Resource Name.",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/workloads.ReadCatalogueTemplate"
                                }
                            }
                        },
                        "description": "Returns the presigned url to retrieve the template"
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if an invalid ID is entered."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is not successful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is not successful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Workload Catalogue Cloudformation Template",
                "tags": [
                    "Workloads"
                ]
            }
        },
        "\/20190206\/workload-catalogue\/{catalogue_id}": {
            "delete": {
                "description": "Delete a Workload Catalogue Item from your Stax Organisation.<br\/>Existing Workloads launched from this Catalogue will not be deleted.<br\/>",
                "operationId": "workloads.DeleteCatalogueItem",
                "parameters": [
                    {
                        "description": "The UUID of the Catalogue Item to delete.",
                        "in": "path",
                        "name": "catalogue_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteCatalogueEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload Catalogue can not be deleted due to running workloads."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload Catalogue is Protected. Protection must be disabled before you can delete it."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload Catalog ID can not be found or does not belong to the user."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete Workload Catalogue Item",
                "tags": [
                    "Workloads"
                ]
            },
            "get": {
                "description": "Return all Workload Catalogue Items within your Stax Organisation.<br\/>Optionally, return the requested Workload Catalogue Item.<br\/>",
                "operationId": "workloads.ReadCatalogueItem",
                "parameters": [
                    {
                        "description": "The UUID of the Catalogue Item to return.",
                        "in": "path",
                        "name": "catalogue_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The Name of the Workload Catalogue Items to return.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of Workload Catalogue Item statuses you want returned, comma delimited.\n\nFilter options available: STARTED, RUNNING, SUCCEEDED, FAILED, TIMED_OUT, ABORTED.\n",
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "List of Workload Catalogue Item IDs you want returned, comma delimited.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination - The page number to return.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Pagination - The number of items per page to return.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The field to sort on.",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "enum": [
                                "Id",
                                "Name",
                                "Description",
                                "Status",
                                "OrganisationId",
                                "Public",
                                "CreatedTS",
                                "CreatedBy",
                                "ModifiedTS",
                                "UserTaskId",
                                "CatalogueVersionId",
                                "Protection"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "The sort order - up or down.",
                        "in": "query",
                        "name": "sort_order",
                        "required": false,
                        "schema": {
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Do you want all Versions?",
                        "in": "query",
                        "name": "include_versions",
                        "required": false,
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Do you want the Parameter dictionary?",
                        "in": "query",
                        "name": "include_parameters",
                        "required": false,
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Do you want all the Tags?",
                        "in": "query",
                        "name": "include_tags",
                        "required": false,
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/workloads.ReadCatalogueItems"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if an invalid ID is entered."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if no catalogue is found."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Workload Catalogue Item",
                "tags": [
                    "Workloads"
                ]
            },
            "put": {
                "description": "Creates a new version of a Workload Catalogue Item.<br\/>Workload Catalogue Items have one or more versions and are immutable, so any changes are a new version.<br\/>",
                "operationId": "workloads.CreateCatalogueVersion",
                "parameters": [
                    {
                        "description": "The UUID of the Catalogue Item to update.",
                        "in": "path",
                        "name": "catalogue_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/workloads.CreateCatalogueVersion"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateVersionEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the catalogue manifest is invalid."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the catalogue has already been deleted."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload Catalog ID can not be found or does not belong to the user."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Workload Catalogue Item",
                "tags": [
                    "Workloads"
                ]
            }
        },
        "\/20190206\/workload-catalogue\/{catalogue_id}\/{version_id}": {
            "delete": {
                "description": "Delete a Workload Catalogue Version from your Stax Organisation.<br\/>Existing Workloads launched from this Workload Catalogue Version will not be deleted.<br\/>",
                "operationId": "workloads.DeleteCatalogueVersion",
                "parameters": [
                    {
                        "description": "The UUID of the Catalogue Item.",
                        "in": "path",
                        "name": "catalogue_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The UUID of the Catalogue Version to delete.",
                        "in": "path",
                        "name": "version_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteVersionEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload Catalogue Version can not be deleted due to running workloads."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload Catalogue Version can not be found or does not belong to the user."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Delete Workload Catalogue Version",
                "tags": [
                    "Workloads"
                ]
            },
            "get": {
                "description": "Return a specific Workload Catalogue Version.<br\/>",
                "operationId": "workloads.ReadCatalogueVersion",
                "parameters": [
                    {
                        "description": "The UUID of the Catalogue Item to return.",
                        "in": "path",
                        "name": "catalogue_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The UUID of the Catalogue Version to return.",
                        "in": "path",
                        "name": "version_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Do you want the Parameter dictionary?",
                        "in": "query",
                        "name": "include_parameters",
                        "required": false,
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/workloads.ReadCatalogueVersion"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if an invalid ID is entered."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload Catalog ID or Catalogue Version ID can not be found or does not belong to the user."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Workload Catalogue Version",
                "tags": [
                    "Workloads"
                ]
            }
        },
        "\/20190206\/workload-update": {
            "post": {
                "deprecated": true,
                "description": "(DEPRECATED) Update all active Workloads for a specific Workload Catalogue Item.<br\/>",
                "operationId": "workloads.UpdateAll",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/workloads.UpdateAll"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StaxEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the Catalogue is not owned by the User."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update All Workloads",
                "tags": [
                    "Workloads",
                    "Deprecated"
                ]
            }
        },
        "\/20190206\/workloads": {
            "get": {
                "description": "Return a list of all Workloads available within your Stax Organisation.<br\/>Optionally, return the requested Workload.<br\/>",
                "operationId": "workloads.ReadWorkloads",
                "parameters": [
                    {
                        "description": "The Name of the Workloads to return.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Workload statuses. Returns all Workloads with this status.\nFilter Options available: NEW, INITIALIZING, ACTIVE, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, UPDATE_IN_PROGRESS, UPDATE_FAILED, UPDATE_COMPLETE.\n",
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Account Names. Returns all Workloads deployed to these Accounts Names.",
                        "in": "query",
                        "name": "account_names",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Account Types. Returns all Workloads deployed to these Account Types.",
                        "in": "query",
                        "name": "account_types",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Account IDs. Returns all Workloads deployed to these Account IDs.",
                        "in": "query",
                        "name": "account_ids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Workload IDs. Returns all Workloads with these Workload IDs.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Workload Catalogue Names. Returns all Workloads deployed with these Workload Catalogue Names.",
                        "in": "query",
                        "name": "catalogue_names",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Workload Catalogue IDs. Returns all Workloads deployed with these Catalogue IDs.",
                        "in": "query",
                        "name": "catalogue_ids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Only return Workloads launched from this Stax Workload Catalogue Version (eg. 1.0.0). Requires catalogue_ids",
                        "in": "query",
                        "name": "catalogue_version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Only return Workloads launched from this Stax Workload Catalogue Version ID.",
                        "in": "query",
                        "name": "catalogue_version_id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination - The page number to return. Must be used with limit",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Pagination - The number of items per page to return. Must be used with offset",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The field to sort on.",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "enum": [
                                "Id",
                                "Name",
                                "AccountId",
                                "CatalogueId",
                                "CatalogueVersionId",
                                "Region",
                                "Status",
                                "UserTaskId",
                                "CreatedBy",
                                "CreatedTS",
                                "ModifiedTS",
                                "FactoryVersion"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "The sort order - up or down.",
                        "in": "query",
                        "name": "sort_order",
                        "required": false,
                        "schema": {
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/workloads.ReadWorkloadsResponse"
                                }
                            }
                        },
                        "description": "A list of all Workloads for the logged in Customer."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the Workload ID is not a valid UUID."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload ID can not be found or does not belong to the user."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Workloads",
                "tags": [
                    "Workloads"
                ]
            },
            "post": {
                "description": "Deploy a Workload within an AWS Account.<br\/>",
                "operationId": "workloads.CreateWorkload",
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/workloads.CreateWorkload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/CreateWorkloadEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StaxEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Deploy Workload",
                "tags": [
                    "Workloads"
                ]
            }
        },
        "\/20190206\/workloads\/{workload_id}": {
            "delete": {
                "description": "Terminate an active Workload within an AWS Account.<br\/>",
                "operationId": "workloads.DeleteWorkload",
                "parameters": [
                    {
                        "description": "The UUID of the Workload to delete.",
                        "in": "path",
                        "name": "workload_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DeleteWorkloadEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StaxEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "403": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StaxEvent"
                                }
                            }
                        },
                        "description": "The Workload is Protected. Protection must be disabled before you can delete it."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload ID can not be found or does not belong to the user."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Terminate Workload",
                "tags": [
                    "Workloads"
                ]
            },
            "get": {
                "description": "Return a list of all Workloads available within your Stax Organisation.<br\/>Optionally, return the requested Workload.<br\/>",
                "operationId": "workloads.ReadWorkload",
                "parameters": [
                    {
                        "description": "The UUID of the Workload Item to return.",
                        "in": "path",
                        "name": "workload_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The Name of the Workloads to return.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Workload statuses. Returns all Workloads with this status.\n\nFilter Options available: NEW, INITIALIZING, ACTIVE, CREATE_FAILED, DELETE_IN_PROGRESS, DELETED, DELETE_FAILED, UPDATE_IN_PROGRESS, UPDATE_FAILED, UPDATE_COMPLETE.\n",
                        "in": "query",
                        "name": "filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Account Names. Returns all Workloads deployed to these Accounts Names.",
                        "in": "query",
                        "name": "account_names",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Account Types. Returns all Workloads deployed to these Account Types.",
                        "in": "query",
                        "name": "account_types",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Account IDs. Returns all Workloads deployed to these Account IDs.",
                        "in": "query",
                        "name": "account_ids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Workload IDs. Returns all Workloads with these Workload IDs.",
                        "in": "query",
                        "name": "id_filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Workload Catalogue Names. Returns all Workloads deployed with these Workload Catalogue Names.",
                        "in": "query",
                        "name": "catalogue_names",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of Stax Workload Catalogue IDs. Returns all Workloads deployed with these Catalogue IDs.",
                        "in": "query",
                        "name": "catalogue_ids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Only return Workloads launched from this Stax Workload Catalogue Version (eg. 1.0.0). Requires catalogue_ids",
                        "in": "query",
                        "name": "catalogue_version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Only return Workloads launched from this Stax Workload Catalogue Version ID.",
                        "in": "query",
                        "name": "catalogue_version_id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pagination - The page number to return. Must be used with limit",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Pagination - The number of items per page to return. Must be used with offset",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The field to sort on.",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "enum": [
                                "Id",
                                "Name",
                                "AccountId",
                                "CatalogueId",
                                "CatalogueVersionId",
                                "Region",
                                "Status",
                                "UserTaskId",
                                "CreatedBy",
                                "CreatedTS",
                                "ModifiedTS",
                                "FactoryVersion"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "The sort order - up or down.",
                        "in": "query",
                        "name": "sort_order",
                        "required": false,
                        "schema": {
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Do you want all the Tags?",
                        "in": "query",
                        "name": "include_tags",
                        "required": false,
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/workloads.ReadWorkloadsResponse"
                                }
                            }
                        },
                        "description": "A list of all Workloads for the logged in Customer."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The response returned if the Workload ID is not a valid UUID."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload ID can not be found or does not belong to the user."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Fetch Workload",
                "tags": [
                    "Workloads"
                ]
            },
            "put": {
                "description": "Update a Workload running within an AWS Account.<br\/>",
                "operationId": "workloads.UpdateWorkload",
                "parameters": [
                    {
                        "description": "The UUID of the Workload to update.",
                        "in": "path",
                        "name": "workload_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/workloads.UpdateWorkload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/UpdateWorkloadEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is successful."
                    },
                    "400": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/StaxEvent"
                                }
                            }
                        },
                        "description": "The response returned if the request is unsuccessful."
                    },
                    "404": {
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Error"
                                }
                            }
                        },
                        "description": "The Workload ID can not be found or does not belong to the user."
                    }
                },
                "security": [
                    {
                        "sigv4": []
                    }
                ],
                "summary": "Update Workload",
                "tags": [
                    "Workloads"
                ]
            }
        }
    },
    "servers": [
        {
            "url": "https:\/\/api.au1.staxapp.cloud"
        }
    ],
    "tags": [
        {
            "description": "Stax Accounts feature allows you to securely and easily create, view and centrally manage your AWS Accounts and get started deploying applications, workloads and resources.",
            "name": "Accounts"
        },
        {
            "description": "Deprecated API operations which are marked for retirement.",
            "name": "Deprecated"
        },
        {
            "description": "Stax Groups can be assigned access to either built-in Stax roles by assigning AWS roles to a group, or to a customized Permission Set.",
            "name": "Groups"
        },
        {
            "description": "The Stax Identity Service governs access to Stax and to Stax-managed AWS accounts.",
            "name": "IDAM"
        },
        {
            "description": "Stax Networks provides a simple and flexible way of deploying AWS network topologies.",
            "name": "Networking"
        },
        {
            "description": "A Stax Organisation is an instance of Stax which houses your AWS Accounts, Workloads and Users.",
            "name": "Organisations"
        },
        {
            "description": "Stax Policies are AWS Service Control Policies that can be attached to a Stax Organization or an Account Type.",
            "name": "Policies"
        },
        {
            "description": "Preview operations which could change in the future.",
            "name": "Preview"
        },
        {
            "description": "Stax public discovery.",
            "name": "Public"
        },
        {
            "description": "Stax Tasks enables you to monitor async operations.",
            "name": "Tasks"
        },
        {
            "description": "Stax Users can be granted different levels of access to both Stax itself, and to the AWS accounts managed by Stax.",
            "name": "Team"
        },
        {
            "description": "Stax Workloads are packages of infrastructure-as-code that can be deployed to one or more AWS accounts from a single location.",
            "name": "Workloads"
        }
    ]
}